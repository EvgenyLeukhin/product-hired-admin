{"version":3,"sources":["components/Header/HeaderTitle.js","ph-admin/components/Table/index.jsx","ph-admin/components/Alerts/index.jsx","ph-admin/components/Modals/Edit/EditModal.jsx","ph-admin/components/AddButton/index.jsx","ph-admin/components/Modals/Add/AddModal.jsx","ph-admin/components/Modals/Delete/DeleteModal.jsx","ph-admin/components/Table/customFiltering.js","ph-admin/routes/Jobs/api/getCompanies.js","ph-admin/routes/Jobs/api/getUsers.js","ph-admin/routes/Jobs/add.jsx","ph-admin/routes/Jobs/delete.jsx","ph-admin/routes/Jobs/api/getSkills.js","ph-admin/routes/Jobs/api/getLocations.js","ph-admin/routes/Jobs/api/getVacancies.js","ph-admin/routes/Jobs/api/seniorityOptions.js","ph-admin/routes/Jobs/api/statusOptions.js","ph-admin/routes/Jobs/api/planOptions.js","ph-admin/routes/Jobs/edit.jsx","ph-admin/routes/Jobs/api/getJobs.js","ph-admin/routes/Jobs/api/getJobsCount.js","ph-admin/routes/Jobs/api/addJob.js","ph-admin/routes/Jobs/api/deleteJob.js","ph-admin/routes/Jobs/api/editJob.js","ph-admin/routes/Jobs/api/getCompany.js","ph-admin/routes/Jobs/api/getUser.js","ph-admin/routes/Jobs/api/getVacancy.js","ph-admin/routes/Jobs/api/uploadLogo.js","ph-admin/routes/Jobs/api/uploadCover.js","ph-admin/routes/Jobs/columns.js","ph-admin/routes/Jobs/index.jsx"],"names":["withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","setHeaderTitle","headerTitle","pubsub","publish","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","assign","props","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_table__WEBPACK_IMPORTED_MODULE_1__","Table","resizable","filterable","className","Alerts","_ref","type","original","errorText","_useState","useState","_useState2","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","visible","setVisible","name","surname","concat","react__WEBPACK_IMPORTED_MODULE_1___default","Fragment","reactstrap__WEBPACK_IMPORTED_MODULE_2__","color","id","isOpen","toggle","react_modal__WEBPACK_IMPORTED_MODULE_1__","react_modal__WEBPACK_IMPORTED_MODULE_1___default","EditModal","modalLoading","closeModal","ariaHideApp","overlayClassName","portalClassName","onRequestClose","children","reactstrap__WEBPACK_IMPORTED_MODULE_1__","classnames__WEBPACK_IMPORTED_MODULE_2__","classnames__WEBPACK_IMPORTED_MODULE_2___default","AddButton","text","loading","addClick","onClick","cln","is-loading","AddModal","DeleteModal","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","customFiltering","filter","onChange","style","width","event","target","debounceTimeout","getCompanies","inputValue","token","JSON","parse","localStorage","getItem","axios","get","API_URL","subUrl","params","where","like","limit","headers","Authorization","getUsers","or","email","AddJob","company","user","onSubmit","onChangeCompany","onChangeUser","react_default","action","htmlFor","required","autoComplete","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","loadOptions","then","res","data","getOptionValue","o","getOptionLabel","Spinner","Button","outline","disabled","DeleteJob","deleteSubmit","getSkills","markers","getLocations","getVacancies","seniorityOptions","label","statusOptions","planOptions","EditJob","created","modified","published","views","impressions","details","experience_from","experience_up","seniority","seniorityObj","skills","status","statusObj","plan_id","planObj","company_id","locations","employer_id","vacancy","vacancy_role","logo","cover","logoSwitcher","coverSwitcher","logoLoading","coverLoading","fileInputLogo","fileInputCover","onUploadLogo","onUploadCover","onDeleteLogo","onDeleteCover","deleteClick","onChangeDetails","onChangeSeniority","onChangeSkills","onChangeStatus","onChangePlan","onChangeLocations","onChangeVacancy","createdString","substring","modifiedString","logoUrl","coverUrl","includes","logoSplit","split","pop","coverSplit","hidden","dist_react_select_browser_esm","options","isMulti","min","max","src","alt","ref","lib_default","isEmpty","getJobs","state","pageSize","page","filtered","sorted","skip","order","forEach","i","desc","getJobsCount","addJob","application_type","application_link","hash","post","deleteJob","delete","editJob","skillsNames","length","push","skills_string","toString","role","Date","toISOString","getCompany","getUser","getVacancy","uploadLogo","formData","Content-Type","uploadCover","columns","Header","accessor","textAlign","Cell","Filter","_ref2","fontWeight","_ref3","_ref4","sortable","_ref5","_ref6","_ref7","_ref8","_ref9","Jobs","React","createRef","jobs","jobsCount","tableLoading","addModalIsOpen","editModalIsOpen","deleteModalIsOpen","user_id","resetFields","_this","setState","e","defineProperty","catchErrors","error","response","removeItem","history","alertType","alertIsOpen","alertErrorText","addSubmit","preventDefault","assertThisInitialized","_this$state2","newData","objectSpread","console","log","editAfterAdd","catch","editClick","_this$setState2","stopPropagation","map","editSubmit","_this$state3","setTimeout","dataWitoutDeleted","_this$state4","FormData","uploadLogoFile","current","files","append","uploadCoverFile","closeAddModal","closeEditModal","closeDeleteModal","_React$createElement","_this2","_this$state5","controlsColumn","Jobs_delete","add","Jobs_edit","manual","pages","toConsumableArray","getTdProps","rowInfo","column","instance","undefined","onFetchData","Math","ceil","count"],"mappings":"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","file":"static/js/5.7d33fdb8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport './styles.scss';\n\nconst Table = props => (\n  <ReactTable\n    {...props}\n    resizable={true}\n    filterable={true}\n    className=\"-striped -highlight\"\n  />\n);\n\nexport default Table;\n\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, original, errorText }) => {\n  const [visible, setVisible] = useState(true);\n  const onDismiss = () => setVisible(false);\n  const name = original.surname\n    ? `${original.name} ${original.surname}`\n    : `${original.name}`;\n\n  return (\n    <>\n      {\n        // add //\n        type === 'add' && <Alert color=\"success\">New item is added</Alert> ||\n\n        // edit //\n        type === 'edit' && (\n          <Alert color=\"warning\">\n            {`\"${original.id}`} - <b>{name} is edited</b>\n          </Alert>\n        ) ||\n\n        // delete //\n        type === 'delete' && (\n          <Alert color=\"danger\">\n            {`\"${original.id}`} - <b>{name} is deleted</b>\n          </Alert>\n        ) ||\n\n        // error //\n        type === 'error' && (\n          <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n        )\n      }\n    </>\n  )\n}\n\nexport default Alerts;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport './styles.scss';\nimport './logo-cover.scss';\nimport './image.scss';\n\nconst EditModal = props => {\n  const { isOpen, modalLoading, closeModal } = props;\n\n  return (\n    <ReactModal\n      {...props}\n      ariaHideApp={false}\n      isOpen={isOpen}\n      overlayClassName=\"ReactModal__Overlay\"\n      className={`ReactModal ReactModal__edit`}\n      portalClassName={'ReactModal__Portal__edit'}\n      onRequestClose={modalLoading ? false : closeModal}\n    >\n      {props.children}\n    </ReactModal>\n  )\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\nimport './styles.scss';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport './styles.scss';\nimport './logo-cover.scss';\n\nconst AddModal = props => {\n  const { isOpen, modalLoading, closeModal } = props;\n\n  return (\n    <ReactModal\n      {...props}\n      ariaHideApp={false}\n      isOpen={isOpen}\n      overlayClassName=\"ReactModal__Overlay\"\n      className={`ReactModal ReactModal__add`}\n      portalClassName={'ReactModal__Portal__add'}\n      onRequestClose={modalLoading ? false : closeModal}\n    >\n      {props.children}\n    </ReactModal>\n  )\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport './styles.scss';\n\nconst DeleteModal = props => {\n  const { isOpen, modalLoading, closeModal } = props;\n\n  return (\n    <ReactModal\n      {...props}\n      ariaHideApp={false}\n      isOpen={isOpen}\n      overlayClassName=\"ReactModal__Overlay\"\n      className={`ReactModal ReactModal__delete`}\n      portalClassName={'ReactModal__Portal__delete'}\n      onRequestClose={modalLoading ? false : closeModal}\n    >\n      {props.children}\n    </ReactModal>\n  )\n}\n\nexport default DeleteModal;\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getCompanies = inputValue => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 10\n        }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getCompanies;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getUsers = inputValue => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'or': [\n              { 'name':    { 'like': `%${inputValue}%`} },\n              { 'surname': { 'like': `%${inputValue}%`} },\n              { 'email':   { 'like': `%${inputValue}%`} }\n            ]\n          },\n          'limit': 10\n        }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getUsers;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport AddModal from '../../components/Modals/Add/AddModal';\n\nimport Spinner from '../../../components/Spinner';\nimport { Button } from \"reactstrap\";\n\nimport getCompanies from './api/getCompanies';\nimport getUsers     from './api/getUsers';\n\n\nconst AddJob = ({\n  name, company, user,  // fields\n  isOpen, closeModal, onChange, onSubmit, modalLoading,\n\n  onChangeCompany, onChangeUser\n}) => {\n\n  return (\n    <AddModal isOpen={isOpen} modalLoading={modalLoading} closeModal={closeModal}>\n      <section className=\"section-container add-container\">\n        <h4 className=\"add-container__title\">Add user</h4>\n\n        <span className=\"ion-close-round add-container__close\" onClick={closeModal} />\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={onSubmit}>\n\n              <fieldset>\n                <div className=\"form-group row\">\n                  <div className=\"col-md-12\">\n                    <label htmlFor=\"add-name\">Job title</label>\n\n                    <input\n                      required\n                      autoComplete=\"off\"\n                      name=\"name\"\n                      value={name}\n                      id=\"add-name\"\n                      onChange={onChange}\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <label htmlFor=\"add-surname\">Company</label>\n\n                    <AsyncSelect\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getCompanies(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => o.name}\n                      onChange={onChangeCompany}\n                      value={company}\n                    />\n                  </div>\n\n                  <div className=\"col-md-6\">\n                    <label htmlFor=\"add-password\">User</label>\n\n                    <AsyncSelect\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getUsers(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => `${o.name} ${o.surname} ${o.email}`}\n                      onChange={onChangeUser}\n                      value={user}\n                    />\n\n                  </div>\n                </div>\n              </fieldset>\n\n              {\n                modalLoading ? (\n                  <div className=\"add-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"add-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button disabled={!name || !company.name || !user.name} outline color=\"primary\" type=\"submit\">Save</Button>\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    </AddModal>\n  );\n}\n\nexport default AddJob;\n","import React from 'react';\nimport DeleteModal from '../../components/Modals/Delete/DeleteModal';\n\nimport Spinner from '../../../components/Spinner';\nimport { Button } from \"reactstrap\";\n\n\nconst DeleteJob = ({ isOpen, modalLoading, closeModal, original, deleteSubmit }) => (\n  <DeleteModal isOpen={isOpen} modalLoading={modalLoading} closeModal={closeModal}>\n    <section className=\"section-container delete-container\">\n      <span className=\"ion-close-round ReactModal__delete__close\" onClick={closeModal} />\n\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        <span>{original.id} - <b>{original.name}</b>?</span>\n      </div>\n\n      {\n        modalLoading ? (\n          <div className=\"ReactModal__delete__is-loading\">\n            <Spinner />\n          </div>\n        ) : (\n          <footer className=\"ReactModal__delete__buttons\">\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteSubmit}>Delete</Button>\n          </footer>\n        )\n      }\n    </section>\n  </DeleteModal>\n);\n\n\nexport default DeleteJob;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getSkills = inputValue => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'markers': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getSkills;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getLocations = inputValue => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getLocations;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getVacancies = inputValue => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 10\n        }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getVacancies;\n","const seniorityOptions = [\n  { value: 1, label: 'Junior' },\n  { value: 2, label: 'Mid level' },\n  { value: 3, label: 'Senior' },\n  { value: 4, label: 'Managment' },\n];\n\nexport default seniorityOptions;\n","const statusOptions = [\n  { value: 'public',  label: 'Public' },\n  { value: 'draft',   label: 'Draft' },\n  { value: 'expired', label: 'Expired' },\n];\n\nexport default statusOptions;\n","const planOptions = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nexport default planOptions;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/async';\n\nimport { API_URL, subUrl } from '../../api/apiUrl';\n\nimport isEmpty from 'lodash/isEmpty';\n\nimport EditModal from '../../components/Modals/Edit/EditModal';\n\nimport Spinner from '../../../components/Spinner';\nimport { Button } from \"reactstrap\";\n\nimport getSkills       from './api/getSkills';\nimport getLocations    from './api/getLocations';\nimport getCompanies    from './api/getCompanies';\nimport getUsers        from './api/getUsers';\nimport getVacancies    from './api/getVacancies';\n\nimport seniorityOptions from './api/seniorityOptions';\nimport statusOptions from './api/statusOptions';\nimport planOptions from './api/planOptions';\n\nimport 'react-quill/dist/quill.snow.css';\nimport './edit.scss';\n\n\nconst EditJob = ({\n  // fields\n  original, id, name, created, modified, published, views, impressions, details, experience_from, experience_up,\n  seniority, seniorityObj, skills, status, statusObj, plan_id, planObj, company, company_id, locations,\n  user, employer_id, vacancy, vacancy_role,\n\n  // images //\n  logo, cover, logoSwitcher, coverSwitcher, logoLoading, coverLoading,\n  fileInputLogo, fileInputCover, onUploadLogo, onUploadCover,  onDeleteLogo, onDeleteCover,\n\n\n  // modal\n  isOpen, closeModal, onSubmit, modalLoading, deleteClick,\n\n  // onchanges\n  onChange, onChangeDetails, onChangeSeniority, onChangeSkills, onChangeStatus, onChangePlan, onChangeLocations, onChangeCompany, onChangeUser, onChangeVacancy,\n}) => {\n\n  // console.log('EditJob locations:', original); // original\n  const createdString = created && `${created.substring(0, 10)}, ${created.substring(11, 16)} UTC`;\n  const modifiedString = modified && `${modified.substring(0, 10)}, ${modified.substring(11, 16)} UTC`;\n\n  let logoUrl = `${API_URL}/${subUrl}/containers/logo/download/${logo}`;\n  let coverUrl = `${API_URL}/${subUrl}/containers/cover/download/${cover}`;\n\n  // fix problem with open item after additing image\n  if (!logoSwitcher && logo && logo.includes('http')) {\n    const logoSplit = logo.split('/').pop();\n    logoUrl = `${API_URL}/${subUrl}/containers/logo/download/${logoSplit}`;\n  }\n\n  if (!coverSwitcher && cover && cover.includes('http')) {\n    const coverSplit = cover.split('/').pop();\n    coverUrl = `${API_URL}/${subUrl}/containers/cover/download/${coverSplit}`;\n  }\n\n  return (\n    <EditModal isOpen={isOpen} modalLoading={modalLoading} closeModal={closeModal}>\n      <section className=\"section-container edit-container edit-job\">\n        <h4 className=\"edit-container__title\">\n          Edit&nbsp;<b>{`\"${original.id} - ${original.name}\"`}</b>\n        </h4>\n\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={onSubmit}>\n\n              <fieldset>\n                <div className=\"form-group row top-fields\">\n                  {/* created */}\n                  <div className=\"col-md-3 col-sm-6\">\n                    <b>Created</b>\n                    <span>{createdString || ''}</span>\n                  </div>\n\n                  {/* modified */}\n                  <div className=\"col-md-3 col-sm-6\">\n                    <b>Modified</b>\n                    <span>{modifiedString || ''}</span>\n                  </div>\n\n                  {/* views */}\n                  <div className=\"col-md-3 col-sm-6\">\n                    <b>Views</b>\n                    <span>{views || 0}</span>\n                  </div>\n\n                  {/* impressions */}\n                  <div className=\"col-md-3 col-sm-6\">\n                    <b>Impressions</b>\n                    <span>{impressions || 0}</span>\n                  </div>\n                </div>\n              </fieldset>\n\n\n              <fieldset>\n                <div className=\"form-group row\">\n\n                  {/* name */}\n                  <div className=\"col-md-5\">\n                    <label htmlFor=\"edit-name\">Job title</label>\n                    <input\n                      name=\"name\"\n                      type=\"text\"\n                      value={name}\n                      id=\"edit-name\"\n                      onChange={onChange}\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  {/* plan */}\n                  <div className=\"col-md-2\">\n                    <label htmlFor=\"edit-plan_id\">Plan</label>\n                    <input\n                      hidden\n                      name=\"plan_id\"\n                      value={plan_id}\n                      id=\"edit-plan_id\"\n                      onChange={onChange}\n                      type=\"number\"\n                      className=\"form-control\"\n                    />\n\n                    <Select\n                      value={planObj}\n                      onChange={onChangePlan}\n                      options={planOptions}\n                    />\n                  </div>\n\n                  {/* published */}\n                  <div className=\"col-md-3\">\n                    <label htmlFor=\"edit-published\">Published</label>\n                    <input\n                      type=\"date\"\n                      name=\"published\"\n                      id=\"edit-published\"\n                      value={published && published.substring(0, 10)}\n                      onChange={onChange}\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  {/* status */}\n                  <div className=\"col-md-2\">\n                    <label htmlFor=\"edit-status\">Status</label>\n                    <input\n                      hidden\n                      name=\"status\"\n                      value={status}\n                      id=\"edit-status\"\n                      onChange={onChange}\n                      type=\"text\"\n                      className=\"form-control\"\n                    />\n\n                    <Select\n                      value={statusObj}\n                      onChange={onChangeStatus}\n                      options={statusOptions}\n                    />\n                  </div>\n\n                  {/* user */}\n                  <div className=\"col-md-4\">\n                    <label htmlFor=\"edit-employer_id\">User</label>\n                    <input\n                      hidden\n                      name=\"employer_id\"\n                      value={employer_id}\n                      id=\"edit-employer_id\"\n                      onChange={onChange}\n                      type=\"number\"\n                      className=\"form-control\"\n                    />\n\n                    <AsyncSelect\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getUsers(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => `${o.name} ${o.surname} ${o.email}`}\n                      onChange={onChangeUser}\n                      value={user}\n                    />\n                  </div>\n\n                  {/* company */}\n                  <div className=\"col-md-3\">\n                    <label htmlFor=\"edit-company_id\">Company</label>\n                    <input\n                      hidden\n                      name=\"company_id\"\n                      value={company_id}\n                      id=\"edit-company_id\"\n                      onChange={onChange}\n                      type=\"number\"\n                      className=\"form-control\"\n                    />\n\n                    <AsyncSelect\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getCompanies(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => `${o.name}`}\n                      onChange={onChangeCompany}\n                      value={company}\n                    />\n                  </div>\n\n                  {/* locations */}\n                  <div className=\"col-md-5\">\n                    <label htmlFor=\"edit-locations\">Locations</label>\n                    <AsyncSelect\n                      isMulti={true}\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getLocations(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => `${o.name}`}\n                      onChange={onChangeLocations}\n                      value={locations}\n                    />\n                  </div>\n\n                  {/* vacancy */}\n                  <div className=\"col-md-3\">\n                    <label htmlFor=\"edit-vacancy_role\">Role</label>\n                    <input\n                      hidden\n                      name=\"vacancy_role\"\n                      value={vacancy_role}\n                      id=\"edit-vacancy_role\"\n                      onChange={onChange}\n                      type=\"number\"\n                      className=\"form-control\"\n                    />\n\n                    <AsyncSelect\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getVacancies(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => o.name}\n                      value={vacancy}\n                      onChange={onChangeVacancy}\n                    />\n                  </div>\n\n                  {/* experience_from */}\n                  <div className=\"col-md-3\">\n                    <label htmlFor=\"edit-experience_from\">Experience, from</label>\n                    <input\n                      min={0}\n                      max={30}\n                      type=\"number\"\n                      onChange={onChange}\n                      name=\"experience_from\"\n                      value={experience_from}\n                      id=\"edit-experience_from\"\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  {/* experience_to */}\n                  <div className=\"col-md-3\">\n                    <label htmlFor=\"edit-experience_up\">Experience, to</label>\n                    <input\n                      min={0}\n                      max={30}\n                      type=\"number\"\n                      onChange={onChange}\n                      name=\"experience_up\"\n                      value={experience_up}\n                      id=\"edit-experience_up\"\n                      className=\"form-control\"\n                    />\n                  </div>\n\n                  {/* seniority */}\n                  <div className=\"col-md-3\">\n                    <label htmlFor=\"edit-seniority\">Seniority</label>\n\n                    <input\n                      hidden\n                      name=\"seniority\"\n                      value={seniority}\n                      id=\"edit-seniority\"\n                      onChange={onChange}\n                      type=\"number\"\n                      className=\"form-control\"\n                    />\n\n                    <Select\n                      value={seniorityObj}\n                      onChange={onChangeSeniority}\n                      options={seniorityOptions}\n                    />\n                  </div>\n\n                  {/* skills */}\n                  <div className=\"col-md-12\">\n                    <label htmlFor=\"edit-skills\">Skills</label>\n                    <AsyncSelect\n                      isMulti={true}\n                      menuPlacement=\"auto\"\n                      cacheOptions={true}\n                      defaultOptions={true}\n                      loadOptions={inputValue => getSkills(inputValue).then(res => res.data)}\n                      getOptionValue={o => o.id}\n                      getOptionLabel={o => o.name}\n                      onChange={onChangeSkills}\n                      value={skills}\n                    />\n                  </div>\n\n                  {/* logo */}\n                  <div className=\"col-md-6  edit-logo\">\n                    <label htmlFor=\"edit-logo\">Logo</label>\n                    {\n                      !logoSwitcher ? (\n                        logo ? <img className=\"logo\" src={logoUrl} alt=\"logo\" />\n                            : <div className=\"no-logo\">No logo</div>\n                      ) : (\n                        logoLoading ? <Spinner /> : (\n                          logo && <img className=\"logo\" src={logo} alt=\"logo\" />\n                        )\n                      )\n                    }\n                    <input\n                      id=\"edit-logo\"\n                      type=\"file\"\n                      className=\"input-file-custom\"\n                      ref={fileInputLogo}\n                      onChange={onUploadLogo}\n                    />\n\n                    <div className=\"edit-logo__buttons\">\n                      <label htmlFor=\"edit-logo\" className=\"input-file-label  btn btn-light\">\n                        <i className=\"ion-image\" />&nbsp;\n                        <span>Load logo</span>\n                      </label>\n                      <Button disabled={!logo || !logoUrl} outline color=\"danger\" onClick={onDeleteLogo}>Delete logo</Button>\n                    </div>\n                  </div>\n\n                  {/* cover */}\n                  <div className=\"col-md-6  edit-cover\">\n                    <label htmlFor=\"edit-cover\">Cover</label>\n                    {\n                      !coverSwitcher ? (\n                        cover ? <img className=\"cover\" src={coverUrl} alt=\"cover\" />\n                              : <div className=\"no-cover\">No cover</div>\n                      ) : (\n                        coverLoading ? <Spinner /> : (\n                          cover && <img className=\"cover\" src={cover} alt=\"cover\" />\n                        )\n                      )\n                    }\n                    <input\n                      id=\"edit-cover\"\n                      type=\"file\"\n                      className=\"input-file-custom\"\n                      ref={fileInputCover}\n                      onChange={onUploadCover}\n                    />\n                    <div className=\"edit-cover__buttons\">\n                      <label htmlFor=\"edit-cover\" className=\"input-file-label  btn btn-light\">\n                        <i className=\"ion-image\" />&nbsp;\n                        <span>Load cover</span>\n                      </label>\n                      <Button disabled={!cover || !coverUrl} outline color=\"danger\" onClick={onDeleteCover}>Delete cover</Button>\n                    </div>\n                  </div>\n\n                  {/* details */}\n                  <div className=\"col-md-12\">\n                    <label htmlFor=\"edit-details\">Details</label>\n                    <ReactQuill value={details} onChange={onChangeDetails} />\n                  </div>\n                </div>\n              </fieldset>\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"danger\" onClick={deleteClick}>Delete</Button>\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button disabled={!name || isEmpty(locations) || isEmpty(skills)} outline color=\"primary\" type=\"submit\">Save</Button>\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    </EditModal>\n  );\n}\n\nexport default EditJob;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './../../../api/apiUrl';\n\nconst getJobs = state => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: 'id DESC'\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/vacancies`, {\n    params: { filter },\n    headers: { Authorization: token } // backend doesn't check it\n  })\n};\n\nexport default getJobs;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './../../../api/apiUrl';\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getJobsCount = state => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/vacancies/count`, {\n    // inject where to params\n    params: { where },\n    headers: { Authorization: token } // backend doesn't check it\n  })\n};\n\nexport default getJobsCount;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst addJob = state => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n  const {\n    name, company, user, details, vacancy_role, seniority, experience_from, experience_up, application_type, application_link, plan_id, hash, status\n  } =  state;\n\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies`,\n\n    {\n      name,\n      company_id: company.id,\n      employer_id: user.id,\n\n      // default fields from the state when add\n      details, vacancy_role, seniority, experience_from, experience_up, application_type, application_link, plan_id, hash, status,\n    },\n\n    {\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default addJob;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst deleteJob = id => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.delete(\n    `${API_URL}/${subUrl}/vacancies/${id}`,\n    {\n      headers: { Authorization: token }\n    }\n  )\n};\n\nexport default deleteJob;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst editJob = state => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n  const {\n    id,\n    name,\n    details,\n    logo,\n    cover,\n    skills,\n    locations,\n    vacancy,\n    company,\n    status,\n    seniority,\n    experience_up,\n    experience_from,\n    employer_id,\n    plan_id,\n    published\n    // created,\n  } = state;\n\n  // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n  const skillsNames = [];\n  for (let i = 0; i < skills.length; i++) {\n    skillsNames.push(skills[i].name)\n  };\n  const skills_string = skillsNames.toString();\n\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/${id}/updateJob`,\n\n    {\n      name,\n      details,\n      logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n      cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n      skills_string,\n      locations,\n      company: company.length ? company[0].name : company.name,\n      employer_id,\n      plan_id,\n      status,\n      seniority,\n      experience_from,\n      experience_up,\n      role: vacancy,\n      modified: `${new Date().toISOString()}`,\n      published,\n    },\n\n    {\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default editJob;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getCompany = company_id => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/companies/${company_id}`,\n    {\n      params: {\n        'filter': { 'limit': 1 }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getCompany;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getUser = employer_id => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/users/${employer_id}`,\n    {\n      params: {\n        'filter': { 'limit': 1 }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getUser;\n","import axios from 'axios';\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\nconst getVacancy = vacancy_role => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles/${vacancy_role}`,\n    {\n      params: {\n        'filter': { 'limit': 1 }\n      },\n      headers: { Authorization: token }\n    }\n  );\n}\n\nexport default getVacancy;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\n\nconst uploadLogo = formData => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`,\n\n    formData,\n\n    {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: token\n      }\n    }\n  );\n}\n\nexport default uploadLogo;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from '../../../api/apiUrl';\n\n\nconst uploadCover = formData => {\n  const token = JSON.parse(localStorage.getItem('ph-admin-user-data')).id;\n\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`,\n\n    formData,\n\n    {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: token\n      }\n    }\n  );\n}\n\nexport default uploadCover;\n","import React from \"react\";\n\nimport customFiltering from './../../components/Table/customFiltering';\n\n\nconst columns = [\n  {\n    Header: 'Id',\n    accessor: 'id',\n    width: 60,\n    style: { textAlign: 'right' },\n    Cell: ({ original }) => <div>{original.id || '...'}</div>,\n    Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n  },\n  {\n    Header: 'Job',\n    accessor: 'name',\n    style: { fontWeight: 'bold' },\n    Cell: ({ original }) => <div>{original.name || '...'}</div>,\n    Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n  },\n  {\n    Header: 'Company',\n    accessor: 'company',\n    sortable: false,\n    filterable: false,\n    Cell: ({ original }) => {\n      // fix it later\n      if (original.company) {\n        return <div>{original.company.name}</div>\n      } else return <div>...</div>\n    },\n  },\n  {\n    Header: 'Status',\n    accessor: 'status',\n    width: 60,\n    Cell: ({ original }) => <div>{original.status || '...'}</div>,\n    Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n  },\n  {\n    Header: 'Created',\n    accessor: 'created',\n    width: 120,\n    Cell: ({ original }) => (\n      <div style={{ textAlign: 'center' }}>\n        <span>{original.created.substring(0, 10) || '...'}</span>\n      </div>\n    ),\n    Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n  }\n];\n\nexport default columns;\n","import React from \"react\";\n\nimport { API_URL, subUrl } from '../../api/apiUrl';\n\nimport Table     from '../../components/Table';\nimport Alerts    from '../../components/Alerts';\nimport AddButton from '../../components/AddButton';\n\nimport AddJob    from './add';\nimport DeleteJob from './delete';\nimport EditJob   from './edit';\n\nimport { withHeaderTitle } from '../../../components/Header/HeaderTitle';\n\n\n// api\nimport getJobs      from './api/getJobs';\nimport getJobsCount from './api/getJobsCount';\nimport addJob       from './api/addJob';\nimport deleteJob    from './api/deleteJob';\nimport editJob      from './api/editJob';\nimport getCompany   from './api/getCompany';\nimport getUser      from './api/getUser';\nimport getVacancy   from './api/getVacancy';\nimport uploadLogo   from './api/uploadLogo';\nimport uploadCover  from './api/uploadCover';\n\nimport seniorityOptions from './api/seniorityOptions';\nimport planOptions      from './api/planOptions';\nimport statusOptions    from \"./api/statusOptions\";\n\nimport columns from './columns';\n\nimport './edit.scss';\n\n\nclass Jobs extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Jobs') }\n\n  state = {\n    // table\n    jobs: [],\n    jobsCount: null,\n    tableLoading: false,\n    original: {},\n\n    // modals\n    addModalIsOpen: false,\n    editModalIsOpen: false,\n    deleteModalIsOpen: false,\n    modalLoading: false,\n\n    // fields\n    id: null,\n    created: '',\n    modified: '',\n    published: `${new Date().toISOString()}`,\n    views: null, impressions: '',\n\n    skills: [], locations: [],\n    seniorityObj: {}, seniority: null,\n    statusObj: { label: 'Draft', value: 'draft' }, status: 'draft',\n    planObj: { label: \"Free\", value: 1 }, plan_id: 1,\n\n    name: '',\n    company: { name: '' }, company_id: null,\n    user: { name: '', surname: '', email: '' }, user_id: null, employer_id: null,\n    experience_from: 0, experience_up: 1,\n    vacancy: { id: 1, name: 'Product Manager' }, vacancy_role: 1,\n    details: \"<p></p>\",\n\n    // images\n    logo: '', logoUrl: '', cover: '', coverUrl: '',\n    logoLoading: false, coverLoading: false,\n    logoSwitcher: false, coverSwitcher: false,\n\n    // default state fields when add job\n    application_link: null, application_type: 0, hash: null,\n    experience_from: 0, experience_up: 1,\n\n    // alerts\n    alertIsOpen: false,\n    alertType: '',\n    alertErrorText: '',\n  }\n\n  resetFields = () => {\n    this.setState({\n      id: null, created: '', modified: '', views: null, impressions: '',\n      skills: [], locations: [], published: `${new Date().toISOString()}`,\n      seniorityObj: {}, seniority: null,\n      statusObj: { label: 'Draft', value: 'draft' }, status: 'draft',\n      planObj: { label: \"Free\", value: 1 }, plan_id: 1,\n      name: '', company: { name: '' }, company_id: null,\n      user: { name: '', surname: '', email: '' }, user_id: null, employer_id: null,\n      experience_from: 0, experience_up: 1,\n      vacancy: { id: 1, name: 'Product Manager' }, vacancy_role: 1,\n      details: \"<p></p>\", logo: '', cover: '',\n    })\n  }\n\n  // onChanges\n  onChange            = e            => this.setState({ [e.target.name]: e.target.value });\n  onChangeCompany     = company      => this.setState({ company });\n  onChangeLocations   = locations    => this.setState({ locations });\n  onChangeDetails     = details      => this.setState({ details });\n  onChangeSkills      = skills       => this.setState({ skills });\n  onChangeSeniority   = seniorityObj => this.setState({ seniorityObj, seniority: seniorityObj.value });\n  onChangeStatus      = statusObj    => this.setState({ statusObj, status: statusObj.value });\n  onChangePlan        = planObj      => this.setState({ planObj, plan_id: planObj.value });\n  onChangeCompany     = company      => this.setState({ company, company_id: company.id });\n  onChangeUser        = user         => this.setState({ user, employer_id: user.id });\n  onChangeVacancy     = vacancy      => this.setState({ vacancy, vacancy_role: vacancy.id });\n\n  catchErrors = error => {\n    // redirect to login if 401 (request, response)\n    if (error.response.status === 401) {\n      localStorage.removeItem('ph-admin-user-data');\n      this.props.history.push('/login');\n\n    } else {\n      this.setState({\n        modalLoading: false,\n        addModalIsOpen: false, editModalIsOpen: false, deleteModalIsOpen: false, // close modals\n        alertType: 'error',\n        alertIsOpen: true,\n        alertErrorText: `${error}`\n      });\n    }\n  }\n\n  addClick = () => {\n    this.setState({\n      addModalIsOpen: true,\n      alertIsOpen: false,\n    });\n    this.resetFields(); // reset fields\n  }\n\n  addSubmit = e => {\n    e.preventDefault();\n\n    this.setState({ modalLoading: true });\n    const { state } = this;\n    const { jobs, company } = this.state;\n\n    addJob(state)   // order must be like inside addJob method\n    .then(res => {\n      const resDataWithCompany = { ...res.data, company };\n      const newData = [resDataWithCompany].concat(jobs);\n\n      this.setState({\n        modalLoading: false,\n        addModalIsOpen: false,\n        jobs: newData,\n      });\n      console.log('resData:', res.data);\n\n      this.editAfterAdd(res.data);\n    })\n\n    .catch(error => this.catchErrors(error));\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      addModalIsOpen: false,\n      editModalIsOpen: true,\n      original: data, // save data to original\n\n      // save filled inputs\n      id: data.id,\n      name: data.name,\n      created: data.created,\n      modified: data.modified,\n      employer_id: data.employer_id,\n      company_id: data.company_id,\n      published: `${new Date().toISOString()}`,\n      alertIsOpen: false\n    });\n  }\n\n  editClick = original => e => {\n    e.stopPropagation();\n    // console.log('original', original);\n\n    this.setState({\n      original,\n\n      alertIsOpen: false,\n      editModalIsOpen: true,\n      logoLoading: false, coverLoading: false,\n\n      id: original.id,\n      name: original.name,\n      created: original.created,\n      modified: original.modified,\n      published: original.published,\n      views: original.views,\n      impressions: original.impressions,\n      details: original.details,\n      experience_up: original.experience_up,\n      experience_from: original.experience_from,\n      seniority: original.seniority,\n      skills: original.skills,\n      status: original.status,\n      plan_id: original.plan_id,\n      employer_id: original.employer_id,\n      locations: original.locations,\n      company_id: original.company_id,\n      company: original.company,\n      locations: original.locations,\n      vacancy_role: original.vacancy_role,\n      vacancy: original.vacancy,\n      logo: original.logo,\n      cover: original.cover,\n    });\n\n\n    // SENIORITY (get current seniorityObj {} from options mapping)\n    const { seniority } = original;\n    seniority ? (\n      seniorityOptions.map(i => {\n        i.value === seniority && this.setState({ seniorityObj: i });\n      })\n    ) : this.setState({ seniorityObj: {} });  // if doesn't have - reset seniority\n\n\n    // STATUS (get current statusObj {} from options mapping)\n    const { status } = original;\n    status ? statusOptions.map(i => {\n      status === i.value && this.setState({ statusObj: i });\n    }) : this.setState({ statusObj: {} });\n\n\n    // PLAN (get current planObj {} from options mapping)\n    const { plan_id } = original;\n    plan_id ? planOptions.map(i => {\n      plan_id === i.value && this.setState({ planObj: i });\n    }) : this.setState({ planObj: {} });\n\n\n    // COMPANY (get current company {} by request)\n    const { company_id } = original;\n    this.setState({ company: { id: null, name: 'Loading...' }}); // pre-loader\n\n    company_id ? (\n      getCompany(company_id).then(res => { // get request\n        this.setState({\n          company: res.data,\n          company_id: res.data.id\n        })\n      })\n    ) : this.setState({\n      company: { id: null, name: '' } // if doesn't have - reset\n    });\n\n\n    // USER (get current user {} by request)\n    const { employer_id } = original;\n    this.setState({ user: { name: 'Loading ...', surname: '', email: '' }}); // pre-loader\n\n    employer_id ? (\n      getUser(employer_id).then(res => { // get request\n        this.setState({ user: res.data, employer_id: res.data.id });\n      })\n    ) : this.setState({\n      user: { name: '', surname: '', email: '' } // if doesn't have - reset\n    });\n\n\n    // VACANCY (get current vacancy {} by request)\n    const { vacancy_role } = original;\n    this.setState({ vacancy: { name: 'Loading ...' }}); // pre-loader\n\n    vacancy_role ? (\n      getVacancy(vacancy_role).then(res => {    // get request\n        this.setState({ vacancy: res.data, vacancy_role: res.data.id });\n      })\n    ) : this.setState({ vacancy: { name: '' }}); // if doesn't have - reset\n  }\n\n  editSubmit = e => {\n    e.preventDefault();\n\n    this.setState({ modalLoading: true });\n\n    // get edit values\n    const { state } = this;\n    // const { id, name, } = this.state;\n\n    editJob(state)\n      .then(() => {\n        // get current table-data from the state w\\o editing change (when render only)\n        const { jobs, id, name, user, employer_id, created, modified, published, views, impressions, details,\n          experience_from, experience_up, seniority, seniorityObj, skills, status, statusObj, plan_id, planObj,\n          company_id, company, locations, vacancy_role, vacancy, logo, cover,\n        } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < jobs.length; i++) {\n          if (jobs[i].id === id) {\n            // inject editing data to table state\n            jobs[i] = { id, name, user, employer_id, created, modified, published, views, impressions, details,\n            experience_from, experience_up, seniority, seniorityObj, skills, status, statusObj, plan_id, planObj,\n            company_id, company, locations, vacancy_role, vacancy, logo, cover,\n\n              // change modified to current date\n            modified: `${new Date().toISOString()}` };\n          }\n        }\n\n        this.setState({\n          jobs, // new user with edited item\n          modalLoading: false,\n          editModalIsOpen: false,\n          alertType: 'edit',\n          alertIsOpen: true\n        });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      .catch(error => this.catchErrors(error));\n  }\n\n  deleteClick = original => e => {\n    e.stopPropagation();\n    this.setState({ original, deleteModalIsOpen: true, alertIsOpen: false });\n  }\n\n  deleteSubmit = () => {\n    const dataWitoutDeleted = [];\n    const { jobs, original: { id } } = this.state;\n\n    this.setState({ modalLoading: true });\n\n    deleteJob(id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < jobs.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (jobs[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(jobs[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          jobs: dataWitoutDeleted,\n          editModalIsOpen: false,\n          deleteModalIsOpen: false,\n          modalLoading: false,\n\n          // show alert\n          alertType: 'delete', alertIsOpen: true\n        })\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n      .catch(error => this.catchErrors(error));\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({\n      logoLoading: true,\n      logoSwitcher: true\n    });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogoFile = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogoFile);\n\n    // uploadLogoRequest\n    uploadLogo(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({\n      coverLoading: true,\n      coverSwitcher: true\n    });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCoverFile = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCoverFile);\n\n    // uploadLogoRequest\n    uploadCover(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onDeleteLogo  = () => this.setState({ logo: '',  logoUrl: '',  logoSwitcher: false });\n  onDeleteCover = () => this.setState({ cover: '', coverUrl: '', coverSwitcher: false });\n\n  closeAddModal    = () => !this.state.modalLoading && this.setState({ addModalIsOpen:    false });\n  closeEditModal   = () => {\n    !this.state.modalLoading && this.setState({\n      editModalIsOpen: false,\n      logoLoading: false,\n      coverLoading: false\n    });\n  }\n  closeDeleteModal = () => !this.state.modalLoading && this.setState({ deleteModalIsOpen: false });\n\n  render() {\n\n    const {\n      // table\n      tableLoading, original, jobs, jobsCount,\n\n      // fields\n      id, name, user, employer_id, created, modified, published, views, impressions, details,\n      experience_from, experience_up, seniority, seniorityObj, skills, status, statusObj,\n      plan_id, planObj, company_id, company, locations, vacancy_role, vacancy,\n\n      // modals\n      addModalIsOpen, editModalIsOpen, modalLoading, deleteModalIsOpen,\n\n      // alerts\n      alertIsOpen, alertType, alertErrorText,\n\n      // images\n      logo, cover, logoSwitcher, coverSwitcher, logoLoading, coverLoading, logoUrl, coverUrl,\n    } = this.state;\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n            <i className=\"ion-edit\" onClick={this.editClick(original)} />\n          </div>\n        )\n      }\n    ];\n\n    return (\n      <div className=\"jobs-page\">\n        { alertIsOpen && <Alerts type={alertType} original={original} errorText={alertErrorText} /> }\n\n        <AddButton\n          text=\"job\"\n          loading={modalLoading}\n          addClick={this.addClick}\n        />\n\n        <DeleteJob\n          isOpen={deleteModalIsOpen}\n          modalLoading={modalLoading}\n          closeModal={this.closeDeleteModal}\n          original={original}\n          deleteSubmit={this.deleteSubmit}\n        />\n\n        <AddJob\n          // fields\n          name={name} company={company} user={user}\n\n          // modal\n          isOpen={addModalIsOpen}\n          modalLoading={modalLoading}\n          closeModal={this.closeAddModal}\n\n          // actions\n          onChange={this.onChange}\n          onChangeCompany={this.onChangeCompany}\n          onChangeUser={this.onChangeUser}\n          onSubmit={this.addSubmit}\n        />\n\n        <EditJob\n          // fields\n          id={id} name={name} details={details}\n          original={original} skills={skills}\n          created={created} modified={modified} published={published}\n          views={views} impressions={impressions}\n          experience_from={experience_from} experience_up={experience_up}\n          seniority={seniority} seniorityObj={seniorityObj}\n          status={status} statusObj={statusObj}\n          plan_id={plan_id} planObj={planObj}\n          locations={locations} company_id={company_id} company={company}\n          user={user} employer_id={employer_id}\n          vacancy_role={vacancy_role} vacancy={vacancy}\n          logo={logo} cover={cover}\n\n          // modal\n          isOpen={editModalIsOpen}\n          modalLoading={modalLoading}\n          closeModal={this.closeEditModal}\n\n          // actions\n          onChange={this.onChange}\n          onChangeDetails={this.onChangeDetails}\n          onChangeSkills={this.onChangeSkills}\n          onChangeLocations={this.onChangeLocations}\n          onChangeCompany={this.onChangeCompany}\n          onChangeStatus={this.onChangeStatus}\n          onChangeSeniority={this.onChangeSeniority}\n          onChangePlan={this.onChangePlan}\n          onChangeUser={this.onChangeUser}\n          onChangeVacancy={this.onChangeVacancy}\n          onSubmit={this.editSubmit}\n          deleteClick={this.deleteClick(original)}\n\n          // images\n          logo={logo} cover={cover} logoSwitcher={logoSwitcher} coverSwitcher={coverSwitcher}\n          logoLoading={logoLoading} coverLoading={coverLoading} logoUrl={logoUrl} coverUrl={coverUrl}\n          fileInputLogo={this.fileInputLogo} fileInputCover={this.fileInputCover} onUploadLogo={this.onUploadLogo} onUploadCover={this.onUploadCover}\n          onDeleteLogo={this.onDeleteLogo} onDeleteCover={this.onDeleteCover}\n        />\n\n        <Table\n          manual={true}\n          data={jobs}\n          pages={jobsCount}\n          loading={tableLoading}\n          columns={[...columns, ...controlsColumn]}\n          getTdProps={(state, rowInfo, column, instance) => {\n            return {\n              onClick: e => {\n                if (rowInfo !== undefined) {\n                  const { original } = rowInfo;\n                  return this.editClick(original)(e);\n                } else return null;\n              }\n            }\n          }}\n          onFetchData={state => {\n            this.setState({ tableLoading: true });\n\n            // count request\n            getJobsCount(state)\n              .then(res => {\n                this.setState({ jobsCount: Math.ceil(res.data.count / state.pageSize) })\n\n                // data request\n                getJobs(state)\n                  .then(res => this.setState({ jobs: res.data, tableLoading: false }))\n                  .catch(error => this.catchErrors(error));\n              }).catch(error => this.catchErrors(error));\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withHeaderTitle(Jobs);\n\n\n// {\n  // name: \"Program Manager\",\n\n  // details: \"<div id=\"jobDescriptionText\" class=\"jobsearch-jobD…ed Six Sigma Black Belt is a plus</li></ul></div>\", created: \"2019-12-12T00:00:00.000Z\", modified: \"2020-02-20T02:52:34.000Z\", published: \"2020-02-13T14:53:01.000Z\", …}\n\n// application_link: \"http://jp.indeed.com/viewjob?jk=08b6dd09472d1e40&qd=q-W_AcXrCjXtyVUvGh7yyfEZRnvTDHQnPVwcjQ09-7xtU5CE_dnPJq1QDQ7BbOxgsuLKP4R8KwnSfW6Tu291w2jpPKTCEI08v9WRs3ScL0lpPk4BqtIkYsaQriuO_0kNNVbuGkvXR_7b87sG_geiaw&indpubnum=5493419850484974&atk=1e0qsuio8h72s801\"\n\n// application_type: 0\n// applied: false\n// company: {name: \"Amazon Japan G.K.\", motivated: 0, logo: null, cover: null, craft_id: null, …}\n// company_id: 662\n// cover: null\n// created: \"2019-12-12T00:00:00.000Z\"\n\n// description: \"A job at Amazon Japan G.K. in Sapporo. Requires any experience and the following skills: Communication Skills, Problem Solving, Project Management, Analytical, Program Management.\"\n\n// details: \"<div id=\"jobDescriptionText\"</div>\"\n// employer_id: 1\n// experience_from: 0\n// experience_up: 10\n// hash: null\n// id: 66604\n// impressions: 407\n// locations: [{…}]\n// logo: null\n// modified: \"2020-02-20T02:52:34.000Z\"\n// name: \"Program Manager\"\n// paused: null\n// plan_id: null\n// published: \"2020-02-13T14:53:01.000Z\"\n// role: {id: 7, name: \"Project/Program\", slug: \"project-program\", top: 1, weight: 18, …}\n// saved: false\n// seniority: 2\n// skills: (5) [{…}, {…}, {…}, {…}, {…}]\n// skills_string: null\n// slug: \"66604-program-manager\"\n// source: \"indeed\"\n// source_id: \"08b6dd09472d1e40\"\n// status: \"public\"\n// vacancy_role: 7\n// views: 11\n"],"sourceRoot":""}