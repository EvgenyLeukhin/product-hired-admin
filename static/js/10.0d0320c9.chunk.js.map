{"version":3,"sources":["ph-admin/routes/Jobs.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/consts.js","ph-admin/selects/plan.jsx","ph-admin/selects/status.jsx","ph-admin/selects/seniority.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Jobs","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","width","_ref3","status","_ref4","_ref5","textAlign","created","substring","_ref6","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","buttonText","startOrder","dataPath","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","concat","API_URL","subUrl","params","where","like","limit","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","react_default","Fragment","className","htmlFor","id","type","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","Users","surname","email","job_title","experience","emailVerified","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","disabled","location_Location","selects_skills","length","map","i","url","checked","getUsers","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","planValues","label","statusValues","seniorityValues","Plan","dist_react_select_browser_esm","options","Status","Seniority","details","locations","company","role","published","user","plan","jobStatus","seniority","experience_up","experience_from","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","onChangePlan","onChangeStatus","onChangeSeniority","selects_status","selects_user","selects_role","selects_plan","selects_company","selects_seniority","location_Locations","editor","min","max","markers","Roles","Plans","price","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","views","adminObj","employer_id","plan_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","pageSize","page","sorted","skip","order","desc","path","vacancy_role","application_type","application_link","company_id","hash","patch","location_id","skillsNames","push","skills_string","toString","split","pop","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","controlsColumn","sortable","filterable","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/10.0d0320c9.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Jobs extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Jobs') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Job',\n        accessor: 'name',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <div>{original.name || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      // {\n      //   Header: 'Company',\n      //   accessor: 'company',\n      //   sortable: false,\n      //   filterable: false,\n      //   Cell: ({ original }) => {\n      //     const companyName = original.company.name;\n      //     return <div>{companyName || '...'}</div>\n      //   },\n      // },\n\n      // {\n      //   Header: 'Location',\n      //   accessor: 'locations',\n      //   width: 200,\n      //   sortable: false,\n      //   filterable: false,\n      //   Cell: ({ original }) => <span>{original.locations.map(i => `${i.name} `)}</span>,\n      //   Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      // },\n\n      {\n        Header: 'Status',\n        accessor: 'status',\n        width: 60,\n        Cell: ({ original }) => <div>{original.status || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Created',\n        accessor: 'created',\n        width: 120,\n        Cell: ({ original }) => (\n          <div style={{ textAlign: 'center' }}>\n            <span>{original.created.substring(0, 10) || '...'}</span>\n          </div>\n        ),\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        buttonText=\"job\"\n        startOrder='id DESC'\n        dataPath='vacancies'\n      />\n    );\n  }\n}\n\nexport default withHeaderTitle(Jobs);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Company name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    name,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Location\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getCompanies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getCompanies from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","const planValues = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nconst statusValues = [\n  { value: 'public',  label: 'Public' },\n  { value: 'draft',   label: 'Draft' },\n  { value: 'expired', label: 'Expired' },\n];\n\nconst seniorityValues = [\n  { value: 1, label: 'Junior' },\n  { value: 2, label: 'Mid level' },\n  { value: 3, label: 'Senior' },\n  { value: 4, label: 'Managment' },\n];\n\nexport { planValues, statusValues, seniorityValues };\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { planValues } from '../consts';\n\nconst Plan = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={planValues}\n  />\n);\n\nexport default Plan;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { statusValues } from '../consts';\n\nconst Status = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={statusValues}\n  />\n);\n\nexport default Status;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { seniorityValues } from '../consts';\n\nconst Seniority = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={seniorityValues}\n  />\n);\n\nexport default Seniority;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User          from '../../selects/user';\nimport Role          from '../../selects/role';\nimport Company       from '../../selects/company';\nimport Skills        from '../../selects/skills';\nimport Editor        from '../../selects/editor';\nimport Plan          from '../../selects/plan';\nimport Status        from '../../selects/status';\nimport Seniority     from '../../selects/seniority';\nimport { Locations } from '../../selects/location';\n\nconst Jobs = props => {\n  const {\n    name,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    user,\n    plan,\n    jobStatus,\n    seniority,\n    experience_up,\n    experience_from,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n    onChangePlan,\n    onChangeStatus,\n    onChangeSeniority,\n\n    // logo\n    // logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    // cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  // console.log(logo);\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-status\">Status</label>\n          <div className=\"col-md-4\">\n            <Status value={jobStatus} onChange={onChangeStatus} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-plan\">Plan</label>\n          <div className=\"col-md-4\">\n            <Plan value={plan} onChange={onChangePlan} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-seniority\">Seniority</label>\n          <div className=\"col-md-4\">\n            <Seniority value={seniority} onChange={onChangeSeniority} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"date\"\n              name=\"created\"\n              id=\"edit-created\"\n              value={created && created.substring(0, 10)}\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_from\">Experience from</label>\n\n          <div className=\"col-md-4\">\n            <input\n                min={0}\n                max={30}\n                type=\"number\"\n                onChange={onChange}\n                name=\"experience_from\"\n                value={experience_from}\n                id=\"edit-experience_from\"\n                className=\"form-control input-rounded\"\n              />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_up\">Experience to</label>\n\n          <div className=\"col-md-4\">\n            <input\n                min={0}\n                max={30}\n                type=\"number\"\n                onChange={onChange}\n                name=\"experience_up\"\n                value={experience_up}\n                id=\"edit-experience_up\"\n                className=\"form-control input-rounded\"\n              />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n      {/* <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset> */}\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Skill name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ name, slug, weight, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Role</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              type=\"number\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ name, price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Plan</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          type=\"number\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\n\nimport { planValues, statusValues, seniorityValues } from '../consts';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null,\n    plan: {},\n    plan_id: null,\n    jobStatus: '',\n    seniority: null,\n    experience_up: null,\n    experience_from: null,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  // TODO - refactoring\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n  onChangeSeniority = seniority => this.setState({ seniority });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id\n    });\n  }\n\n  onChangePlan = plan => {\n    this.setState({\n      plan,\n      plan_id: plan.value\n    });\n  }\n\n  onChangeStatus = jobStatus => {\n    this.setState({\n      jobStatus,\n      status: jobStatus.value\n    });\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      i.name === 'admin' && this.setState({ admin: true });\n    });\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      .then(this.setState({\n        // preloader\n        user: {\n          name: 'Loading ...',\n          surname: ''\n        }\n      }))\n      .then(user => this.setState({ user: user.data })\n      // TODO .catch()\n    );\n\n    // get current plan for job\n    plan_id && planValues.map(i => {\n      plan_id === i.value && this.setState({ plan: i });\n    });\n\n\n    // get current status for job\n    status && statusValues.map(i => {\n      status === i.value && this.setState({ jobStatus: i });\n    });\n\n    // get current seniority for job\n    seniority && seniorityValues.map(i => {\n      seniority === i.value && this.setState({ seniority: i });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal.experience_up);\n    // console.log('state.seniority edit.jsx:', this.state.seniority);\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user, plan, jobStatus, seniority, experience_up, experience_from\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) || dataPath === 'vacancies' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>&nbsp;\n              {\n                itemOriginal.views ? (\n                  <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;{`${itemOriginal.views}`})</span>\n                ) : <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;0)</span>\n              }\n            </h4>\n          ) || (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    // logo={logo}\n                    // cover={cover}\n                    name={name}\n                    role={role}\n                    user={user}\n                    plan={plan}\n                    views={views}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n                    jobStatus={jobStatus}\n                    seniority={seniority}\n                    experience_up={experience_up}\n                    experience_from={experience_from}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n                    onChangePlan={this.onChangePlan}\n                    onChangeStatus={this.onChangeStatus}\n                    onChangeSeniority={this.onChangeSeniority}\n\n                    // logo\n                    // logoLoading={logoLoading}\n                    // onUploadLogo={this.onUploadLogo}\n                    // fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    // coverLoading={coverLoading}\n                    // onUploadCover={this.onUploadCover}\n                    // fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 6. Plans */}\n              {\n                dataPath === 'plans' && (\n                  <Plans name={name} price={price} onChange={this.onChange} />\n                )\n              }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies'\n                        ? <Button disabled={!skills || !locations} outline color=\"primary\" type=\"submit\">Save</Button>\n                        : <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nimport User          from '../../selects/user';\nimport Company       from '../../selects/company';\n\nconst Jobs = ({\n  name, company, user,\n\n  onChange, onChangeCompany, onChangeUser\n}) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n        <div className=\"col-md-10\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n        <div className=\"col-md-4\">\n          <Company value={company} onChange={onChangeCompany} />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">User</label>\n        <div className=\"col-md-4\">\n          <User value={user} onChange={onChangeUser} />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n    company: {},\n    user: {\n      name: '',\n      surname: ''\n    }\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeUser      = user      => this.setState({ user });\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password,\n      company, user\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    user={user}\n                    company={company}\n                    onChange={this.onChange}\n                    onChangeUser={this.onChangeUser}\n                    onChangeCompany={this.onChangeCompany}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { company, user } = state;\n    return axios.post(\n      path,\n      {\n        name,\n        details: '<p></p>',\n        vacancy_role: 1,\n        seniority: 1,\n        experience_from: 0,\n        experience_up: 1,\n        application_type: 0,\n        application_link: null,\n        employer_id: user.id,\n        plan_id: 1,\n        company_id: company.id,\n        hash: null,\n        status: 'draft',\n        companies: [],\n      },\n      { headers }\n    )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const {\n      details,\n      logo,\n      cover,\n      skills,\n      locations,\n      role,\n      company,\n      user,\n      plan,\n      jobStatus,\n      seniority,\n      experience_up,\n      experience_from,\n      created,\n    } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        name,\n        details,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.name,\n        employer_id: user.id,\n        plan_id: plan.value,\n        status: jobStatus.value,\n        seniority: seniority.value,\n        experience_from,\n        experience_up,\n        created,\n\n        // \"paused\": null,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users' || dataPath === 'vacancies') {\n        const { data } = res;\n        this.editAfterAdd(data);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}