{"version":3,"sources":["ph-admin/routes/Jobs.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/consts.js","ph-admin/selects/plan.jsx","ph-admin/selects/status.jsx","ph-admin/selects/seniority.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Jobs","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","sortable","filterable","_ref3","company","width","_ref4","status","_ref5","_ref6","textAlign","created","substring","_ref7","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","buttonText","startOrder","dataPath","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","concat","API_URL","subUrl","params","where","like","limit","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","react_default","Fragment","className","htmlFor","id","type","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","Users","surname","email","job_title","experience","emailVerified","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","disabled","location_Location","selects_skills","length","map","i","url","checked","getUsers","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","planValues","label","statusValues","seniorityValues","Plan","dist_react_select_browser_esm","options","Status","Seniority","details","locations","role","published","user","plan","jobStatus","seniority","experience_up","experience_from","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","onChangePlan","onChangeStatus","onChangeSeniority","selects_status","selects_user","selects_role","selects_plan","selects_company","selects_seniority","location_Locations","editor","min","max","markers","Roles","Plans","price","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","views","adminObj","employer_id","plan_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","company_id","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","pageSize","page","sorted","skip","order","desc","path","vacancy_role","application_type","application_link","hash","patch","location_id","skillsNames","push","skills_string","toString","split","pop","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","controlsColumn","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/10.42dbf0d5.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Jobs extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Jobs') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Job',\n        accessor: 'name',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <div>{original.name || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Company',\n        accessor: 'company',\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => {\n          // fix it later\n          if (original.company) {\n            return <div>{original.company.name}</div>\n          } else return <div>...</div>\n        },\n      },\n\n      // {\n      //   Header: 'Location',\n      //   accessor: 'locations',\n      //   width: 200,\n      //   sortable: false,\n      //   filterable: false,\n      //   Cell: ({ original }) => <span>{original.locations.map(i => `${i.name} `)}</span>,\n      //   Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      // },\n\n      {\n        Header: 'Status',\n        accessor: 'status',\n        width: 60,\n        Cell: ({ original }) => <div>{original.status || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Created',\n        accessor: 'created',\n        width: 120,\n        Cell: ({ original }) => (\n          <div style={{ textAlign: 'center' }}>\n            <span>{original.created.substring(0, 10) || '...'}</span>\n          </div>\n        ),\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        buttonText=\"job\"\n        startOrder='id DESC'\n        dataPath='vacancies'\n      />\n    );\n  }\n}\n\nexport default withHeaderTitle(Jobs);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Company name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    name,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Location\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n          'limit': 1\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCompany = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${inputValue}`}\n          },\n          'limit': 1\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getCompanies, getCompany };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getCompanies } from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","const planValues = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nconst statusValues = [\n  { value: 'public',  label: 'Public' },\n  { value: 'draft',   label: 'Draft' },\n  { value: 'expired', label: 'Expired' },\n];\n\nconst seniorityValues = [\n  { value: 1, label: 'Junior' },\n  { value: 2, label: 'Mid level' },\n  { value: 3, label: 'Senior' },\n  { value: 4, label: 'Managment' },\n];\n\nexport { planValues, statusValues, seniorityValues };\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { planValues } from '../consts';\n\nconst Plan = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={planValues}\n  />\n);\n\nexport default Plan;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { statusValues } from '../consts';\n\nconst Status = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={statusValues}\n  />\n);\n\nexport default Status;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { seniorityValues } from '../consts';\n\nconst Seniority = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={seniorityValues}\n  />\n);\n\nexport default Seniority;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User          from '../../selects/user';\nimport Role          from '../../selects/role';\nimport Company       from '../../selects/company';\nimport Skills        from '../../selects/skills';\nimport Editor        from '../../selects/editor';\nimport Plan          from '../../selects/plan';\nimport Status        from '../../selects/status';\nimport Seniority     from '../../selects/seniority';\nimport { Locations } from '../../selects/location';\n\nconst Jobs = props => {\n  const {\n    name,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    user,\n    plan,\n    jobStatus,\n    seniority,\n    experience_up,\n    experience_from,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n    onChangePlan,\n    onChangeStatus,\n    onChangeSeniority,\n\n    // logo\n    // logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    // cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  // console.log(logo);\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-status\">Status</label>\n          <div className=\"col-md-4\">\n            <Status value={jobStatus} onChange={onChangeStatus} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-plan\">Plan</label>\n          <div className=\"col-md-4\">\n            <Plan value={plan} onChange={onChangePlan} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-seniority\">Seniority</label>\n          <div className=\"col-md-4\">\n            <Seniority value={seniority} onChange={onChangeSeniority} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"date\"\n              name=\"created\"\n              id=\"edit-created\"\n              value={created && created.substring(0, 10)}\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_from\">Experience from</label>\n\n          <div className=\"col-md-4\">\n            <input\n                min={0}\n                max={30}\n                type=\"number\"\n                onChange={onChange}\n                name=\"experience_from\"\n                value={experience_from}\n                id=\"edit-experience_from\"\n                className=\"form-control input-rounded\"\n              />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_up\">Experience to</label>\n\n          <div className=\"col-md-4\">\n            <input\n                min={0}\n                max={30}\n                type=\"number\"\n                onChange={onChange}\n                name=\"experience_up\"\n                value={experience_up}\n                id=\"edit-experience_up\"\n                className=\"form-control input-rounded\"\n              />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n      {/* <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset> */}\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Skill name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ name, slug, weight, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Role</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              type=\"number\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ name, price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Plan</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          type=\"number\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\nimport { getCompany } from '../api/getCompanies';\n\nimport { planValues, statusValues, seniorityValues } from '../consts';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null,\n    plan: {},\n    plan_id: null,\n    jobStatus: '',\n    seniority: null,\n    experience_up: null,\n    experience_from: null,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  // TODO - refactoring\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n  onChangeSeniority = seniority => this.setState({ seniority });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id\n    });\n  }\n\n  onChangePlan = plan => {\n    this.setState({\n      plan,\n      plan_id: plan.value\n    });\n  }\n\n  onChangeStatus = jobStatus => {\n    this.setState({\n      jobStatus,\n      status: jobStatus.value\n    });\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from, company_id\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      i.name === 'admin' && this.setState({ admin: true });\n    });\n\n    // company_id && console.log(company_id);\n\n    // get current company\n    company_id && getCompany(company_id)\n      // preloader\n      .then(this.setState({\n        company: { name: 'Loading ...' }\n      }))\n      .then(res => this.setState({ company: res.data }))\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      // preloader\n      .then(this.setState({\n        user: {\n          name: 'Loading ...',\n          surname: ''\n        }\n      }))\n      .then(user => this.setState({ user: user.data })\n      // TODO .catch()\n    );\n\n    // get current plan for job\n    plan_id && planValues.map(i => {\n      plan_id === i.value && this.setState({ plan: i });\n    });\n\n\n    // get current status for job\n    status && statusValues.map(i => {\n      status === i.value && this.setState({ jobStatus: i });\n    });\n\n    // get current seniority for job\n    seniority && seniorityValues.map(i => {\n      seniority === i.value && this.setState({ seniority: i });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal);\n    // console.log('state.company edit.jsx:', this.state.company);\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user, plan, jobStatus, seniority, experience_up, experience_from\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) || dataPath === 'vacancies' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>&nbsp;\n              {\n                itemOriginal.views ? (\n                  <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;{`${itemOriginal.views}`})</span>\n                ) : <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;0)</span>\n              }\n            </h4>\n          ) || (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    // logo={logo}\n                    // cover={cover}\n                    name={name}\n                    role={role}\n                    user={user}\n                    plan={plan}\n                    views={views}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n                    jobStatus={jobStatus}\n                    seniority={seniority}\n                    experience_up={experience_up}\n                    experience_from={experience_from}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n                    onChangePlan={this.onChangePlan}\n                    onChangeStatus={this.onChangeStatus}\n                    onChangeSeniority={this.onChangeSeniority}\n\n                    // logo\n                    // logoLoading={logoLoading}\n                    // onUploadLogo={this.onUploadLogo}\n                    // fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    // coverLoading={coverLoading}\n                    // onUploadCover={this.onUploadCover}\n                    // fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 6. Plans */}\n              {\n                dataPath === 'plans' && (\n                  <Plans name={name} price={price} onChange={this.onChange} />\n                )\n              }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies'\n                        ? <Button disabled={!skills || !locations} outline color=\"primary\" type=\"submit\">Save</Button>\n                        : <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nimport User          from '../../selects/user';\nimport Company       from '../../selects/company';\n\nconst Jobs = ({\n  name, company, user,\n\n  onChange, onChangeCompany, onChangeUser\n}) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n        <div className=\"col-md-10\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n        <div className=\"col-md-4\">\n          <Company value={company} onChange={onChangeCompany} />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">User</label>\n        <div className=\"col-md-4\">\n          <User value={user} onChange={onChangeUser} />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n    company: {},\n    user: {\n      name: '',\n      surname: ''\n    }\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeUser      = user      => this.setState({ user });\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password,\n      company, user\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    user={user}\n                    company={company}\n                    onChange={this.onChange}\n                    onChangeUser={this.onChangeUser}\n                    onChangeCompany={this.onChangeCompany}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { company, user } = state;\n    return axios.post(\n      path,\n      {\n        name,\n        details: '<p></p>',\n        vacancy_role: 1,\n        seniority: 1,\n        experience_from: 0,\n        experience_up: 1,\n        application_type: 0,\n        application_link: null,\n        employer_id: user.id,\n        plan_id: 1,\n        company_id: company.id,\n        hash: null,\n        status: 'draft',\n        companies: [],\n      },\n      { headers }\n    )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const {\n      details,\n      logo,\n      cover,\n      skills,\n      locations,\n      role,\n      company,\n      user,\n      plan,\n      jobStatus,\n      seniority,\n      experience_up,\n      experience_from,\n      created,\n    } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        name,\n        details,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.length ? company[0].name : company.name,\n        employer_id: user.id,\n        plan_id: plan.value,\n        status: jobStatus.value,\n        seniority: seniority.value,\n        experience_from,\n        experience_up,\n        created,\n\n        // \"paused\": null,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users') {\n        this.editAfterAdd(res.data);\n\n\n      // fix later\n      } else if (dataPath === 'vacancies') {\n        this.setState({\n          modalIsOpen: true,\n          modalLoading: true,\n        });\n\n        setTimeout(() => {\n          this.editAfterAdd(res.data);\n          this.setState({ modalLoading: false });\n        }, 2000);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}