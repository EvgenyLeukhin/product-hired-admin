{"version":3,"sources":["components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/modals/edit/common.jsx","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx","ph-admin/api/getLocations.js"],"names":["withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","setHeaderTitle","headerTitle","pubsub","publish","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","assign","props","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","customFiltering","filter","onChange","style","width","event","target","debounceTimeout","Common","_ref","id","name","react_default","Fragment","className","htmlFor","disabled","type","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","Spinner","src","alt","ref","Locations","loadOptions","inputValue","getLocations","then","res","data","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","defaultInputValue","getOptionValue","o","getOptionLabel","React","headers","Authorization","token","getSkills","axios","get","concat","API_URL","subUrl","params","where","like","Skills","isMulti","Users","surname","email","job_title","experience","emailVerified","status","created","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","selects_location","selects_skills","substring","length","map","i","url","checked","Jobs","details","published","views","rows","resize","markers","Roles","Plans","price","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","adminObj","userData","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","_this$props","editRequest","dataPath","_this2","_this$props$itemOrigi","itemOriginal","_this$props2","closeModal","modalLoading","_this$state2","onClick","action","common","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","modals_edit","add","Alerts","Alert","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","startOrder","pageSize","page","sorted","limit","skip","order","desc","path","patch","location_id","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","original","dataWitoutDeleted","push","setTimeout","editClick","edit","newData","history","document","addEventListener","keyCode","_this3","idColumn","Header","accessor","textAlign","Cell","Filter","_ref2","controlsColumn","sortable","filterable","_ref3","columns","buttonText","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/2.5612fe6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import React from 'react';\n\nconst Common = ({ id, name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-id\">Id</label>\n\n        <div className=\"col-md-2\">\n          <input\n            name=\"id\"\n            disabled\n            value={id}\n            id=\"edit-id\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Common;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Locations extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    return (\n      <AsyncSelect\n        value={this.props.value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        defaultInputValue={this.props.defaultInputValue}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        onChange={this.props.onChange}\n      />\n    );\n  }\n}\n\nexport default Locations;\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        defaultInputValue={this.props.defaultInputValue}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        onChange={this.props.onChange}\n\n        // value in props\n        value={this.props.value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport Locations from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              type=\"email\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-10\">\n            <input\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Locations\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Jobs = props => {\n  const {\n    slug,\n    details,\n    created,\n    modified,\n    published,\n    views,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"textarea\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n\n          <div className=\"col-md-4\">\n            <textarea\n              rows={5}\n              style={{ resize: 'none' }}\n              name=\"details\"\n              value={details}\n              id=\"edit-details\"\n              onChange={onChange}\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-views\">Views</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"views\"\n              value={views}\n              id=\"edit-views\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ slug, weight, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"slug\"\n          value={slug}\n          id=\"edit-slug\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"weight\"\n          value={weight}\n          id=\"edit-weight\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Common from './edit/common';\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\n\nimport './scss/edit.scss';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    roles: [],\n    location: {},\n    skills: [],\n\n    // logo\n    logo: null,\n    logoLoading: false,\n\n    // cover\n    cover: null,\n    coverLoading: false,\n\n    // image\n    image: null,\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    userData: {}\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  onChangeLocation = location => this.setState({ location });\n  onChangeSkills   = skills   => this.setState({ skills });\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, roles, domain, logo, cover, image, details, published, views, location, skills\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, roles, domain, logo, cover, image, details, published, views, location, skills\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      if (i.name === 'admin') this.setState({ admin: true });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal);\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, roles,\n      created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, skills\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' ? (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) : (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* Common inputs */}\n              <Common id={id} name={name} onChange={this.onChange} />\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    emailVerified={emailVerified}\n                    location={location}\n                    onChangeLocation={this.onChangeLocation}\n                    skills={skills}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    slug={slug}\n                    details={details}\n                    created={created} modified={modified} published={published}\n                    views={views}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              { dataPath === 'vacancy_roles' && <Roles slug={slug} weight={weight} onChange={this.onChange} /> }\n\n              {/* 6. Plans */}\n              { dataPath === 'plans' && <Plans price={price} onChange={this.onChange} /> }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} - {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal }) => {\n  return (\n    <>\n      {\n        // delete\n        type === 'delete' && (\n          <Alert color=\"danger\">\n            {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n          </Alert>\n        ) ||\n\n        // edit\n        type === 'edit' && (\n          <Alert color=\"warning\">\n            {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n          </Alert>\n        ) ||\n\n        // add\n        type === 'add' && (\n          <Alert color=\"success\">\n            New item is added\n          </Alert>\n        ) ||\n\n        // error\n        type === 'error' && (\n          <Alert color=\"danger\">\n            <b>Error</b>. Something is wrong!\n          </Alert>\n        )\n      }\n    </>\n  )\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover, id }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        id,\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { details, created, modified, published, views, } = state;\n    return axios.patch(\n      path,\n      {\n        id,\n        name,\n        details,\n        // \"created\": \"2020-01-28T10:28:57.000Z\",\n        // \"modified\": \"2020-01-28T11:24:33.864Z\",\n        // \"published\": \"2020-01-01T10:26:41.000Z\",\n        // \"paused\": null,\n        // \"vacancy_role\": 3,\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"plan_id\": null,\n        // \"company_id\": 9301,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"status\": null,\n        // \"skills_string\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"views\": 4,\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"slug\": \"162671-test-test-test\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"company\": {},\n        // \"skills\": [],\n        // \"locations\": [],\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n\n          // slug,\n          // description,\n          // created,\n          // modified,\n          // published,\n          // views,\n\n\n          // slug, // не нужен\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { id, name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { id, name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { id, name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({ alertIsOpen: true, modalType: 'error' });\n      })\n  }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n    .catch(error => console.log(error)) // TODO\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n      addRequest(state, dataPath)\n        .then(this.setState({ modalLoading: true }))\n\n        .then(res => {\n          const { data } = this.state;\n          const { startOrder, dataPath, history } = this.props;\n          // add new item to state [data]\n          const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true,\n          data: newData\n        });\n\n        if (dataPath === 'users') {\n          const { data } = res;\n          this.editAfterAdd(data);\n        }\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n\n      })\n      .catch(error => console.log(error)) // TODO\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n"],"sourceRoot":""}