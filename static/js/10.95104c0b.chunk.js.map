{"version":3,"sources":["ph-admin/routes/Jobs.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/common.jsx","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Jobs","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","sortable","filterable","_ref3","companyName","width","_ref4","status","_ref5","_ref6","textAlign","created","substring","_ref7","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","buttonText","startOrder","dataPath","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","concat","API_URL","subUrl","params","where","like","limit","Common","id","react_default","Fragment","className","htmlFor","disabled","type","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","Users","surname","email","job_title","experience","emailVerified","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","location_Location","selects_skills","length","map","i","url","checked","getUsers","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","details","locations","company","role","published","views","user","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","selects_company","selects_user","selects_role","location_Locations","editor","markers","Roles","Plans","price","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","adminObj","employer_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","common","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","pageSize","page","sorted","skip","order","desc","path","patch","location_id","skillsNames","push","skills_string","toString","split","pop","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","controlsColumn","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/10.95104c0b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Jobs extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Jobs') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Job',\n        accessor: 'name',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <div>{original.name || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Company',\n        accessor: 'company',\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => {\n          const companyName = original.name;\n          return <div>{companyName || '...'}</div>\n        },\n      },\n\n      // {\n      //   Header: 'Location',\n      //   accessor: 'locations',\n      //   width: 200,\n      //   sortable: false,\n      //   filterable: false,\n      //   Cell: ({ original }) => <span>{original.locations.map(i => `${i.name} `)}</span>,\n      //   Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      // },\n\n      {\n        Header: 'Status',\n        accessor: 'status',\n        width: 60,\n        Cell: ({ original }) => <div>{original.status || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Created',\n        accessor: 'created',\n        width: 120,\n        Cell: ({ original }) => (\n          <div style={{ textAlign: 'center' }}>\n            <span>{original.created.substring(0, 10) || '...'}</span>\n          </div>\n        ),\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        buttonText=\"job\"\n        startOrder='id DESC'\n        dataPath='vacancies'\n      />\n    );\n  }\n}\n\nexport default withHeaderTitle(Jobs);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nconst Common = ({ id, name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-id\">Id</label>\n\n        <div className=\"col-md-2\">\n          <input\n            name=\"id\"\n            disabled\n            value={id}\n            id=\"edit-id\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Common;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              type=\"email\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-10\">\n            <input\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Location\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getCompanies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getCompanies from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User from '../../selects/user';\nimport Role from '../../selects/role';\nimport Company from '../../selects/company';\nimport Skills from '../../selects/skills';\nimport { Locations } from '../../selects/location';\nimport Editor from '../../selects/editor';\n\nconst Jobs = props => {\n  const {\n    slug,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    views,\n    user,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  // console.log(logo);\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"textarea\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-views\">Views</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"views\"\n              value={views}\n              id=\"edit-views\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n\n      {/* <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset> */}\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ slug, weight, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"slug\"\n          value={slug}\n          id=\"edit-slug\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"weight\"\n          value={weight}\n          id=\"edit-weight\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Common from './edit/common';\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id // to save employer_id after editRequest\n    });\n  }\n\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      if (i.name === 'admin') this.setState({ admin: true });\n    });\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      .then(this.setState({\n          // preloader\n          user: {\n            name: 'Loading ...',\n            surname: ''\n          }\n      }))\n      .then(user => this.setState({ user: user.data })\n      // TODO .catch()\n    );\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal.user);\n    // console.log('state edit.jsx:', this.state.user);\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' ? (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) : (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* Common inputs */}\n              <Common id={id} name={name} onChange={this.onChange} />\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    // fields\n                    role={role}\n                    logo={logo}\n                    slug={slug}\n                    user={user}\n                    views={views}\n                    cover={cover}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n\n                    // logo\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              { dataPath === 'vacancy_roles' && <Roles slug={slug} weight={weight} onChange={this.onChange} /> }\n\n              {/* 6. Plans */}\n              { dataPath === 'plans' && <Plans price={price} onChange={this.onChange} /> }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies'\n                        ? <Button disabled={!skills || !locations} outline color=\"primary\" type=\"submit\">Save</Button>\n                        : <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} - {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nconst Jobs = ({ name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-title\">Job title</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-title\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n} else if (dataPath === 'vacancies') {\n  // const { surname, password, email } = state;\n  return axios.post(\n    path,\n    { name, },\n    { headers }\n  )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover, id }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        id,\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { details, slug, logo, cover, skills, locations, role, company, user, created, modified, published, views, } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        // id,\n        name,\n        details,\n        slug,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.name,\n        employer_id: user.id,\n\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n\n        // company:\"google\",\n        // \"created\": \"2020-01-28T10:28:57.000Z\",\n        // \"modified\": \"2020-01-28T11:24:33.864Z\",\n        // \"published\": \"2020-01-01T10:26:41.000Z\",\n        // \"paused\": null,\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"plan_id\": null,\n        // \"company_id\": 9301,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"status\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"views\": 4,\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n\n          // slug,\n          // description,\n          // created,\n          // modified,\n          // published,\n          // views,\n\n\n          // slug, // не нужен\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { id, name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { id, name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { id, name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users') {\n        const { data } = res;\n        this.editAfterAdd(data);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}