{"version":3,"sources":["ph-admin/routes/Plans.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/consts.js","ph-admin/selects/plan.jsx","ph-admin/selects/status.jsx","ph-admin/selects/seniority.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Plans","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","_ref3","concat","price","_ref4","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","dataPath","buttonText","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","width","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","API_URL","subUrl","params","where","like","limit","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","react_default","Fragment","className","htmlFor","id","type","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","Users","surname","email","job_title","experience","emailVerified","status","created","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","disabled","location_Location","selects_skills","substring","length","map","i","url","checked","getUsers","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","planValues","label","statusValues","seniorityValues","Plan","dist_react_select_browser_esm","options","Status","Seniority","Jobs","details","locations","company","role","published","user","plan","jobStatus","seniority","experience_up","experience_from","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","onChangePlan","onChangeStatus","onChangeSeniority","logoSwitcher","coverSwitcher","logoUrl","coverUrl","includes","logoSplit","split","pop","coverSplit","selects_status","selects_user","selects_role","selects_plan","selects_company","selects_seniority","location_Locations","editor","min","max","markers","Roles","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","views","adminObj","employer_id","plan_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","company_id","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","startOrder","pageSize","page","sorted","skip","order","desc","path","vacancy_role","application_type","application_link","hash","patch","location_id","skillsNames","push","skills_string","toString","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","textAlign","controlsColumn","sortable","filterable","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/13.940ce5e5.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Plans extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Plans') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Plan',\n        accessor: 'plan',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <div>{original.name || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Price',\n        accessor: 'price',\n        Cell: ({ original }) => <div>{`$${original.price}`}</div> || '...',\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n    ];\n\n    return (\n      <Table columns={columns} dataPath='plans' buttonText=\"plan\" />\n    );\n  }\n}\n\nexport default withHeaderTitle(Plans);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Company name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    name,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Location\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n          'limit': 1\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCompany = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${inputValue}`}\n          },\n          'limit': 1\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getCompanies, getCompany };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getCompanies } from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","const planValues = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nconst statusValues = [\n  { value: 'public',  label: 'Public' },\n  { value: 'draft',   label: 'Draft' },\n  { value: 'expired', label: 'Expired' },\n];\n\nconst seniorityValues = [\n  { value: 1, label: 'Junior' },\n  { value: 2, label: 'Mid level' },\n  { value: 3, label: 'Senior' },\n  { value: 4, label: 'Managment' },\n];\n\nexport { planValues, statusValues, seniorityValues };\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { planValues } from '../consts';\n\nconst Plan = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={planValues}\n  />\n);\n\nexport default Plan;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { statusValues } from '../consts';\n\nconst Status = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={statusValues}\n  />\n);\n\nexport default Status;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { seniorityValues } from '../consts';\n\nconst Seniority = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={seniorityValues}\n  />\n);\n\nexport default Seniority;\n","import React from 'react';\n\nimport { API_URL, subUrl } from './../../api/apiUrl';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User          from '../../selects/user';\nimport Role          from '../../selects/role';\nimport Company       from '../../selects/company';\nimport Skills        from '../../selects/skills';\nimport Editor        from '../../selects/editor';\nimport Plan          from '../../selects/plan';\nimport Status        from '../../selects/status';\nimport Seniority     from '../../selects/seniority';\nimport { Locations } from '../../selects/location';\n\nconst Jobs = props => {\n  const {\n    name,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    user,\n    plan,\n    jobStatus,\n    seniority,\n    experience_up,\n    experience_from,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n    onChangePlan,\n    onChangeStatus,\n    onChangeSeniority,\n\n    // logo\n    logo, logoSwitcher, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverSwitcher, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  let logoUrl = `${API_URL}/${subUrl}/containers/logo/download/${logo}`;\n  let coverUrl = `${API_URL}/${subUrl}/containers/cover/download/${cover}`;\n\n  // fix problem with open item after additing image\n  if (!logoSwitcher && logo && logo.includes('http')) {\n    const logoSplit = logo.split('/').pop();\n    logoUrl = `${API_URL}/${subUrl}/containers/logo/download/${logoSplit}`;\n  }\n\n  if (!coverSwitcher && cover && cover.includes('http')) {\n    const coverSplit = cover.split('/').pop();\n    coverUrl = `${API_URL}/${subUrl}/containers/cover/download/${coverSplit}`;\n  }\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-status\">Status</label>\n          <div className=\"col-md-4\">\n            <Status value={jobStatus} onChange={onChangeStatus} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-plan\">Plan</label>\n          <div className=\"col-md-4\">\n            <Plan value={plan} onChange={onChangePlan} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-seniority\">Seniority</label>\n          <div className=\"col-md-4\">\n            <Seniority value={seniority} onChange={onChangeSeniority} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"date\"\n              name=\"created\"\n              id=\"edit-created\"\n              value={created && created.substring(0, 10)}\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_from\">Experience from</label>\n\n          <div className=\"col-md-4\">\n            <input\n                min={0}\n                max={30}\n                type=\"number\"\n                onChange={onChange}\n                name=\"experience_from\"\n                value={experience_from}\n                id=\"edit-experience_from\"\n                className=\"form-control input-rounded\"\n              />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_up\">Experience to</label>\n\n          <div className=\"col-md-4\">\n            <input\n              min={0}\n              max={30}\n              type=\"number\"\n              onChange={onChange}\n              name=\"experience_up\"\n              value={experience_up}\n              id=\"edit-experience_up\"\n              className=\"form-control input-rounded\"\n              />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              !logoSwitcher ? (\n                logo ? <img className=\"logo\" src={logoUrl} alt=\"logo\" />\n                     : <div className=\"no-logo\">No logo</div>\n              ) : (\n                logoLoading ? <Spinner /> : (\n                  logo && <img className=\"logo\" src={logo} alt=\"logo\" />\n                )\n              )\n            }\n\n            <input\n              disabled\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              !coverSwitcher ? (\n                cover ? <img className=\"cover\" src={coverUrl} alt=\"cover\" />\n                      : <div className=\"no-cover\">No cover</div>\n              ) : (\n                coverLoading ? <Spinner /> : (\n                  cover && <img className=\"cover\" src={cover} alt=\"cover\" />\n                )\n              )\n            }\n\n            <input\n              disabled\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Skill name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ name, slug, weight, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Role</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              type=\"number\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ name, price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Plan</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          type=\"number\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\nimport { getCompany } from '../api/getCompanies';\n\nimport { planValues, statusValues, seniorityValues } from '../consts';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoSwitcher: false,\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverSwitcher: false,\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null,\n    plan: {},\n    plan_id: null,\n    jobStatus: '',\n    seniority: null,\n    experience_up: null,\n    experience_from: null,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  // TODO - refactoring\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n  onChangeSeniority = seniority => this.setState({ seniority });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id\n    });\n  }\n\n  onChangePlan = plan => {\n    this.setState({\n      plan,\n      plan_id: plan.value\n    });\n  }\n\n  onChangeStatus = jobStatus => {\n    this.setState({\n      jobStatus,\n      status: jobStatus.value\n    });\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({\n      logoLoading: true,\n      logoSwitcher: true\n    });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({\n      coverLoading: true,\n      coverSwitcher: true\n    });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from, company_id\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      i.name === 'admin' && this.setState({ admin: true });\n    });\n\n    // company_id && console.log(company_id);\n\n    // get current company\n    company_id && getCompany(company_id)\n      // preloader\n      .then(this.setState({\n        company: { name: 'Loading ...' }\n      }))\n      .then(res => this.setState({ company: res.data }))\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      // preloader\n      .then(this.setState({\n        user: {\n          name: 'Loading ...',\n          surname: ''\n        }\n      }))\n      .then(user => this.setState({ user: user.data }));\n      // TODO .catch()\n\n    // get current plan for job\n    plan_id && planValues.map(i => {\n      plan_id === i.value && this.setState({ plan: i });\n    });\n\n\n    // get current status for job\n    status && statusValues.map(i => {\n      status === i.value && this.setState({ jobStatus: i });\n    });\n\n    // get current seniority for job\n    seniority && seniorityValues.map(i => {\n      seniority === i.value && this.setState({ seniority: i });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal);\n    // console.log('state.company edit.jsx:', this.state.company);\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user, plan, jobStatus, seniority, experience_up, experience_from, logoSwitcher, coverSwitcher\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) || dataPath === 'vacancies' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>&nbsp;\n              {\n                itemOriginal.views ? (\n                  <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;{`${itemOriginal.views}`})</span>\n                ) : <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;0)</span>\n              }\n            </h4>\n          ) || (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    role={role}\n                    user={user}\n                    plan={plan}\n                    views={views}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n                    jobStatus={jobStatus}\n                    seniority={seniority}\n                    experience_up={experience_up}\n                    experience_from={experience_from}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n                    onChangePlan={this.onChangePlan}\n                    onChangeStatus={this.onChangeStatus}\n                    onChangeSeniority={this.onChangeSeniority}\n\n                    // logo\n                    logo={logo}\n                    logoSwitcher={logoSwitcher}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverSwitcher={coverSwitcher}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 6. Plans */}\n              {\n                dataPath === 'plans' && (\n                  <Plans name={name} price={price} onChange={this.onChange} />\n                )\n              }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies'\n                        ? <Button disabled={!skills || !locations} outline color=\"primary\" type=\"submit\">Save</Button>\n                        : <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nimport User          from '../../selects/user';\nimport Company       from '../../selects/company';\n\nconst Jobs = ({\n  name, company, user,\n\n  onChange, onChangeCompany, onChangeUser\n}) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n        <div className=\"col-md-10\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n        <div className=\"col-md-4\">\n          <Company value={company} onChange={onChangeCompany} />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">User</label>\n        <div className=\"col-md-4\">\n          <User value={user} onChange={onChangeUser} />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n    company: {},\n    user: {\n      name: '',\n      surname: ''\n    }\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeUser      = user      => this.setState({ user });\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password,\n      company, user\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    user={user}\n                    company={company}\n                    onChange={this.onChange}\n                    onChangeUser={this.onChangeUser}\n                    onChangeCompany={this.onChangeCompany}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { company, user } = state;\n    return axios.post(\n      path,\n      {\n        name,\n        details: '<p></p>',\n        vacancy_role: 1,\n        seniority: 1,\n        experience_from: 0,\n        experience_up: 1,\n        application_type: 0,\n        application_link: null,\n        employer_id: user.id,\n        plan_id: 1,\n        company_id: company.id,\n        hash: null,\n        status: 'draft',\n        companies: [],\n      },\n      { headers }\n    )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const {\n      details,\n      logo,\n      cover,\n      skills,\n      locations,\n      role,\n      company,\n      user,\n      plan,\n      jobStatus,\n      seniority,\n      experience_up,\n      experience_from,\n      created,\n    } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        name,\n        details,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.length ? company[0].name : company.name,\n        employer_id: user.id,\n        plan_id: plan.value,\n        status: jobStatus.value,\n        seniority: seniority.value,\n        experience_from,\n        experience_up,\n        created,\n\n        // \"paused\": null,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users' || dataPath === 'vacancies') {\n        const { data } = res;\n        this.editAfterAdd(data);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}