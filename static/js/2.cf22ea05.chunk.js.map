{"version":3,"sources":["components/Header/HeaderTitle.js","views/Pages/Users.js"],"names":["withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_ph_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_effectiveuser_Desktop_ph_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_ph_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_ph_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_ph_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","setHeaderTitle","headerTitle","pubsub","publish","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","assign","props","Component","Users","state","data","count","loading","_this2","columns","Header","accessor","width","Cell","_ref","original","style","textAlign","id","fontWeight","_ref2","concat","name","surname","_ref3","href","email","_ref4","created","substring","_this$state","react_table__WEBPACK_IMPORTED_MODULE_6__","pages","manual","resizable","filterable","className","onFetchData","pageSize","page","sorted","filtered","setState","filter","where","limit","skip","order","forEach","i","like","desc","axios","get","API_URL","params","headers","Authorization","localStorage","getItem","then","res","Math","ceil","console","log","catch","error","React"],"mappings":"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","file":"static/js/2.cf22ea05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","// filtering +++\n// прописать catch для запросов\n// save user data in one object in localStorage\n// checking admin rights when login\n// catch 401 error -> redirect to login\n\nimport React from \"react\";\nimport ReactTable from \"react-table\";\nimport axios from 'axios';\n\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nimport API_URL from '../../consts/apiUrl';\n\nclass Users extends React.Component {\n  state = {\n    data: [],\n    count: null,\n    loading: false,\n  }\n\n  // inject title text\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Users') }\n\n  render() {\n    // table columns\n    const columns = [\n      {\n        Header: 'ID',\n        accessor: 'id',\n        width: 60,\n        Cell: ({ original }) => (\n          <div style={{ textAlign: 'right' }}>\n            <span>{original.id || '...'}</span>\n          </div>\n        )\n      },\n\n      {\n        Header: 'Name',\n        accessor: 'name',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => (\n          <div>\n            <span>{`${original.name} ${original.surname}` || '...'}</span>\n          </div>\n        )\n      },\n\n      {\n        Header: 'Email',\n        accessor: 'email',\n        Cell: ({ original }) => <a href={`mailto:${original.email}`}>{original.email || '—'}</a>\n      },\n\n      {\n        Header: 'Created',\n        accessor: 'created',\n        width: 120,\n        Cell: ({ original }) => (\n          <div style={{ textAlign: 'center' }} >\n            <span>{original.created.substring(0, 10) || '...'}</span>\n          </div>\n        )\n      },\n    ];\n\n    const { data, loading, count } = this.state;\n\n    return (\n      <div>\n        <ReactTable\n          pages={count}\n          manual={true}\n          data={data}\n          loading={loading}\n          resizable={true}\n          filterable={true}\n          className=\"-striped -highlight\"\n          columns={columns}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            // console.log(state);\n\n            const { pageSize, page, sorted, filtered } = state;\n\n            this.setState({ loading: true });\n\n            // filter template for request\n            const filter = {\n              where: {},\n              limit: pageSize,\n              skip: page * pageSize,\n              order: 'id DESC' // id DESC - by default\n            };\n\n            // inject values to filter object when we fill data to filter inputs\n            filtered.forEach(i => {\n              if (i.id === 'id') filter.where[i.id] = i.value\n              else               filter.where[i.id] = { 'like': i.value + '%' }\n            });\n\n            // inject data to order when we click sorting\n            sorted.forEach(i => {\n              const desc = i.desc ? 'DESC' : 'ASC'\n              filter.order = `${i.id} ${desc}`;\n            });\n\n\n            // fetch only count\n            axios.get(`${API_URL}/api/api/users/count`, {\n              // params for get count when we have filled filters\n              params: { where: filter.where },\n              headers: { Authorization: localStorage.getItem('ph-admin-token') },\n            }\n\n            ).then(res => {\n              // save count to coponent state\n              // res.data.count - all items inside response\n              // count - we find pages-count to add to Table property pages\n              this.setState({ count: Math.ceil(res.data.count / pageSize) });\n\n            // fetch data only for 1 page\n            }).then(\n              axios.get(`${API_URL}/api/api/users`, {\n                params: { filter },\n                headers: { Authorization: localStorage.getItem('ph-admin-token') }\n\n              }).then(res => {\n                console.log(res.data);\n                this.setState({\n                  // save data to component state\n                  data: res.data,\n                  loading: false\n                });\n\n                // TODO catch errors\n              }).catch(error => { console.log(error) })\n            )\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withHeaderTitle(Users);\n"],"sourceRoot":""}