{"version":3,"sources":["ph-admin/routes/Plans.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/selects/plan.jsx","ph-admin/selects/status.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Plans","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","_ref3","concat","price","_ref4","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","dataPath","buttonText","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","width","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","API_URL","subUrl","params","where","like","limit","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","react_default","Fragment","className","htmlFor","id","type","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","Users","surname","email","job_title","experience","emailVerified","status","created","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","disabled","location_Location","selects_skills","substring","length","map","i","url","checked","getUsers","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","options","label","Plan","dist_react_select_browser_esm","Status","Jobs","details","locations","company","role","published","views","user","plan","jobStatus","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","onChangePlan","onChangeStatus","selects_company","selects_user","selects_role","selects_plan","selects_status","location_Locations","editor","markers","Roles","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","adminObj","employer_id","plan_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","startOrder","pageSize","page","sorted","skip","order","desc","path","patch","location_id","skillsNames","push","skills_string","toString","split","pop","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","textAlign","controlsColumn","sortable","filterable","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"0LAMMA,sMAC0BC,KAAKC,MAAMC,eAAe,0CAGtD,IAAMC,EAAU,CACd,CACEC,OAAQ,OACRC,SAAU,OACVC,MAAO,CAAEC,WAAY,QACrBC,KAAM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkBC,EAAAC,EAAAC,cAAA,WAAMH,EAASI,MAAQ,QAC/CC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,SAAX,OAA0BC,YAAgBF,EAAQC,KAG5D,CACEd,OAAQ,QACRC,SAAU,QACVG,KAAM,SAAAY,GAAA,IAAGV,EAAHU,EAAGV,SAAH,OAAkBC,EAAAC,EAAAC,cAAA,eAAAQ,OAAUX,EAASY,SAAkB,OAC7DP,OAAQ,SAAAQ,GAAA,IAAGN,EAAHM,EAAGN,OAAQC,EAAXK,EAAWL,SAAX,OAA0BC,YAAgBF,EAAQC,MAI9D,OACEP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAOrB,QAASA,EAASsB,SAAS,QAAQC,WAAW,gBAtBvCC,IAAMC,WA2BXC,sBAAgB9B,kJC9BxB,SAAS8B,EAAgBC,GAC5B,gBAAAC,GAAA,SAAAC,IAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAjC,KAAAgC,GAAAC,OAAAE,EAAA,EAAAF,CAAAjC,KAAAiC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,MAAArC,KAAAsC,YAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAD,EAAAD,GAAAE,OAAAO,EAAA,EAAAP,CAAAD,EAAA,EAAAS,IAAA,SAAAC,MAAA,WAEQ,IAAMC,EAAU,CACZzC,eAAgB,SAAA0C,GACZC,IAAOC,QAAQ,eAAgBF,KAGvC,OAAOjC,EAAAC,EAAAC,cAACiB,EAADG,OAAAc,OAAA,GAAsB/C,KAAKC,MAAW0C,QAPrDX,EAAA,CAAiCJ,gDCJrC,IAAAoB,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,KAce9B,IAXS,SAACF,EAAQC,GAC/B,OACEgC,EAAAtC,EAAAC,cAACuC,EAAA,MAAD,CACE9C,MAAO,CAAE+C,MAAO,QAChBX,MAAOzB,EAASA,EAAOyB,MAAQ,GAC/BxB,SAAU,SAAAoC,GAAK,OAAIpC,EAASoC,EAAMC,OAAOb,QACzCc,gBAAiB,yCCTvB,IAAAC,EAAAR,EAAA,IAAAS,EAAAT,EAAAE,EAAAM,GAAAE,EAAAV,EAAA,IAKMW,EAAU,CAAEC,cALlBZ,EAAA,KAKiCa,GAmBlBC,IAjBM,SAAAC,GACnB,OAAOC,IAAMC,IAAN,GAAA7C,OACF8C,IADE,KAAA9C,OACS+C,IADT,cAEL,CACEC,OAAQ,CACNpD,OAAU,CACRqD,MAAS,CACPxD,KAAQ,CAAEyD,KAAA,IAAAlD,OAAY2C,EAAZ,OAEZQ,MAAS,KAGbZ,wQC0GSa,EAzHG,SAAAxE,GAAS,IAEvBa,EAYEb,EAZFa,KACA4D,EAWEzE,EAXFyE,KACAC,EAUE1E,EAVF0E,OACAC,EASE3E,EATF2E,OACA1D,EAQEjB,EARFiB,SAGA2D,EAKE5E,EALF4E,KAAMC,EAKJ7E,EALI6E,YAAaC,EAKjB9E,EALiB8E,aAAcC,EAK/B/E,EAL+B+E,cAGjCC,EAEEhF,EAFFgF,MAAOC,EAELjF,EAFKiF,aAAcC,EAEnBlF,EAFmBkF,cAAeC,EAElCnF,EAFkCmF,eAItC,OACEC,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,gBACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4B,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,SACL4B,MAAOiC,EACPc,GAAG,cACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4B,MAAOgC,EACPe,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,SACL4B,MAAOkC,EACPa,GAAG,cACHvE,SAAUA,EACVwE,KAAK,SACLH,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,YAAU0E,UAAU,0BAClBF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,wBAEXT,EAAcO,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,MACZd,EAAOQ,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,OAAOK,IAAKf,EAAMgB,IAAI,SAAYR,EAAAzE,EAAAC,cAAA,QAAM0E,UAAU,WAAhB,WAI5DF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4B,MAAOmC,EACPY,GAAG,YACHvE,SAAUA,EACVwE,KAAK,MACLH,UAAU,+BAGZF,EAAAzE,EAAAC,cAAA,SAAO6E,KAAK,OAAOI,IAAKd,EAAe9D,SAAU6D,KAGnDM,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,SACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,wBAEXL,EAAeG,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,MACbV,EAAQI,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,QAAQK,IAAKX,EAAOY,IAAI,UAAaR,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YAAf,YAIhEF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,QACL4B,MAAOuC,EACPQ,GAAG,aACHvE,SAAUA,EACVwE,KAAK,MACLH,UAAU,+BAGZF,EAAAzE,EAAAC,cAAA,SAAO6E,KAAK,OAAOI,IAAKV,EAAgBlE,SAAUiE,2BChHxDY,6MAGJC,YAAc,SAAAhC,GACZ,OAAOD,YAAaC,GAAYiC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gFAGzC,IAAAC,EACqBpG,KAAKC,MAAzByC,EADD0D,EACC1D,MAAOxB,EADRkF,EACQlF,SAEf,OACEmE,EAAAzE,EAAAC,cAACwF,EAAA,EAAD,CACEC,cAAc,OACdC,cAAc,EACdC,gBAAgB,EAGhBR,YAAahG,KAAKgG,YAGlBS,eAAgB,SAAAC,GAAC,OAAIA,EAAEjB,IAGvBkB,eAAgB,SAAAD,GAAC,OAAIA,EAAE5F,MAGvB4B,MAAOA,EACPxB,SAAUA,WA3BKS,IAAMC,WAmCvBgF,6MACJZ,YAAc,SAAAhC,GACZ,OAAOD,YAAaC,GAAYiC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gFAGzC,IAAAU,EACqB7G,KAAKC,MAAzByC,EADDmE,EACCnE,MAAOxB,EADR2F,EACQ3F,SAEf,OACEmE,EAAAzE,EAAAC,cAACwF,EAAA,EAAD,CACES,SAAS,EACTpE,MAAOA,EACP4D,cAAc,OACdC,cAAc,EACdC,gBAAgB,EAChBR,YAAahG,KAAKgG,YAClBS,eAAgB,SAAAC,GAAC,OAAIA,EAAEjB,IACvBkB,eAAgB,SAAAD,GAAC,OAAIA,EAAE5F,MACvBI,SAAUA,WAlBMS,IAAMC,6CCnCxBgC,EAAU,CAAEC,cAAeC,KAmBlBiD,EAjBG,SAAA/C,GAChB,OAAOC,IAAMC,IAAN,GAAA7C,OACF8C,IADE,KAAA9C,OACS+C,IADT,WAEL,CACEC,OAAQ,CACNpD,OAAU,CACRqD,MAAS,CACPxD,KAAQ,CAAEyD,KAAA,IAAAlD,OAAY2C,EAAZ,OAEZQ,MAAS,KAGbZ,aCUSoD,6MAvBbhB,YAAc,SAAAhC,GACZ,OAAO+C,EAAU/C,GAAYiC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gFAGtC,IAAAC,EACqBpG,KAAKC,MAAzByC,EADD0D,EACC1D,MAAOxB,EADRkF,EACQlF,SAEf,OACEmE,EAAAzE,EAAAC,cAACwF,EAAA,EAAD,CACES,SAAS,EACTR,cAAc,OACdC,cAAc,EACdC,gBAAgB,EAChBR,YAAahG,KAAKgG,YAClBS,eAAgB,SAAAC,GAAC,OAAIA,EAAEjB,IACvBkB,eAAgB,SAAAD,GAAC,OAAIA,EAAE5F,MACvBI,SAAUA,EACVwB,MAAOA,WAlBMf,IAAMC,WCmQZqF,EAlQD,SAAAhH,GAAS,IAEnBa,EAqBEb,EArBFa,KACAoG,EAoBEjH,EApBFiH,QACAC,EAmBElH,EAnBFkH,MACAC,EAkBEnH,EAlBFmH,UACAC,EAiBEpH,EAjBFoH,WACAC,EAgBErH,EAhBFqH,cACAC,EAeEtH,EAfFsH,OACAC,EAcEvH,EAdFuH,QACAC,EAaExH,EAbFwH,SACAC,EAYEzH,EAZFyH,MACAC,EAWE1H,EAXF0H,MACAC,EAUE3H,EAVF2H,SACAC,EASE5H,EATF4H,OACAC,EAQE7H,EARF6H,MACAC,EAOE9H,EAPF8H,aACAC,EAME/H,EANF+H,eACAC,EAKEhI,EALFgI,cACA/G,EAIEjB,EAJFiB,SACAgH,EAGEjI,EAHFiI,cACAC,EAEElI,EAFFkI,iBACAC,EACEnI,EADFmI,eAGIC,EAAaT,GAAQ,GAAAvG,OAAOuG,EAASnC,GAAhB,OAAApE,OAAwBuG,EAASU,aAAjC,MAAAjH,OAAkDuG,EAASW,QAA3D,MAAyE,GAEpG,OACElD,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE6E,KAAK,OACL5E,KAAK,UACL4B,MAAOwE,EACPzB,GAAG,eACHvE,SAAUA,EACVqE,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,SAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,QACL4E,KAAK,QACLhD,MAAOyE,EACP1B,GAAG,aACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,kBAAxE,aAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE6E,KAAK,OACL5E,KAAK,YACL4B,MAAO0E,EACP3B,GAAG,iBACHvE,SAAUA,EACVqE,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,oBAAxE,eAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE2H,UAAQ,EACR9C,KAAK,OACL5E,KAAK,cACL4B,MAAO2F,EACP5C,GAAG,mBACHF,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAC4H,EAAD,CACE/F,MAAOkF,EACP1G,SAAU,SAAA0G,GAAQ,OAAIO,EAAiBP,SAM/CvC,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,aACbF,EAAAzE,EAAAC,cAAC6H,EAAD,CACEhG,MAAOmF,EACP3G,SAAU,SAAA2G,GAAM,OAAIO,EAAeP,SAM3CxC,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,UACL4B,MAAO8E,GAAWA,EAAQmB,UAAU,EAAG,IACvClD,GAAG,eACH+C,UAAQ,EACR9C,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,iBAAxE,YAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,WACL4B,MAAO+E,GAAYA,EAASkB,UAAU,EAAG,IACzClD,GAAG,gBACH+C,UAAQ,EACR9C,KAAK,OACLH,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,mBAAxE,cAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,aACL4B,MAAO2E,EACP5B,GAAG,kBACHvE,SAAUA,EACVwE,KAAK,SACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,mBAAxE,SAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBAEXmC,GAASA,EAAMkB,OAASlB,EAAMmB,IAAI,SAAAC,GAChC,OAAOzD,EAAAzE,EAAAC,cAAA,eAAAQ,OAAUyH,EAAEhI,KAAZ,eACJuE,EAAAzE,EAAAC,cAAA,2BAMbwE,EAAAzE,EAAAC,cAAA,YAAU0E,UAAU,0BAClBF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,UAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,wBAEXwC,EAAe1C,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,MACbmC,GAASA,EAAMiB,IAAM1D,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,QAAQK,IAAKkC,EAAMiB,IAAKlD,IAAI,UAAaR,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YAAf,YAIjFF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,QACL4B,MAAOoF,GAASA,EAAMiB,IACtBtD,GAAG,aACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,+BAGZF,EAAAzE,EAAAC,cAAA,SAAO6E,KAAK,OAAOI,IAAKkC,EAAgB9G,SAAU+G,KAIpD5C,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,gDAAjB,gBAEAF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,cACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,cACfF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,QACL2E,GAAG,aACHF,UAAU,mBACVG,KAAK,WACLsD,QAASrB,EACTzG,SAAUgH,IAPd,iBAaF7C,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,cACXF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,eACfF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,SACL2E,GAAG,cACHF,UAAU,mBACVG,KAAK,WACLsD,QAASzB,EACTrG,SAAUA,IAPd,kBAaJmE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,cACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,sBACfF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,gBACL2E,GAAG,qBACHF,UAAU,mBACVG,KAAK,WACLsD,QAAS1B,EACTpG,SAAUA,IAPd,wBChPR0C,EAAU,CAAEC,cAAeC,KAE3BmF,EAAW,SAAAjF,GACf,OAAOC,IAAMC,IAAN,GAAA7C,OACF8C,IADE,KAAA9C,OACS+C,IADT,UAEL,CACEC,OAAQ,CACNpD,OAAU,CACRqD,MAAS,CACPxD,KAAQ,CAAEyD,KAAA,IAAAlD,OAAY2C,EAAZ,OAEZQ,MAAS,KAGbZ,aCUSsF,6MAvBblD,YAAc,SAAAhC,GACZ,OAAOiF,EAASjF,GAAYiC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gFAGrC,IAAAC,EACqBpG,KAAKC,MAAzByC,EADD0D,EACC1D,MAAOxB,EADRkF,EACQlF,SAGf,OACEmE,EAAAzE,EAAAC,cAACwF,EAAA,EAAD,CACEC,cAAc,OACdC,cAAc,EACdC,gBAAgB,EAChBR,YAAahG,KAAKgG,YAClBS,eAAgB,SAAAC,GAAC,OAAIA,EAAEjB,IACvBkB,eAAgB,SAAAD,GAAC,SAAArF,OAAOqF,EAAE5F,KAAT,KAAAO,OAAiBqF,EAAEQ,UACpChG,SAAUA,EACVwB,MAAOA,WAlBIf,IAAMC,WCAnBgC,EAAU,CAAEC,cAAeC,KAkBlBqF,EAhBE,SAAAnF,GACf,OAAOC,IAAMC,IAAN,GAAA7C,OACF8C,IADE,KAAA9C,OACS+C,IADT,kBAEL,CACEC,OAAQ,CACNpD,OAAU,CACRqD,MAAS,CACPxD,KAAQ,CAAEyD,KAAA,IAAAlD,OAAY2C,EAAZ,SAIhBJ,aCUSwF,6MAtBbpD,YAAc,SAAAhC,GACZ,OAAOmF,EAASnF,GAAYiC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gFAGrC,IAAAC,EACqBpG,KAAKC,MAAzByC,EADD0D,EACC1D,MAAOxB,EADRkF,EACQlF,SAEf,OACEmE,EAAAzE,EAAAC,cAACwF,EAAA,EAAD,CACEC,cAAc,OACdC,cAAc,EACdC,gBAAgB,EAChBR,YAAahG,KAAKgG,YAClBS,eAAgB,SAAAC,GAAC,OAAIA,EAAEjB,IACvBkB,eAAgB,SAAAD,GAAC,OAAIA,EAAE5F,MACvBI,SAAUA,EACVwB,MAAOA,WAjBIf,IAAMC,WCAnBgC,EAAU,CAAEC,cAAeC,KAmBlBuF,EAjBM,SAAArF,GACnB,OAAOC,IAAMC,IAAN,GAAA7C,OACF8C,IADE,KAAA9C,OACS+C,IADT,cAEL,CACEC,OAAQ,CACNpD,OAAU,CACRqD,MAAS,CACPxD,KAAQ,CAAEyD,KAAA,IAAAlD,OAAY2C,EAAZ,OAEZQ,MAAS,KAGbZ,aCSS0F,6MAtBbtD,YAAc,SAAAhC,GACZ,OAAOqF,EAAarF,GAAYiC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,gFAGzC,IAAAC,EACqBpG,KAAKC,MAAzByC,EADD0D,EACC1D,MAAOxB,EADRkF,EACQlF,SAEf,OACEmE,EAAAzE,EAAAC,cAACwF,EAAA,EAAD,CACEC,cAAc,OACdC,cAAc,EACdC,gBAAgB,EAChBR,YAAahG,KAAKgG,YAClBS,eAAgB,SAAAC,GAAC,OAAIA,EAAEjB,IACvBkB,eAAgB,SAAAD,GAAC,OAAIA,EAAE5F,MACvBI,SAAUA,EACVwB,MAAOA,WAjBOf,IAAMC,6BCEb2H,UAFA,SAAA9I,GAAA,IAAGiC,EAAHjC,EAAGiC,MAAOxB,EAAVT,EAAUS,SAAV,OAAyBmE,EAAAzE,EAAAC,cAAC2I,EAAA5I,EAAD,CAAY8B,MAAOA,EAAOxB,SAAUA,eCFtEuI,EAAU,CACd,CAAE/G,MAAO,EAAGgH,MAAO,QACnB,CAAEhH,MAAO,EAAGgH,MAAO,UACnB,CAAEhH,MAAO,EAAGgH,MAAO,UACnB,CAAEhH,MAAO,EAAGgH,MAAO,SAaNC,EAVF,SAAAlJ,GAAyB,IAAtBiC,EAAsBjC,EAAtBiC,MAAOxB,EAAeT,EAAfS,SACrB,OACEmE,EAAAzE,EAAAC,cAAC+I,EAAA,EAAD,CACElH,MAAOA,EACPxB,SAAUA,EACVuI,QAASA,KCZTA,EAAU,CACd,CAAE/G,MAAO,SAAUgH,MAAO,UAC1B,CAAEhH,MAAO,QAASgH,MAAO,SACzB,CAAEhH,MAAO,UAAWgH,MAAO,YAadG,EAVA,SAAApJ,GAAyB,IAAtBiC,EAAsBjC,EAAtBiC,MAAOxB,EAAeT,EAAfS,SACvB,OACEmE,EAAAzE,EAAAC,cAAC+I,EAAA,EAAD,CACElH,MAAOA,EACPxB,SAAUA,EACVuI,QAASA,KC2NAK,EA5NF,SAAA7J,GAAS,IAElBa,EA8BEb,EA9BFa,KACAiJ,EA6BE9J,EA7BF8J,QACAlC,EA4BE5H,EA5BF4H,OACAmC,EA2BE/J,EA3BF+J,UACAC,EA0BEhK,EA1BFgK,QACAC,EAyBEjK,EAzBFiK,KACA1C,EAwBEvH,EAxBFuH,QACAC,EAuBExH,EAvBFwH,SACA0C,EAsBElK,EAtBFkK,UACAC,EAqBEnK,EArBFmK,MACAC,EAoBEpK,EApBFoK,KACAC,EAmBErK,EAnBFqK,KACAC,EAkBEtK,EAlBFsK,UAEArJ,EAgBEjB,EAhBFiB,SACAsJ,EAeEvK,EAfFuK,aACAC,EAcExK,EAdFwK,kBACArC,EAaEnI,EAbFmI,eACAsC,EAYEzK,EAZFyK,gBACAC,EAWE1K,EAXF0K,gBACAC,EAUE3K,EAVF2K,aACAC,EASE5K,EATF4K,aACAC,EAQE7K,EARF6K,eAQE7K,EALF4E,KAKE5E,EALI6E,YAKJ7E,EALiB8E,aAKjB9E,EAL+B+E,cAK/B/E,EAFFgF,MAEEhF,EAFKiF,aAELjF,EAFmBkF,cAEnBlF,EAFkCmF,eAMtC,OACEC,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,aAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAACkK,EAAD,CAASrI,MAAOuH,EAAS/I,SAAUwJ,OAKzCrF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAACmK,EAAD,CAAMtI,MAAO2H,EAAMnJ,SAAU0J,KAG/BvF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAACoK,EAAD,CAAMvI,MAAOwH,EAAMhJ,SAAUsJ,OAKnCnF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAACqK,EAAD,CAAMxI,MAAO4H,EAAMpJ,SAAU2J,KAG/BxF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAACsK,EAAD,CAAQzI,MAAO6H,EAAWrJ,SAAU4J,OAK1CzF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,kBAAxE,aACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,aACbF,EAAAzE,EAAAC,cAACuK,EAAD,CAAW1I,MAAOsH,EAAW9I,SAAUuJ,OAK7CpF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,aACbF,EAAAzE,EAAAC,cAAC6H,EAAD,CAAQhG,MAAOmF,EAAQ3G,SAAUkH,OAKvC/C,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,aACbF,EAAAzE,EAAAC,cAACwK,EAAD,CAAQ3I,MAAOqH,EAAS7I,SAAUyJ,OAKxCtF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE2H,UAAQ,EACR9C,KAAK,OACL5E,KAAK,UACL4B,MAAO8E,GAAWA,EAAQmB,UAAU,EAAG,IACvClD,GAAG,eACHF,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,iBAAxE,YACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE2H,UAAQ,EACR9C,KAAK,OACL5E,KAAK,WACL4B,MAAO+E,GAAYA,EAASkB,UAAU,EAAG,IACzClD,GAAG,gBACHF,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,aACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE2H,UAAQ,EACR9C,KAAK,OACL5E,KAAK,YACL4B,MAAOyH,GAAaA,EAAUxB,UAAU,EAAG,IAC3ClD,GAAG,iBACHF,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,SACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE2H,UAAQ,EACR9C,KAAK,OACL5E,KAAK,QACL4B,MAAO0H,EACP3E,GAAG,aACHF,UAAU,oCCnHTyB,EA7DA,SAAAvG,GAAA,IAAGK,EAAHL,EAAGK,KAAM8D,EAATnE,EAASmE,OAAQF,EAAjBjE,EAAiBiE,KAAM4G,EAAvB7K,EAAuB6K,QAASpK,EAAhCT,EAAgCS,SAAhC,OACbmE,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,cAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,SACL4E,KAAK,SACLhD,MAAOkC,EACPa,GAAG,cACHvE,SAAUA,EACVqE,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAOgC,EACPe,GAAG,YACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACE6E,KAAK,OACL5E,KAAK,UACL4B,MAAO4I,EACP7F,GAAG,eACHvE,SAAUA,EACVqE,UAAU,oCCLPgG,EAhDD,SAAA9K,GAAA,IAAGK,EAAHL,EAAGK,KAAM4D,EAATjE,EAASiE,KAAME,EAAfnE,EAAemE,OAAQ1D,EAAvBT,EAAuBS,SAAvB,OACZmE,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAOgC,EACPe,GAAG,YACHvE,SAAUA,EACVqE,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACEH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,SACL4E,KAAK,SACLhD,MAAOkC,EACPa,GAAG,cACHvE,SAAUA,EACVqE,UAAU,oCCVTxF,EA9BD,SAAAU,GAAA,IAAGK,EAAHL,EAAGK,KAAMQ,EAATb,EAASa,MAAOJ,EAAhBT,EAAgBS,SAAhB,OACZmE,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,OACL4E,KAAK,OACLhD,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVqE,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,SACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEC,KAAK,QACL4E,KAAK,SACLhD,MAAOpB,EACPmE,GAAG,aACHvE,SAAUA,EACVqE,UAAU,mCCpBd3B,EAAU,CAAE4H,eAAgB,sBAAuB3H,cAAeC,KAQzD2H,EANW,SAAAC,GACxB,OAAOzH,IAAM0H,KAAN,GAAAtK,OACF8C,IADE,KAAA9C,OACS+C,IADT,mBACkCsH,EAAU,CAAE9H,aCJjDA,GAAU,CAAE4H,eAAgB,sBAAuB3H,cAAeC,KAQzD8H,GANY,SAAAF,GACzB,OAAOzH,IAAM0H,KAAN,GAAAtK,OACF8C,IADE,KAAA9C,OACS+C,IADT,oBACmCsH,EAAU,CAAE9H,cCJlDA,GAAU,CAAE4H,eAAgB,sBAAuB3H,cAAeC,KASzD+H,GANY,SAACH,EAAUjG,GACpC,OAAOxB,IAAM0H,KAAN,GAAAtK,OACF8C,IADE,KAAA9C,OACS+C,IADT,WAAA/C,OACyBoE,EADzB,gBAC2CiG,EAAU,CAAE9H,cCscjDkI,8MA7bb9G,cAAgBrD,IAAMoK,cACtB3G,eAAiBzD,IAAMoK,cACvB/D,eAAiBrG,IAAMoK,cAEvBC,MAAQ,CACNvG,GAAI,KACJ3E,KAAM,GACNoG,QAAS,GACTvC,OAAQ,GACRwC,MAAO,GACPG,eAAe,EACf5C,KAAM,GACNqF,QAAS,GACTnF,OAAQ,KACRtD,MAAO,KACPgK,QAAS,KACT/D,QAAQ,EACRH,UAAW,GACXC,WAAY,KACZ+C,MAAO,KACP5C,QAAS,KACTC,SAAU,KACV0C,UAAW,KACXD,KAAM,GACNxC,MAAO,GACPuC,QAAS,GACTrC,SAAU,GACVoC,UAAW,GACXnC,OAAQ,GAGRhD,KAAM,GACNC,aAAa,EAGbG,MAAO,GACPC,cAAc,EAGd4C,MAAO,GACPC,cAAc,EAEdJ,OAAO,EACPsE,SAAU,GACV5B,KAAM,GACN6B,YAAa,KACb5B,KAAM,GACN6B,QAAS,KACT5B,UAAW,MAGbrJ,SAAW,SAAAkL,GACa,aAAlBA,EAAE7I,OAAOmC,KACX2G,EAAKC,SAALrK,OAAAsK,EAAA,EAAAtK,CAAA,GAAiBmK,EAAE7I,OAAOzC,KAAOsL,EAAE7I,OAAOyF,UAE1CqD,EAAKC,SAALrK,OAAAsK,EAAA,EAAAtK,CAAA,GAAiBmK,EAAE7I,OAAOzC,KAAOsL,EAAE7I,OAAOb,WAI9CwF,cAAgB,SAAAkE,GAAK,IAAAI,EACGH,EAAKL,MAAnBvG,EADW+G,EACX/G,GAAIkC,EADO6E,EACP7E,MAEZ,GAAIyE,EAAE7I,OAAOyF,UAAYrB,EAAO,CAE9B,IAAMsE,EAAW,CACfxG,KACA3E,KAAM,QACN2L,YAAa,KACbjF,SAAU,IAAIkF,MAAOC,cACrBlF,UAAU,IAAIiF,MAAOC,eAGvBN,EAAKC,SAAS,SAAAM,GAAS,MAAK,CAC1BjF,OAAO,EAEPD,MAAOkF,EAAUlF,MAAQkF,EAAUlF,MAAMrG,OAAO4K,GAAY,CAACA,WAI/DI,EAAKC,SAAS,SAAAM,GAAS,MAAK,CAC1BjF,OAAO,EAEPD,MAAOkF,EAAUlF,MAAMzG,OAAO,SAAA6H,GAAC,MAAe,UAAXA,EAAEhI,aAK3C0J,aAAoB,SAAAN,GAAI,OAASmC,EAAKC,SAAS,CAAEpC,YACjDQ,gBAAoB,SAAAT,GAAO,OAAMoC,EAAKC,SAAS,CAAErC,eACjD7B,eAAoB,SAAAP,GAAM,OAAOwE,EAAKC,SAAS,CAAEzE,cACjD8C,gBAAoB,SAAAZ,GAAO,OAAMsC,EAAKC,SAAS,CAAEvC,eACjD5B,iBAAoB,SAAAP,GAAQ,OAAKyE,EAAKC,SAAS,CAAE1E,gBACjD6C,kBAAoB,SAAAT,GAAS,OAAIqC,EAAKC,SAAS,CAAEtC,iBAEjDY,aAAe,SAAAP,GACbgC,EAAKC,SAAS,CACZjC,OACA6B,YAAa7B,EAAK5E,QAItBoF,aAAe,SAAAP,GACb+B,EAAKC,SAAS,CACZhC,OACA6B,QAAS7B,EAAK5H,WAIlBoI,eAAiB,SAAAP,GACf8B,EAAKC,SAAS,CACZ/B,YACAhD,OAAQgD,EAAU7H,WAKtBqC,aAAe,SAAAqH,GACbA,EAAES,iBACFR,EAAKC,SAAS,CAAExH,aAAa,IAG7B,IAAM4G,EAAW,IAAIoB,SAGfC,EAAaV,EAAKrH,cAAcgI,QAAQC,MAAM,GAGpDvB,EAASwB,OAAO,OAAQH,GAGxBtB,EAAkBC,GACfzF,KAAK,SAAAC,GACJmG,EAAKC,SAAS,CACZzH,KAAI,GAAAxD,OAAK8C,IAAL,KAAA9C,OAAgB+C,IAAhB,8BAAA/C,OAAmD6E,EAAIC,KAAKrF,MAChEgE,aAAa,MAKhBqI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAGhCjI,cAAgB,SAAAiH,GACdA,EAAES,iBACFR,EAAKC,SAAS,CAAEpH,cAAc,IAG9B,IAAMwG,EAAW,IAAIoB,SAGfS,EAAclB,EAAKjH,eAAe4H,QAAQC,MAAM,GAGtDvB,EAASwB,OAAO,OAAQK,GAGxB3B,GAAmBF,GAChBzF,KAAK,SAAAC,GACJmG,EAAKC,SAAS,CACZrH,MAAK,GAAA5D,OAAK8C,IAAL,KAAA9C,OAAgB+C,IAAhB,+BAAA/C,OAAoD6E,EAAIC,KAAKrF,MAClEoE,cAAc,MAKjBiI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAGhCnF,cAAgB,SAAAmE,GACdA,EAAES,iBACFR,EAAKC,SAAS,CAAEvE,cAAc,IAE9B,IAAM2D,EAAW,IAAIoB,SAGfU,EAAcnB,EAAKrE,eAAegF,QAAQC,MAAM,GAGtDvB,EAASwB,OAAO,OAAQM,GAVL,IAYX/H,EAAO4G,EAAKL,MAAZvG,GAGRoG,GAAmBH,EAAUjG,GAC1BQ,KAAK,SAAAC,GACJmG,EAAKC,SAAS,CACZxE,MAAO,CAAEiB,IAAG,GAAA1H,OAAK8C,KAAL9C,OAAe6E,EAAIC,KAAKsH,KAAK1E,MACzChB,cAAc,MAKjBoF,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAGhCM,SAAW,SAAAtB,GACTA,EAAES,iBADY,IAENb,EAFM/J,OAAA0L,EAAA,EAAA1L,QAAA0L,EAAA,EAAA1L,CAAAoK,IAENL,MAFM5F,EAGoBiG,EAAKpM,OAGvC2N,EANcxH,EAGNwH,aAGI5B,EANE5F,EAGO3E,8FAMH,IAAAoM,EAAA7N,KAAA8N,EAMd9N,KAAKC,MAHP8N,aACEtI,EAJcqI,EAIdrI,GAAI3E,EAJUgN,EAIVhN,KAAMoG,EAJI4G,EAIJ5G,QAASC,EAJL2G,EAIK3G,MAAOzC,EAJZoJ,EAIYpJ,KAAME,EAJlBkJ,EAIkBlJ,OAAQtD,EAJ1BwM,EAI0BxM,MAAOgK,EAJjCwC,EAIiCxC,QAAShE,EAJ1CwG,EAI0CxG,cAAeC,EAJzDuG,EAIyDvG,OAAQH,EAJjE0G,EAIiE1G,UAAWC,EAJ5EyG,EAI4EzG,WAAYG,EAJxFsG,EAIwFtG,QAASC,EAJjGqG,EAIiGrG,SAAUyC,EAJ3G4D,EAI2G5D,KAAMxC,EAJjHoG,EAIiHpG,MAAO/C,EAJxHmJ,EAIwHnJ,OAAQE,EAJhIiJ,EAIgIjJ,KAAMI,EAJtI6I,EAIsI7I,MAAO6C,EAJ7IgG,EAI6IhG,MAAOiC,EAJpJ+D,EAIoJ/D,QAASI,EAJ7J2D,EAI6J3D,UAAWC,EAJxK0D,EAIwK1D,MAAOxC,EAJ/KkG,EAI+KlG,SAAUoC,EAJzL8D,EAIyL9D,UAAWnC,EAJpMiG,EAIoMjG,OAAQoC,EAJ5M6D,EAI4M7D,QAASiC,EAJrN4B,EAIqN5B,YAAaC,EAJlO2B,EAIkO3B,QAKpPnM,KAAKsM,SAAS,CACZ7G,KAAI3E,OAAMoG,UAASC,QAAOzC,OAAME,SAAQtD,QAAOgK,UAAShE,gBAAeC,SAAQH,YAAWC,aAAYG,UAASC,WAAUyC,OAAMxC,QAAO/C,SAAQE,OAAMI,QAAO6C,QAAOiC,UAASI,YAAWC,QAAOxC,WAAUoC,YAAWnC,SAAQoC,UAASiC,cAAaC,YAIlPzE,GAASA,EAAMmB,IAAI,SAAAC,GACF,UAAXA,EAAEhI,MAAkB+M,EAAKvB,SAAS,CAAE3E,OAAO,MhBtN9B,SAAAuE,GACrB,OAAOjI,IAAMC,IAAN,GAAA7C,OACF8C,IADE,KAAA9C,OACS+C,IADT,UAEL,CACEC,OAAQ,CACNpD,OAAU,CACRqD,MAAS,CACPmB,GAAM,CAAElB,KAAA,GAAAlD,OAAW6K,OAIzBtI,YgB+MFoK,CAAe9B,GACZjG,KAAKjG,KAAKsM,SAAS,CAEhBjC,KAAM,CACJvJ,KAAM,cACNoG,QAAS,OAGdjB,KAAK,SAAAoE,GAAI,OAAIwD,EAAKvB,SAAS,CAAEjC,KAAMA,EAAKlE,SAK3CgG,GAAWnM,KAAKsM,SAAS,CACvBhC,KAAM,CACJ5H,MAAOyJ,EACPzC,OAAmB,IAAZyC,EAAiB,OACL,IAAZA,GAAiB,WACL,IAAZA,GAAiB,UACL,IAAZA,GAAiB,UAK5B5E,GAAUvH,KAAKsM,SAAS,CACtB/B,UAAW,CACT7H,MAAO6E,EACPmC,OAAkB,WAAXnC,EAAuB,SACZ,UAAXA,GAAsB,UACX,YAAXA,GAAwB,8CAK5B,IAAAV,EACsD7G,KAAKC,MAA1D8N,EADDlH,EACCkH,aAActM,EADfoF,EACepF,SAAUwM,EADzBpH,EACyBoH,WAAYC,EADrCrH,EACqCqH,aADrCC,EAQHnO,KAAKgM,MADHlL,GAPCqN,EAOL1I,GAPK0I,EAODrN,MAAMqG,EAPLgH,EAOKhH,MAAOzC,EAPZyJ,EAOYzJ,KAAME,EAPlBuJ,EAOkBvJ,OAAQtD,EAP1B6M,EAO0B7M,MAAOgK,EAPjC6C,EAOiC7C,QAASpE,EAP1CiH,EAO0CjH,QAASI,EAPnD6G,EAOmD7G,cAAeC,EAPlE4G,EAOkE5G,OAAQH,EAP1E+G,EAO0E/G,UAAWC,EAPrF8G,EAOqF9G,WAAY6C,EAPjGiE,EAOiGjE,KAAMxC,EAPvGyG,EAOuGzG,MAAOF,EAP9G2G,EAO8G3G,QAASC,EAPvH0G,EAOuH1G,SAAU9C,EAPjIwJ,EAOiIxJ,OAAQE,EAPzIsJ,EAOyItJ,KAAMC,EAP/IqJ,EAO+IrJ,YAAaG,EAP5JkJ,EAO4JlJ,MAAOC,EAPnKiJ,EAOmKjJ,aAAc4C,EAPjLqG,EAOiLrG,MAAOC,EAPxLoG,EAOwLpG,aAAcJ,EAPtMwG,EAOsMxG,MAAOoC,EAP7MoE,EAO6MpE,QAASI,EAPtNgE,EAOsNhE,UAAWC,EAPjO+D,EAOiO/D,MAAOxC,EAPxOuG,EAOwOvG,SAAUoC,EAPlPmE,EAOkPnE,UAAWnC,EAP7PsG,EAO6PtG,OAAQoC,EAPrQkE,EAOqQlE,QAASI,EAP9Q8D,EAO8Q9D,KAAMC,EAPpR6D,EAOoR7D,KAAMC,EAP1R4D,EAO0R5D,UAIjS,OACElF,EAAAzE,EAAAC,cAAA,WAAS0E,UAAU,oCACjBF,EAAAzE,EAAAC,cAAA,QAAM0E,UAAU,wCAAwC6I,QAASH,IAGlD,UAAbxM,EACE4D,EAAAzE,EAAAC,cAAA,MAAI0E,UAAU,yBAAd,QACOF,EAAAzE,EAAAC,cAAA,aAAAQ,OAAQ0M,EAAatI,GAArB,OAAApE,OAA6B0M,EAAajN,KAA1C,KAAAO,OAAkD0M,EAAa7G,QAA/D,OAGP7B,EAAAzE,EAAAC,cAAA,MAAI0E,UAAU,yBAAd,QACOF,EAAAzE,EAAAC,cAAA,aAAAQ,OAAQ0M,EAAatI,GAArB,OAAApE,OAA6B0M,EAAajN,KAA1C,OAKXuE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,WACbF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,gBACbF,EAAAzE,EAAAC,cAAA,QAAMwN,OAAO,GAAGX,SAAU1N,KAAK0N,UAGd,cAAbjM,GACE4D,EAAAzE,EAAAC,cAACyN,EAAD,CACExN,KAAMA,EACN4D,KAAMA,EACNC,OAAQA,EACRC,OAAQA,EACR1D,SAAUlB,KAAKkB,SAGf2D,KAAMA,EACNC,YAAaA,EACbC,aAAc/E,KAAK+E,aACnBC,cAAehF,KAAKgF,cAGpBC,MAAOA,EACPC,aAAcA,EACdC,cAAenF,KAAKmF,cACpBC,eAAgBpF,KAAKoF,iBAOZ,UAAb3D,GACE4D,EAAAzE,EAAAC,cAAC0N,EAAD,CACEzN,KAAMA,EACNqG,MAAOA,EACPO,MAAOA,EACPC,MAAOA,EACPE,OAAQA,EACRN,OAAQA,EACRL,QAASA,EACTM,QAASA,EACTI,SAAUA,EACVH,SAAUA,EACVL,UAAWA,EACXC,WAAYA,EACZC,cAAeA,EACfpG,SAAUlB,KAAKkB,SACfgH,cAAelI,KAAKkI,cACpBC,iBAAkBnI,KAAKmI,iBACvBC,eAAgBpI,KAAKoI,eAGrBN,MAAOA,EACPC,aAAcA,EACdE,cAAejI,KAAKiI,cACpBD,eAAgBhI,KAAKgI,iBAOZ,cAAbvG,GACE4D,EAAAzE,EAAAC,cAAC2N,EAAD,CAEE1N,KAAMA,EACNoJ,KAAMA,EACNrF,KAAMA,EACNwF,KAAMA,EACND,MAAOA,EACPnF,MAAOA,EACP4C,OAAQA,EACRkC,QAASA,EACTE,QAASA,EACTzC,QAASA,EACTC,SAAUA,EACVuC,UAAWA,EACXG,UAAWA,EACXG,KAAMA,EACNC,UAAWA,EAGXrJ,SAAUlB,KAAKkB,SACfsJ,aAAcxK,KAAKwK,aACnBE,gBAAiB1K,KAAK0K,gBACtBtC,eAAgBpI,KAAKoI,eACrBuC,gBAAiB3K,KAAK2K,gBACtBC,aAAc5K,KAAK4K,aACnBH,kBAAmBzK,KAAKyK,kBACxBI,aAAc7K,KAAK6K,aACnBC,eAAgB9K,KAAK8K,eAGrBhG,YAAaA,EACbC,aAAc/E,KAAK+E,aACnBC,cAAehF,KAAKgF,cAGpBE,aAAcA,EACdC,cAAenF,KAAKmF,cACpBC,eAAgBpF,KAAKoF,iBAOZ,WAAb3D,GACE4D,EAAAzE,EAAAC,cAAC4N,EAAD,CACE3N,KAAMA,EACN4D,KAAMA,EACNE,OAAQA,EACR0G,QAASA,EACTpK,SAAUlB,KAAKkB,WAON,kBAAbO,GACE4D,EAAAzE,EAAAC,cAAC6N,EAAD,CACE5N,KAAMA,EACN4D,KAAMA,EACNE,OAAQA,EACR1D,SAAUlB,KAAKkB,WAON,UAAbO,GACE4D,EAAAzE,EAAAC,cAAC8N,EAAD,CAAO7N,KAAMA,EAAMQ,MAAOA,EAAOJ,SAAUlB,KAAKkB,WAMlDgN,EACE7I,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,8BACbF,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,OAGFN,EAAAzE,EAAAC,cAAA,UAAQ0E,UAAU,2BAChBF,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,YAAYV,QAASH,GAA3C,UAEe,cAAbxM,EACI4D,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQpG,UAAWX,IAAWmC,EAAW6E,SAAO,EAACC,MAAM,UAAUpJ,KAAK,UAAtE,QACAL,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,UAAUpJ,KAAK,UAArC,oBAjbF/D,IAAMC,WCkBfmN,WA7BK,SAAAtO,GAAyE,IAAtEgB,EAAsEhB,EAAtEgB,SAAUsM,EAA4DtN,EAA5DsN,aAAcE,EAA8CxN,EAA9CwN,WAAYe,EAAkCvO,EAAlCuO,cAAed,EAAmBzN,EAAnByN,aAChEzI,EAAsBsI,EAAtBtI,GAAI3E,EAAkBiN,EAAlBjN,KAAMoG,EAAY6G,EAAZ7G,QASlB,OACE7B,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,6BACbF,EAAAzE,EAAAC,cAAA,gDADF,IACgDwE,EAAAzE,EAAAC,cAAA,WATjC,UAAbY,EACK4D,EAAAzE,EAAAC,cAAA,YAAO4E,EAAP,MAAaJ,EAAAzE,EAAAC,cAAA,SAAIC,EAAJ,IAAWoG,GAAxB,KAEA7B,EAAAzE,EAAAC,cAAA,YAAO4E,EAAP,MAAaJ,EAAAzE,EAAAC,cAAA,SAAIC,GAAjB,MAWLoN,EAAe7I,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,MACbN,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,+BACbF,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,YAAYV,QAASH,GAA3C,UACA5I,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,SAASV,QAASY,GAAxC,cC8GGvK,GAtIG,SAAAxE,GAAS,IAEvBa,EAYEb,EAZFa,KACA4D,EAWEzE,EAXFyE,KACAC,EAUE1E,EAVF0E,OACAC,EASE3E,EATF2E,OACA1D,EAQEjB,EARFiB,SAGA2D,EAKE5E,EALF4E,KAAMC,EAKJ7E,EALI6E,YAAaC,EAKjB9E,EALiB8E,aAAcC,EAK/B/E,EAL+B+E,cAGjCC,EAEEhF,EAFFgF,MAAOC,EAELjF,EAFKiF,aAAcC,EAEnBlF,EAFmBkF,cAAeC,EAElCnF,EAFkCmF,eAItC,OACEC,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,SACL4B,MAAOiC,EACPc,GAAG,cACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAOgC,EACPe,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,SACL4B,MAAOkC,EACPa,GAAG,cACHvE,SAAUA,EACVwE,KAAK,SACLH,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,YAAU0E,UAAU,0BAClBF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,wBAEXT,EAAcO,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,MACZd,EAAOQ,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,OAAOK,IAAKf,EAAMgB,IAAI,SAAYR,EAAAzE,EAAAC,cAAA,QAAM0E,UAAU,WAAhB,WAI5DF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAOmC,EACPY,GAAG,YACHvE,SAAUA,EACVwE,KAAK,MACLH,UAAU,+BAGZF,EAAAzE,EAAAC,cAAA,SAAO6E,KAAK,OAAOI,IAAKd,EAAe9D,SAAU6D,KAGnDM,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,SACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,wBAEXL,EAAeG,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,MACbV,EAAQI,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,QAAQK,IAAKX,EAAOY,IAAI,UAAaR,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YAAf,YAIhEF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,QACL4B,MAAOuC,EACPQ,GAAG,aACHvE,SAAUA,EACVwE,KAAK,MACLH,UAAU,+BAGZF,EAAAzE,EAAAC,cAAA,SAAO6E,KAAK,OAAOI,IAAKV,EAAgBlE,SAAUiE,SC5D/C8B,GApED,SAAAxG,GAAA,IAAGK,EAAHL,EAAGK,KAAMoG,EAATzG,EAASyG,QAASiI,EAAlB1O,EAAkB0O,SAAUhI,EAA5B1G,EAA4B0G,MAAOjG,EAAnCT,EAAmCS,SAAnC,OACZmE,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,UACL4B,MAAOwE,EACPzB,GAAG,eACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,kCAMlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,iBAAxE,YACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,WACL4B,MAAOyM,EACP1J,GAAG,gBACHvE,SAAUA,EACVwE,KAAK,WACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,SACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,QACL4B,MAAOyE,EACP1B,GAAG,aACHvE,SAAUA,EACVwE,KAAK,QACLH,UAAU,oCCtCPuE,GAtBF,SAAArJ,GAAA,IAAGK,EAAHL,EAAGK,KAAMI,EAATT,EAASS,SAAT,OACXmE,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,cAAxE,aACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAO5B,EACP2E,GAAG,aACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,oCCwDPyB,GAtEA,SAAAvG,GAAA,IAAGK,EAAHL,EAAGK,KAAM8D,EAATnE,EAASmE,OAAQF,EAAjBjE,EAAiBiE,KAAM4G,EAAvB7K,EAAuB6K,QAASpK,EAAhCT,EAAgCS,SAAhC,OACbmE,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QAEAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAO5B,EACP2E,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,eAAxE,UACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,SACL4B,MAAOkC,EACPa,GAAG,cACHvE,SAAUA,EACVwE,KAAK,SACLH,UAAU,kCAOlBF,EAAAzE,EAAAC,cAAA,gBACEwE,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,kBACbF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,aAAxE,QACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,OACL4B,MAAOgC,EACPe,GAAG,YACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,gCAIdF,EAAAzE,EAAAC,cAAA,SAAO0E,UAAU,+CAA+CC,QAAQ,gBAAxE,WACAH,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,YACbF,EAAAzE,EAAAC,cAAA,SACEoO,UAAQ,EACRC,aAAa,MACbpO,KAAK,UACL4B,MAAO4I,EACP7F,GAAG,eACHvE,SAAUA,EACVwE,KAAK,OACLH,UAAU,oCC6JP6J,sNA5MbpK,cAAgBrD,IAAMoK,cACtB3G,eAAiBzD,IAAMoK,cAEvBC,MAAQ,CACNvG,GAAI,GACJ3E,KAAM,GACNoG,QAAS,GACTiI,SAAU,GACVxK,OAAQ,GACRwC,MAAO,GACPG,eAAe,EACf5C,KAAM,GACNE,OAAQ,KACRtD,MAAO,KACPgK,QAAS,KACT/D,QAAQ,EACRH,UAAW,GACXC,WAAY,KACZG,QAAS,KACTC,SAAU,KACVC,MAAO,GAGP7C,KAAM,GACNC,aAAa,EAGbG,MAAO,GACPC,cAAc,EAEdyC,OAAO,KAGTzG,SAAW,SAAAkL,GACa,aAAlBA,EAAE7I,OAAOmC,KACX2G,EAAKC,SAALrK,OAAAsK,EAAA,EAAAtK,CAAA,GAAiBmK,EAAE7I,OAAOzC,KAAOsL,EAAE7I,OAAOyF,UAE1CqD,EAAKC,SAALrK,OAAAsK,EAAA,EAAAtK,CAAA,GAAiBmK,EAAE7I,OAAOzC,KAAOsL,EAAE7I,OAAOb,WAI9CqC,aAAe,SAAAqH,GACbA,EAAES,iBACFR,EAAKC,SAAS,CAAExH,aAAa,IAG7B,IAAM4G,EAAW,IAAIoB,SAGfC,EAAaV,EAAKrH,cAAcgI,QAAQC,MAAM,GAGpDvB,EAASwB,OAAO,OAAQH,GAGxBtB,EAAkBC,GACfzF,KAAK,SAAAC,GACJmG,EAAKC,SAAS,CACZzH,KAAI,GAAAxD,OAAK8C,IAAL,KAAA9C,OAAgB+C,IAAhB,8BAAA/C,OAAmD6E,EAAIC,KAAKrF,MAChEgE,aAAa,MAKhBqI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAGhCjI,cAAgB,SAAAiH,GACdA,EAAES,iBACFR,EAAKC,SAAS,CAAEpH,cAAc,IAG9B,IAAMwG,EAAW,IAAIoB,SAGfS,EAAclB,EAAKjH,eAAe4H,QAAQC,MAAM,GAGtDvB,EAASwB,OAAO,OAAQK,GAGxB3B,GAAmBF,GAChBzF,KAAK,SAAAC,GACJmG,EAAKC,SAAS,CACZrH,MAAK,GAAA5D,OAAK8C,IAAL,KAAA9C,OAAgB+C,IAAhB,+BAAA/C,OAAoD6E,EAAIC,KAAKrF,MAClEoE,cAAc,MAKjBiI,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAGhCM,SAAW,SAAAtB,GACTA,EAAES,iBADY,IAENb,EAFM/J,OAAA0L,EAAA,EAAA1L,QAAA0L,EAAA,EAAA1L,CAAAoK,IAENL,MAFM5F,EAGmBiG,EAAKpM,OAGtCoP,EANcjJ,EAGNiJ,YAGGrD,EANG5F,EAGM3E,mFAMb,IAAAoF,EAC8C7G,KAAKC,MAAlDwB,EADDoF,EACCpF,SAAUwM,EADXpH,EACWoH,WAAYC,EADvBrH,EACuBqH,aAAcoB,EADrCzI,EACqCyI,KADrC9C,EAMHxM,KAAKgM,MADPlL,EALK0L,EAKL1L,KAAMqG,EALDqF,EAKCrF,MAAOzC,EALR8H,EAKQ9H,KAAME,EALd4H,EAKc5H,OAAe0G,GAL7BkB,EAKsBlL,MALtBkL,EAK6BlB,SAASpE,EALtCsF,EAKsCtF,QAASvC,EAL/C6H,EAK+C7H,OAAQE,EALvD2H,EAKuD3H,KAAMC,EAL7D0H,EAK6D1H,YAAaG,EAL1EuH,EAK0EvH,MAAOC,EALjFsH,EAKiFtH,aAAciK,EAL/F3C,EAK+F2C,SAItG,OACE9J,EAAAzE,EAAAC,cAAA,WAAS0E,UAAU,oCACjBF,EAAAzE,EAAAC,cAAA,QAAM0E,UAAU,wCAAwC6I,QAASH,IAEjE5I,EAAAzE,EAAAC,cAAA,MAAI0E,UAAU,yBAAd,OAA2C+J,GAE3CjK,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,WACbF,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,gBACbF,EAAAzE,EAAAC,cAAA,QAAMwN,OAAO,GAAGX,SAAU1N,KAAK0N,UAId,cAAbjM,GACE4D,EAAAzE,EAAAC,cAAC0O,GAAD,CACEzO,KAAMA,EACN4D,KAAMA,EACNC,OAAQA,EACRC,OAAQA,EACR1D,SAAUlB,KAAKkB,SAGf2D,KAAMA,EACNC,YAAaA,EACbC,aAAc/E,KAAK+E,aACnBC,cAAehF,KAAKgF,cAGpBC,MAAOA,EACPC,aAAcA,EACdC,cAAenF,KAAKmF,cACpBC,eAAgBpF,KAAKoF,iBAOZ,UAAb3D,GACE4D,EAAAzE,EAAAC,cAAC2O,GAAD,CACE1O,KAAMA,EACNqG,MAAOA,EACPgI,SAAUA,EACVjI,QAASA,EACThG,SAAUlB,KAAKkB,WAON,cAAbO,GACE4D,EAAAzE,EAAAC,cAAC4O,GAAD,CACE3O,KAAMA,EACNI,SAAUlB,KAAKkB,WAQN,WAAbO,GACE4D,EAAAzE,EAAAC,cAAC6O,GAAD,CACE5O,KAAMA,EACN4D,KAAMA,EACNE,OAAQA,EACR0G,QAASA,EACTpK,SAAUlB,KAAKkB,WAMnBgN,EACE7I,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,8BACbF,EAAAzE,EAAAC,cAAC8E,EAAA,EAAD,OAGFN,EAAAzE,EAAAC,cAAA,UAAQ0E,UAAU,2BAChBF,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,YAAYV,QAASH,GAA3C,UACA5I,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CAAQC,SAAO,EAACC,MAAM,UAAUpJ,KAAK,UAArC,mBAhMG/D,IAAMC,YCwDd+N,WA/DD,SAAA1P,GAAS,IAEnByF,EAUEzF,EAVFyF,KACA4J,EASErP,EATFqP,KACA7N,EAQExB,EARFwB,SACAmO,EAOE3P,EAPF2P,YACA3B,EAMEhO,EANFgO,WACAF,EAKE9N,EALF8N,aACAsB,EAIEpP,EAJFoP,WACAzB,EAGE3N,EAHF2N,YACAoB,EAEE/O,EAFF+O,cACAd,EACEjO,EADFiO,aAGF,OACE7I,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KACED,EAAAzE,EAAAC,cAACgP,EAAAjP,EAAD,CACEkP,aAAa,EACbC,OAAQH,EACRI,iBAAiB,sBACjBzK,UAAS,0BAAAlE,OAA4BqE,GACrCuK,gBAAgB/B,GAAuBD,GAI5B,WAATvI,GACEL,EAAAzE,EAAAC,cAACqP,GAAD,CACEzO,SAAUA,EACVwM,WAAYA,EACZF,aAAcA,EACdiB,cAAeA,EACfd,aAAcA,KAKT,SAATxI,GACEL,EAAAzE,EAAAC,cAACsP,GAAD,CACE1O,SAAUA,EACVwM,WAAYA,EACZF,aAAcA,EACdH,YAAaA,EACbM,aAAcA,KAKT,QAATxI,GACEL,EAAAzE,EAAAC,cAACuP,GAAD,CACEd,KAAMA,EACN7N,SAAUA,EACVwM,WAAYA,EACZF,aAAcA,EACdsB,WAAYA,EACZnB,aAAcA,6BC1BbmC,GAlCA,SAAA5P,GAAuC,IAApCiF,EAAoCjF,EAApCiF,KAAMqI,EAA8BtN,EAA9BsN,aAAcuC,EAAgB7P,EAAhB6P,UAAgBC,EACtBC,oBAAS,GADaC,EAAAxO,OAAAyO,GAAA,EAAAzO,CAAAsO,EAAA,GAC7CI,EAD6CF,EAAA,GACpCG,EADoCH,EAAA,GAMpD,OAAKH,EAyBSjL,EAAAzE,EAAAC,cAACgQ,GAAA,EAAD,CAAO/B,MAAM,SAASiB,OAAQY,EAASG,OA5BnC,kBAAMF,GAAW,KA4BsCN,GAvBrEjL,EAAAzE,EAAAC,cAAAwE,EAAAzE,EAAA0E,SAAA,KAGa,WAATI,GACEL,EAAAzE,EAAAC,cAACgQ,GAAA,EAAD,CAAO/B,MAAM,UAAb,IAAAzN,OACO0M,EAAatI,IADpB,MAC4BJ,EAAAzE,EAAAC,cAAA,YAAAQ,OAAO0M,EAAajN,KAApB,mBAKrB,SAAT4E,GACEL,EAAAzE,EAAAC,cAACgQ,GAAA,EAAD,CAAO/B,MAAM,WAAb,IAAAzN,OACO0M,EAAatI,IADpB,MAC4BJ,EAAAzE,EAAAC,cAAA,YAAAQ,OAAO0M,EAAajN,KAApB,kBAKrB,QAAT4E,GAAkBL,EAAAzE,EAAAC,cAACgQ,GAAA,EAAD,CAAO/B,MAAM,WAAb,0CCVbiC,GAZG,SAAAtQ,GAAA,IAAG6O,EAAH7O,EAAG6O,KAAM0B,EAATvQ,EAASuQ,QAASC,EAAlBxQ,EAAkBwQ,SAAlB,OAChB5L,EAAAzE,EAAAC,cAAC+N,EAAA,EAAD,CACElJ,KAAK,SACLoJ,MAAM,UACNV,QAAS6C,EACT1L,UAAW2L,KAAI,aAAc,CAAEC,aAAcH,KAJ/C,OAMO1B,ICRH1L,GAAU,CAAEC,cAAeC,KA2BlBsN,GAvBE,SAACpF,EAAOvK,GAAa,IAC5B4P,EAAarF,EAAbqF,SAGF/M,EAAQ,GAUd,OANA+M,EAASC,QAAQ,SAAAxI,GACF,OAATA,EAAErD,GAAanB,EAAMwE,EAAErD,IAAMqD,EAAEpG,MAChB4B,EAAMwE,EAAErD,IAAM,CAAElB,KAAQ,IAAMuE,EAAEpG,MAAQ,OAItDuB,IAAMC,IAAN,GAAA7C,OAAa8C,IAAb,KAAA9C,OAAwB+C,IAAxB,KAAA/C,OAAkCI,EAAlC,UAAoD,CAEzD4C,OAAQ,CAAEC,SACVV,aAGCqC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKoL,SCxBpB3N,GAAU,CAAEC,cAAeC,KAkClB0N,GAhCC,SAACxF,EAAOvK,EAAUgQ,GAAe,IACvCC,EAAqC1F,EAArC0F,SAAUC,EAA2B3F,EAA3B2F,KAAMN,EAAqBrF,EAArBqF,SAAUO,EAAW5F,EAAX4F,OAG5B3Q,EAAS,CACbqD,MAAO,GACPE,MAAOkN,EACPG,KAAMF,EAAOD,EACbI,MAAOL,GAgBT,OAZAJ,EAASC,QAAQ,SAAAxI,GACF,OAATA,EAAErD,GAAaxE,EAAOqD,MAAMwE,EAAErD,IAAMqD,EAAEpG,MACvBzB,EAAOqD,MAAMwE,EAAErD,IAAM,CAAElB,KAAQ,IAAMuE,EAAEpG,MAAQ,OAIpEkP,EAAON,QAAQ,SAAAxI,GACb,IAAMiJ,EAAOjJ,EAAEiJ,KAAO,OAAS,MAC/B9Q,EAAO6Q,MAAP,GAAAzQ,OAAkByH,EAAErD,GAApB,KAAApE,OAA0B0Q,KAIrB9N,IAAMC,IAAN,GAAA7C,OAAa8C,IAAb,KAAA9C,OAAwB+C,IAAxB,KAAA/C,OAAkCI,GAAY,CACnD4C,OAAQ,CAAEpD,UACV2C,aAGCqC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QC/BfvC,GAAU,CAAEC,cAAeC,KA6ClBuL,GA3CI,SAACrD,EAAOvK,GAAa,IAC9BX,EAASkL,EAATlL,KACFkR,EAAI,GAAA3Q,OAAM8C,IAAN,KAAA9C,OAAiB+C,IAAjB,KAAA/C,OAA2BI,GAGrC,GAAiB,cAAbA,EAA0B,KACpBiD,EAAsCsH,EAAtCtH,KAAMC,EAAgCqH,EAAhCrH,OAAQC,EAAwBoH,EAAxBpH,OAAQC,EAAgBmH,EAAhBnH,KAAMI,EAAU+G,EAAV/G,MACpC,OAAOhB,IAAM0H,KAAKqG,EAAM,CAAElR,OAAM4D,OAAMC,SAAQC,SAAQC,OAAMI,SAAS,CAAErB,aAGlE,GAAiB,UAAbnC,EAAsB,KACvByF,EAA6B8E,EAA7B9E,QAASiI,EAAoBnD,EAApBmD,SAAUhI,EAAU6E,EAAV7E,MAC3B,OAAOlD,IAAM0H,KAAKqG,EAAM,CAAElR,OAAMoG,UAASiI,WAAUhI,SAAS,CAAEvD,aAG3D,GAAiB,cAAbnC,EAET,OAAOwC,IAAM0H,KACXqG,EACA,CAAElR,QACF,CAAE8C,aAKG,GAAiB,WAAbnC,EAAuB,KACxBiD,EAA0BsH,EAA1BtH,KAAM4G,EAAoBU,EAApBV,QAAS1G,EAAWoH,EAAXpH,OACvB,OAAOX,IAAM0H,KAAKqG,EAAM,CAAElR,OAAM8D,SAAQF,OAAM4G,WAAW,CAAE1H,aAItD,GAAiB,kBAAbnC,EAA8B,KAC/BiD,EAAiBsH,EAAjBtH,KAAME,EAAWoH,EAAXpH,OACd,OAAOX,IAAM0H,KAAKqG,EAAM,CAAElR,OAAM4D,OAAME,UAAU,CAAEhB,aAI7C,GAAiB,UAAbnC,EAAsB,KACvBH,EAAU0K,EAAV1K,MACR,OAAO2C,IAAM0H,KAAKqG,EAAM,CAAElR,OAAMQ,SAAS,CAAEsC,eCzCzCA,GAAU,CAAEC,cAAeC,KAmIlB8J,GAjIK,SAAC5B,EAAOvK,GAAa,IAC/BgE,EAAauG,EAAbvG,GAAI3E,EAASkL,EAATlL,KACNkR,EAAI,GAAA3Q,OAAM8C,IAAN,KAAA9C,OAAiB+C,IAAjB,KAAA/C,OAA2BI,EAA3B,KAAAJ,OAAuCoE,GAGjD,GAAiB,cAAbhE,EAA0B,KACpBiD,EAAsCsH,EAAtCtH,KAAMC,EAAgCqH,EAAhCrH,OAAQC,EAAwBoH,EAAxBpH,OAAQC,EAAgBmH,EAAhBnH,KAAMI,EAAU+G,EAAV/G,MACpC,OAAOhB,IAAMgO,MAAMD,EAAM,CAAElR,OAAM4D,OAAMC,SAAQC,SAAQC,OAAMI,QAAOQ,MAAM,CAAE7B,aAIvE,GAAiB,UAAbnC,EAAsB,KACvByF,EAAiG8E,EAAjG9E,QAASC,EAAwF6E,EAAxF7E,MAAOG,EAAiF0E,EAAjF1E,cAAeK,EAAkEqE,EAAlErE,MAAOJ,EAA2DyE,EAA3DzE,OAAQH,EAAmD4E,EAAnD5E,UAAWC,EAAwC2E,EAAxC3E,WAAYS,EAA4BkE,EAA5BlE,MAAOF,EAAqBoE,EAArBpE,SAAUC,EAAWmE,EAAXnE,OAC9F,OAAO5D,IAAMgO,MACXD,EACA,CACEvM,KACA3E,OACAoG,UACAC,QACAQ,QACAL,gBACAC,SACAH,YACAC,aACAS,QACAoK,YAAatK,EAASnC,GACtBoC,UAEF,CAAEjE,aAKC,GAAiB,cAAbnC,EAA0B,CAKnC,IALmC,IAC3BsI,EAA8HiC,EAA9HjC,QAASrF,EAAqHsH,EAArHtH,KAAMG,EAA+GmH,EAA/GnH,KAAMI,EAAyG+G,EAAzG/G,MAAO4C,EAAkGmE,EAAlGnE,OAAQmC,EAA0FgC,EAA1FhC,UAAWE,EAA+E8B,EAA/E9B,KAAMD,EAAyE+B,EAAzE/B,QAASI,EAAgE2B,EAAhE3B,KAAMC,EAA0D0B,EAA1D1B,KAAMC,EAAoDyB,EAApDzB,UAG5E4H,GAHgInG,EAAzCxE,QAAyCwE,EAAhCvE,SAAgCuE,EAAtB7B,UAAsB6B,EAAX5B,MAGvG,IACXtB,EAAI,EAAGA,EAAIjB,EAAOe,OAAQE,IACjCqJ,EAAYC,KAAKvK,EAAOiB,GAAGhI,MAE7B,IAAMuR,EAAgBF,EAAYG,WAGlC,OAFAjF,QAAQC,IAAIhD,GAELrG,IAAM0H,KAAN,GAAAtK,OACF2Q,EADE,cAEL,CAEElR,OACAiJ,UACArF,OACAG,KAAMA,EAAOA,EAAK0N,MAAM,KAAKC,MAAQ,GACrCvN,MAAOA,EAAQA,EAAMsN,MAAM,KAAKC,MAAQ,GACxCH,gBACArI,YACAE,OACAD,QAASA,EAAQnJ,KACjBoL,YAAa7B,EAAK5E,GAClB0G,QAAS7B,EAAK5H,MACd6E,OAAQgD,EAAU7H,OA8ClB,CAAEkB,aAKD,GAAiB,WAAbnC,EAAuB,KACxBiD,EAA0BsH,EAA1BtH,KAAM4G,EAAoBU,EAApBV,QAAS1G,EAAWoH,EAAXpH,OACvB,OAAOX,IAAMgO,MAAMD,EAAM,CAAEvM,KAAI3E,OAAM8D,SAAQF,OAAM4G,WAAW,CAAE1H,aAI3D,GAAiB,kBAAbnC,EAA8B,KAC/BiD,EAAiBsH,EAAjBtH,KAAME,EAAWoH,EAAXpH,OACd,OAAOX,IAAMgO,MAAMD,EAAM,CAAEvM,KAAI3E,OAAM4D,OAAME,UAAU,CAAEhB,aAIlD,GAAiB,UAAbnC,EAAsB,KACvBH,EAAU0K,EAAV1K,MACR,OAAO2C,IAAMgO,MAAMD,EAAM,CAAEvM,KAAI3E,OAAMQ,SAAS,CAAEsC,eC/H9CA,GAAU,CAAEC,cAAeC,KAOlBkL,GALO,SAACvN,EAAUgE,GAC/B,IAAMuM,EAAI,GAAA3Q,OAAM8C,IAAN,KAAA9C,OAAiB+C,IAAjB,KAAA/C,OAA2BI,EAA3B,KAAAJ,OAAuCoE,GACjD,OAAOxB,IAAMwO,OAAOT,EAAM,CAAEpO,wBCQxB8O,sNAEJ1G,MAAQ,CAEN7F,KAAM,GACNoL,MAAO,KACPP,SAAS,EACTjD,aAAc,KAGd4E,UAAW,GACX/C,aAAa,EACb1B,cAAc,EAGd0E,aAAa,EACbtC,UAAW,GACXuC,QAAS,MAGXC,aAAe,SAAA3M,GACbkG,EAAKC,SAAS,CACZqG,UAAW,OACX/C,aAAa,EACb7B,aAAc5H,EACdyM,aAAa,OAIjBG,YAAc,SAAArS,GAAQ,OAAI,WACxB2L,EAAKC,SAAS,CACZqG,UAAW,SACX/C,aAAa,EACb7B,aAAcrN,EACdkS,aAAa,QAIjBH,OAAS,WACP,IAAMO,EAAoB,GAClBvR,EAAa4K,EAAKpM,MAAlBwB,SAFK+K,EAG0BH,EAAKL,MAApC7F,EAHKqG,EAGLrG,KAAsBV,EAHjB+G,EAGCuB,aAAgBtI,GAG9B4G,EAAKC,SAAS,CAAE4B,cAAc,IAE9Bc,GAAcvN,EAAUgE,GAErBQ,KAAK,WACJ,IAAK,IAAI6C,EAAI,EAAGA,EAAI3C,EAAKyC,OAAQE,IAE3B3C,EAAK2C,GAAGrD,KAAOA,GAEjBuN,EAAkBZ,KAAKjM,EAAK2C,IAGhCuD,EAAKC,SAAS,CAEZnG,KAAM6M,EACNpD,aAAa,EACb1B,cAAc,MAKjBjI,KAAK,WACJoG,EAAKC,SAAS,CAAEsG,aAAa,IAE7BK,WAAW,WACT5G,EAAKC,SAAS,CAAEsG,aAAa,KAC5B,OAIJzF,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZf,EAAKC,SAAS,CACZgE,UAAS,GAAAjP,OAAK+L,GACdc,cAAc,EACd0B,aAAa,EACbgD,aAAa,SAKrBM,UAAY,SAAAxS,GAAQ,OAAI,WACtB2L,EAAKC,SAAS,CACZqG,UAAW,OACX/C,aAAa,EACb7B,aAAcrN,EACdkS,aAAa,QAKjBzC,KAAO,SAACnE,EAAOvK,GACbmM,GAAY5B,EAAOvK,GAChBwE,KAAKoG,EAAKC,SAAS,CAAE4B,cAAc,KAEnCjI,KAAK,WACJoG,EAAKC,SAAS,CACZ4B,cAAc,EACd0B,aAAa,EACbgD,aAAa,IAOf,IAXU,IAQFzM,EAASkG,EAAKL,MAAd7F,KAGC2C,EAAI,EAAGA,EAAI3C,EAAKyC,OAAQE,IAC3B3C,EAAK2C,GAAGrD,KAAOuG,EAAMvG,KAEvBU,EAAK2C,GAAKkD,GAKdK,EAAKC,SAAS,CAAEnG,SAGhB8M,WAAW,WACT5G,EAAKC,SAAS,CAAEsG,aAAa,KAC5B,OAINzF,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZf,EAAKC,SAAS,CACZgE,UAAS,GAAAjP,OAAK+L,GACdc,cAAc,EACd0B,aAAa,EACbgD,aAAa,SAKnB3B,SAAW,WACT5E,EAAKC,SAAS,CACZqG,UAAW,MACX/C,aAAa,EACbgD,aAAa,OAKjBxC,IAAM,SAACpE,EAAOvK,GACZ4N,GAAWrD,EAAOvK,GACfwE,KAAKoG,EAAKC,SAAS,CAAE4B,cAAc,KAEnCjI,KAAK,SAAAC,GAAO,IACHC,EAASkG,EAAKL,MAAd7F,KADGC,EAE+BiG,EAAKpM,MAAvCwR,EAFGrL,EAEHqL,WAAYhQ,EAFT2E,EAES3E,SAEd0R,GAJK/M,EAEmBgN,QAEd3B,EAAa,CAACvL,EAAIC,MAAM9E,OAAO8E,GAAQA,EAAK9E,OAAO6E,EAAIC,OASzE,GAPAkG,EAAKC,SAAS,CACZ4B,cAAc,EACd0B,aAAa,EACbgD,aAAa,EACbzM,KAAMgN,IAGS,UAAb1R,EAAsB,KAChB0E,EAASD,EAATC,KACRkG,EAAKyG,aAAa3M,GAIpB8M,WAAW,WACT5G,EAAKC,SAAS,CAAEsG,aAAa,KAC5B,OAKJzF,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZf,EAAKC,SAAS,CACZgE,UAAS,GAAAjP,OAAK+L,GACdc,cAAc,EACd0B,aAAa,EACbgD,aAAa,0FAKC,IAAA/E,EAAA7N,KAClBqT,SAASC,iBAAiB,QAAS,SAAAlH,GACf,KAAdA,EAAEmH,SAAgB1F,EAAKvB,SAAS,CAAEsD,aAAa,uCAI9C,IAAA4D,EAAAxT,KACDyT,EAAW,CACf,CACErT,OAAQ,KACRC,SAAU,KACVgD,MAAO,GACP/C,MAAO,CAAEoT,UAAW,SACpBlT,KAAM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAH,OAAkB2E,EAAAzE,EAAAC,cAAA,WAAMH,EAAS+E,IAAM,QAC7C1E,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,SAAX,OAA0BC,aAAgBF,EAAQC,MAIxDyS,EAAiB,CACrB,CACEvT,OAAQ,GACRiD,MAAO,GACPuQ,UAAU,EACVC,YAAY,EACZrT,KAAM,SAAAY,GAAA,IAAGV,EAAHU,EAAGV,SAAH,OACJ2E,EAAAzE,EAAAC,cAAA,OAAK0E,UAAU,uBAEE,UAAb9D,GAAqC,kBAAbA,GACtB4D,EAAAzE,EAAAC,cAAA,KAAG0E,UAAU,qBAAqB6I,QAASoF,EAAKT,YAAYrS,KAGhE2E,EAAAzE,EAAAC,cAAA,KAAG0E,UAAU,WAAW6I,QAASoF,EAAKN,UAAUxS,SAzBjDmG,EA+B+C7G,KAAKC,MAAnDE,EA/BD0G,EA+BC1G,QAASsB,EA/BVoF,EA+BUpF,SAAUgQ,EA/BpB5K,EA+BoB4K,WAAY/P,EA/BhCmF,EA+BgCnF,WA/BhCyM,EAgCsGnO,KAAKgM,MAA1GgF,EAhCD7C,EAgCC6C,QAASO,EAhCVpD,EAgCUoD,MAAOpL,EAhCjBgI,EAgCiBhI,KAAMyJ,EAhCvBzB,EAgCuByB,YAAa7B,EAhCpCI,EAgCoCJ,aAAc4E,EAhClDxE,EAgCkDwE,UAAWzE,EAhC7DC,EAgC6DD,aAAc0E,EAhC3EzE,EAgC2EyE,YAAatC,EAhCxFnC,EAgCwFmC,UAE/F,OACEjL,EAAAzE,EAAAC,cAAA,OAAK0E,UAAS,GAAAlE,OAAKI,EAAL,WACVmR,GAAevN,EAAAzE,EAAAC,cAACiT,GAAD,CAAQpO,KAAMiN,EAAW5E,aAAcA,EAAcuC,UAAWA,IAGlE,UAAb7O,GAAqC,kBAAbA,GACtB4D,EAAAzE,EAAAC,cAACkT,GAAD,CACE9C,SAAUjR,KAAKiR,SACf3B,KAAM5N,EACNsP,QAASA,IAKf3L,EAAAzE,EAAAC,cAACmT,GAAD,CACEtO,KAAMiN,EACN/C,YAAaA,EACb1B,aAAcA,EACdH,aAAcA,EACdtM,SAAUA,EACV4N,WAAYrP,KAAKoQ,IACjBxC,YAAa5N,KAAKmQ,KAClBnB,cAAehP,KAAKyS,OACpBnD,KAAM5N,EACNuM,WAAY,kBAAMuF,EAAKlH,SAAS,CAAEsD,aAAa,OAGjDvK,EAAAzE,EAAAC,cAACoT,EAAA,EAAD,CACE9N,KAAMA,EACN+N,QAAQ,EACRC,MAAO5C,EACP6C,WAAW,EACXP,YAAY,EACZ7C,QAASA,EACTzL,UAAU,sBACVpF,QAAO,GAAAkB,OAAMoS,EAANxR,OAAAoS,EAAA,EAAApS,CAAmB9B,GAAYwT,GACtClS,SAAUA,EACVgQ,WAAYA,EACZ6C,YAAa,SAAAtI,GAGXwH,EAAKlH,SAAS,CAAE0E,SAAS,IAGzBI,GAASpF,EAAOvK,GACbwE,KAAK,SAAAsL,GAAK,OAAIiC,EAAKlH,SAAS,CAAEiF,MAAOgD,KAAKC,KAAKjD,EAAQvF,EAAM0F,cAG7DzL,KAAK,kBAAMuL,GAAQxF,EAAOvK,EAAUgQ,KACpCxL,KAAK,SAAAE,GACJqN,EAAKlH,SAAS,CAAEnG,OAAM6K,SAAS,MAEhC7D,MAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,gBAxRtBzL,IAAMC,YAgSX8Q","file":"static/js/13.b3eb954c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Plans extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Plans') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Plan',\n        accessor: 'plan',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <div>{original.name || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Price',\n        accessor: 'price',\n        Cell: ({ original }) => <div>{`$${original.price}`}</div> || '...',\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n    ];\n\n    return (\n      <Table columns={columns} dataPath='plans' buttonText=\"plan\" />\n    );\n  }\n}\n\nexport default withHeaderTitle(Plans);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Company name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    name,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Location\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getCompanies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getCompanies from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nconst Plan = ({ value, onChange }) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n      options={options}\n    />\n  );\n}\n\nexport default Plan;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 'public', label: 'Public' },\n  { value: 'draft', label: 'Draft' },\n  { value: 'expired', label: 'Expired' }\n];\n\nconst Status = ({ value, onChange }) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n      options={options}\n    />\n  );\n}\n\nexport default Status;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User from '../../selects/user';\nimport Role from '../../selects/role';\nimport Company from '../../selects/company';\nimport Skills from '../../selects/skills';\nimport { Locations } from '../../selects/location';\nimport Editor from '../../selects/editor';\nimport Plan from '../../selects/plan';\nimport Status from '../../selects/status';\n\nconst Jobs = props => {\n  const {\n    name,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    views,\n    user,\n    plan,\n    jobStatus,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n    onChangePlan,\n    onChangeStatus,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  // console.log(logo);\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-plan\">Plan</label>\n          <div className=\"col-md-4\">\n            <Plan value={plan} onChange={onChangePlan} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-status\">Status</label>\n          <div className=\"col-md-4\">\n            <Status value={jobStatus} onChange={onChangeStatus} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-views\">Views</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"views\"\n              value={views}\n              id=\"edit-views\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n\n      {/* <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset> */}\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Skill name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ name, slug, weight, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Role</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              type=\"number\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ name, price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Plan</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          type=\"number\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null,\n    plan: {},\n    plan_id: null,\n    jobStatus: ''\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id // to save employer_id after editRequest\n    });\n  }\n\n  onChangePlan = plan => {\n    this.setState({\n      plan,\n      plan_id: plan.value // to save employer_id after editRequest\n    });\n  }\n\n  onChangeStatus = jobStatus => {\n    this.setState({\n      jobStatus,\n      status: jobStatus.value\n    });\n  }\n\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      if (i.name === 'admin') this.setState({ admin: true });\n    });\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      .then(this.setState({\n          // preloader\n          user: {\n            name: 'Loading ...',\n            surname: ''\n          }\n      }))\n      .then(user => this.setState({ user: user.data })\n      // TODO .catch()\n    );\n\n    // get current plan for job (optimize later)\n    plan_id && this.setState({\n      plan: {\n        value: plan_id,\n        label: plan_id === 1 && 'Free' ||\n               plan_id === 2 && 'Bronze' ||\n               plan_id === 3 && 'Silver' ||\n               plan_id === 4 && 'Gold'\n      }\n    })\n\n    // get current status for job (optimize later)\n    status && this.setState({\n      jobStatus: {\n        value: status,\n        label: status === 'public' && 'Public' ||\n               status === 'draft' && 'Draft' ||\n               status === 'expired' && 'Expired'\n      }\n    })\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal);\n    // console.log('state edit.jsx:', this.state.user);\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user, plan, jobStatus\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' ? (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) : (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    // fields\n                    name={name}\n                    role={role}\n                    logo={logo}\n                    user={user}\n                    views={views}\n                    cover={cover}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n                    plan={plan}\n                    jobStatus={jobStatus}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n                    onChangePlan={this.onChangePlan}\n                    onChangeStatus={this.onChangeStatus}\n\n                    // logo\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 6. Plans */}\n              {\n                dataPath === 'plans' && (\n                  <Plans name={name} price={price} onChange={this.onChange} />\n                )\n              }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies'\n                        ? <Button disabled={!skills || !locations} outline color=\"primary\" type=\"submit\">Save</Button>\n                        : <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nconst Jobs = ({ name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-title\">Job title</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-title\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n} else if (dataPath === 'vacancies') {\n  // const { surname, password, email } = state;\n  return axios.post(\n    path,\n    { name, },\n    { headers }\n  )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover, id }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        id,\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { details, slug, logo, cover, skills, locations, role, company, user, plan, jobStatus, created, modified, published, views, } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n    console.log(plan);\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        // id,\n        name,\n        details,\n        slug,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.name,\n        employer_id: user.id,\n        plan_id: plan.value,\n        status: jobStatus.value,\n\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n\n        // company:\"google\",\n        // \"created\": \"2020-01-28T10:28:57.000Z\",\n        // \"modified\": \"2020-01-28T11:24:33.864Z\",\n        // \"published\": \"2020-01-01T10:26:41.000Z\",\n        // \"paused\": null,\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"plan_id\": null,\n        // \"company_id\": 9301,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"status\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"views\": 4,\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n\n          // slug,\n          // description,\n          // created,\n          // modified,\n          // published,\n          // views,\n\n\n          // slug, // не нужен\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { id, name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { id, name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { id, name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users') {\n        const { data } = res;\n        this.editAfterAdd(data);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}