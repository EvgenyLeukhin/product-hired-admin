{"version":3,"sources":["ph-admin/routes/Roles.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/consts.js","ph-admin/selects/plan.jsx","ph-admin/selects/status.jsx","ph-admin/selects/seniority.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Roles","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","_ref3","slug","_ref4","width","_ref5","weight","_ref6","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","buttonText","dataPath","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","concat","API_URL","subUrl","params","where","like","limit","Companies","domain","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","react_default","Fragment","className","htmlFor","id","type","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","Users","surname","email","job_title","experience","emailVerified","status","created","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","url","disabled","substring","color","length","map","i","required","location_Location","paddingLeft","checked","selects_skills","getUsers","or","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","planValues","label","statusValues","seniorityValues","Plan","dist_react_select_browser_esm","options","Status","Seniority","Jobs","details","locations","company","role","published","user","plan","jobStatus","seniority","experience_up","experience_from","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","onChangePlan","onChangeStatus","onChangeSeniority","logoSwitcher","coverSwitcher","logoUrl","coverUrl","includes","logoSplit","split","pop","coverSplit","selects_status","selects_user","selects_role","selects_plan","selects_company","selects_seniority","location_Locations","editor","min","max","markers","keywords","negative","rows","Plans","price","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","views","adminObj","employer_id","plan_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","company_id","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","DeleteModal","deleteRequest","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","startOrder","pageSize","page","sorted","skip","order","desc","path","vacancy_role","application_type","application_link","hash","patch","location_id","skillsNames","push","skills_string","toString","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","textAlign","controlsColumn","sortable","filterable","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/12.8684ee75.chunk.js","sourcesContent":["import React from 'react';\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Roles extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Roles') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Role',\n        accessor: 'name',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <div>{original.name || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n      {\n        Header: 'Slug',\n        accessor: 'slug',\n        Cell: ({ original }) => <div>{original.slug || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n      {\n        Header: 'Weight',\n        accessor: 'weight',\n        width: 60,\n        Cell: ({ original }) => <div>{original.weight || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        buttonText='role'\n        dataPath='vacancy_roles'\n      />\n    );\n  }\n}\n\nexport default withHeaderTitle(Roles);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Company name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    name,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.alias_region} [${location.id} - ${location.country}]` || '';\n\n  return (\n    <fieldset>\n      <div className=\"form-group row\">\n        <div className=\"col-md-3\">\n          <div className=\"form-group__row\">\n            <div className=\"col-md-12  edit-image\">\n              <label htmlFor=\"edit-image\">Profile photo</label>\n\n              {\n                imageLoading ? <Spinner /> : (\n                  image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n                )\n              }\n\n              <input\n                id=\"edit-image\"\n                type=\"file\"\n                ref={fileInputImage}\n                onChange={onUploadImage}\n              />\n            </div>\n\n\n            <div className=\"col-md-12\">\n              <label htmlFor=\"edit-created\">Created</label>\n\n              <input\n                disabled\n                name=\"created\"\n                value={created && created.substring(0, 10)}\n                id=\"edit-created\"\n                type=\"text\"\n                className=\"form-control\"\n              />\n            </div>\n\n\n            <div className=\"col-md-12\">\n              <label htmlFor=\"edit-modified\">Modified</label>\n\n              <input\n                disabled\n                name=\"modified\"\n                value={modified && modified.substring(0, 10)}\n                id=\"edit-modified\"\n                type=\"text\"\n                className=\"form-control\"\n              />\n            </div>\n\n            <div className=\"col-md-12 roles-container\">\n              <span>Roles: </span>\n              <span style={{ color: '#007bff' }}>\n                {\n                  roles && roles.length ? roles.map(i => {\n                    return <span>{`${i.name} `}&nbsp;</span>;\n                  }) : <span>no roles</span>\n                }\n              </span>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"col-md-9\">\n          <div className=\"row form-group__row\">\n            {/* name */}\n            <div className=\"col-md-4\">\n              <label htmlFor=\"edit-name\">Name</label>\n\n              <input\n                required\n                name=\"name\"\n                type=\"text\"\n                value={name}\n                id=\"edit-name\"\n                onChange={onChange}\n                className=\"form-control\"\n              />\n            </div>\n            {/* surname */}\n            <div className=\"col-md-4\">\n              <label htmlFor=\"edit-surname\">Surname</label>\n\n              <input\n                required\n                type=\"text\"\n                name=\"surname\"\n                value={surname}\n                id=\"edit-surname\"\n                onChange={onChange}\n                className=\"form-control\"\n              />\n            </div>\n            {/* location */}\n            <div className=\"col-md-4\">\n              <label htmlFor=\"edit-city\">Location</label>\n\n              <Location\n                id=\"edit-city\"\n                value={location}\n                onChange={location => onChangeLocation(location)}\n              />\n              <span style={{ fontWeight: 'normal', color: '#007bff', paddingLeft: 10 }}>{locationId}</span>\n            </div>\n\n\n\n            {/* email */}\n            <div className=\"col-md-4\">\n              <label htmlFor=\"edit-email\">Email</label>\n\n              <input\n                required\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                id=\"edit-email\"\n                onChange={onChange}\n                className=\"form-control\"\n              />\n            </div>\n            {/* email verified */}\n            <div className=\"col-md-4\">\n              <label className=\"empty-label\">&nbsp;</label>\n\n              <div className=\"form-check\">\n                <label className=\"edit-emailVerified\">\n                  <input\n                    name=\"emailVerified\"\n                    id=\"edit-emailVerified\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={emailVerified}\n                    onChange={onChange}\n                  />\n                    Email verified\n                </label>\n              </div>\n            </div>\n            {/* active status */}\n            <div className=\"col-md-4\">\n              <label className=\"empty-label\">&nbsp;</label>\n\n              <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n            </div>\n\n\n\n            {/* skills */}\n            <div className=\"col-md-12\">\n              <label htmlFor=\"edit-skills\">Skills</label>\n\n              <Skills\n                value={skills}\n                onChange={skills => onChangeSkills(skills)}\n              />\n            </div>\n\n\n\n            {/* job title */}\n            <div className=\"col-md-4\">\n              <label htmlFor=\"edit-job_title\">Job title</label>\n\n              <input\n                required\n                type=\"text\"\n                name=\"job_title\"\n                value={job_title}\n                id=\"edit-job_title\"\n                onChange={onChange}\n                className=\"form-control\"\n              />\n            </div>\n            {/* experience */}\n            <div className=\"col-md-4\">\n              <label htmlFor=\"edit-experience\">Experience</label>\n\n              <input\n                required\n                name=\"experience\"\n                value={experience}\n                id=\"edit-experience\"\n                onChange={onChange}\n                type=\"number\"\n                className=\"form-control\"\n              />\n            </div>\n\n            {/* admin rights */}\n            <div className=\"col-md-4\">\n              <label className=\"empty-label\">&nbsp;</label>\n\n              <div className=\"form-check\">\n                <label className=\"edit-admin\">\n                  <input\n                    name=\"admin\"\n                    id=\"edit-admin\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={admin}\n                    onChange={onChangeAdmin}\n                  />\n                  Admin rights\n                </label>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n    </fieldset>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'or': [\n              { 'name':  { 'like': `%${inputValue}%`} },\n              { 'email': { 'like': `%${inputValue}%`} }\n            ]\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n          'limit': 1\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname} ${o.email}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCompany = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${inputValue}`}\n          },\n          'limit': 1\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getCompanies, getCompany };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getCompanies } from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","const planValues = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nconst statusValues = [\n  { value: 'public',  label: 'Public' },\n  { value: 'draft',   label: 'Draft' },\n  { value: 'expired', label: 'Expired' },\n];\n\nconst seniorityValues = [\n  { value: 1, label: 'Junior' },\n  { value: 2, label: 'Mid level' },\n  { value: 3, label: 'Senior' },\n  { value: 4, label: 'Managment' },\n];\n\nexport { planValues, statusValues, seniorityValues };\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { planValues } from '../consts';\n\nconst Plan = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={planValues}\n  />\n);\n\nexport default Plan;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { statusValues } from '../consts';\n\nconst Status = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={statusValues}\n  />\n);\n\nexport default Status;\n","import React from 'react';\nimport Select from 'react-select';\n\nimport { seniorityValues } from '../consts';\n\nconst Seniority = ({ value, onChange }) => (\n  <Select\n    value={value}\n    onChange={onChange}\n    options={seniorityValues}\n  />\n);\n\nexport default Seniority;\n","import React from 'react';\n\nimport { API_URL, subUrl } from './../../api/apiUrl';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User          from '../../selects/user';\nimport Role          from '../../selects/role';\nimport Company       from '../../selects/company';\nimport Skills        from '../../selects/skills';\nimport Editor        from '../../selects/editor';\nimport Plan          from '../../selects/plan';\nimport Status        from '../../selects/status';\nimport Seniority     from '../../selects/seniority';\nimport { Locations } from '../../selects/location';\n\nconst Jobs = props => {\n  const {\n    name,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    user,\n    plan,\n    jobStatus,\n    seniority,\n    experience_up,\n    experience_from,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n    onChangePlan,\n    onChangeStatus,\n    onChangeSeniority,\n\n    // logo\n    logo, logoSwitcher, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverSwitcher, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  let logoUrl = `${API_URL}/${subUrl}/containers/logo/download/${logo}`;\n  let coverUrl = `${API_URL}/${subUrl}/containers/cover/download/${cover}`;\n\n  // fix problem with open item after additing image\n  if (!logoSwitcher && logo && logo.includes('http')) {\n    const logoSplit = logo.split('/').pop();\n    logoUrl = `${API_URL}/${subUrl}/containers/logo/download/${logoSplit}`;\n  }\n\n  if (!coverSwitcher && cover && cover.includes('http')) {\n    const coverSplit = cover.split('/').pop();\n    coverUrl = `${API_URL}/${subUrl}/containers/cover/download/${coverSplit}`;\n  }\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-status\">Status</label>\n          <div className=\"col-md-4\">\n            <Status value={jobStatus} onChange={onChangeStatus} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-plan\">Plan</label>\n          <div className=\"col-md-4\">\n            <Plan value={plan} onChange={onChangePlan} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-seniority\">Seniority</label>\n          <div className=\"col-md-4\">\n            <Seniority value={seniority} onChange={onChangeSeniority} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"date\"\n              name=\"created\"\n              id=\"edit-created\"\n              value={created && created.substring(0, 10)}\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_from\">Experience from</label>\n\n          <div className=\"col-md-4\">\n            <input\n                min={0}\n                max={30}\n                type=\"number\"\n                onChange={onChange}\n                name=\"experience_from\"\n                value={experience_from}\n                id=\"edit-experience_from\"\n                className=\"form-control input-rounded\"\n              />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience_up\">Experience to</label>\n\n          <div className=\"col-md-4\">\n            <input\n              min={0}\n              max={30}\n              type=\"number\"\n              onChange={onChange}\n              name=\"experience_up\"\n              value={experience_up}\n              id=\"edit-experience_up\"\n              className=\"form-control input-rounded\"\n              />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              !logoSwitcher ? (\n                logo ? <img className=\"logo\" src={logoUrl} alt=\"logo\" />\n                     : <div className=\"no-logo\">No logo</div>\n              ) : (\n                logoLoading ? <Spinner /> : (\n                  logo && <img className=\"logo\" src={logo} alt=\"logo\" />\n                )\n              )\n            }\n\n            <input\n              disabled\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              !coverSwitcher ? (\n                cover ? <img className=\"cover\" src={coverUrl} alt=\"cover\" />\n                      : <div className=\"no-cover\">No cover</div>\n              ) : (\n                coverLoading ? <Spinner /> : (\n                  cover && <img className=\"cover\" src={cover} alt=\"cover\" />\n                )\n              )\n            }\n\n            <input\n              disabled\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <div className=\"col-md-5\">\n          <label htmlFor=\"edit-name\">Skill</label>\n\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-5\">\n          <label htmlFor=\"edit-slug\">Slug</label>\n\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-2\">\n          <label htmlFor=\"edit-weight\">Weight</label>\n\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-12\">\n          <label htmlFor=\"edit-aliases\">Aliases</label>\n\n          <textarea\n            type=\"text\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ name, slug, weight, keywords, negative, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <div className=\"col-md-5\">\n          <label htmlFor=\"edit-name\">Role</label>\n\n          <input\n            required\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-5\">\n          <label htmlFor=\"edit-slug\">Slug</label>\n\n          <input\n            required\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-2\">\n          <label htmlFor=\"edit-weight\">Weight</label>\n\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-6\">\n          <label htmlFor=\"edit-keywords\">Search Phrases, comma-separated</label>\n\n          <textarea\n            rows={3}\n            type=\"text\"\n            name=\"keywords\"\n            value={keywords}\n            id=\"edit-keywords\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-6\">\n          <label htmlFor=\"edit-negative\">Stop-Words, comma-separated</label>\n\n          <textarea\n            rows={3}\n            type=\"text\"\n            name=\"negative\"\n            value={negative}\n            id=\"edit-negative\"\n            onChange={onChange}\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ name, price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <div className=\"col-md-6\">\n        <label htmlFor=\"edit-price\">Plan</label>\n\n        <input\n          required\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          className=\"form-control\"\n        />\n      </div>\n\n\n      <div className=\"col-md-6\">\n        <label htmlFor=\"edit-price\">Price</label>\n\n        <input\n          required\n          name=\"price\"\n          type=\"number\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          className=\"form-control\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\nimport { getCompany } from '../api/getCompanies';\n\nimport { planValues, statusValues, seniorityValues } from '../consts';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoSwitcher: false,\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverSwitcher: false,\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null,\n    plan: {},\n    plan_id: null,\n    jobStatus: '',\n    seniority: null,\n    experience_up: null,\n    experience_from: null,\n    keywords: '',\n    negative: ''\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  // TODO - refactoring\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n  onChangeSeniority = seniority => this.setState({ seniority });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id\n    });\n  }\n\n  onChangePlan = plan => {\n    this.setState({\n      plan,\n      plan_id: plan.value\n    });\n  }\n\n  onChangeStatus = jobStatus => {\n    this.setState({\n      jobStatus,\n      status: jobStatus.value\n    });\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({\n      logoLoading: true,\n      logoSwitcher: true\n    });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({\n      coverLoading: true,\n      coverSwitcher: true\n    });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from, company_id, keywords, negative\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id, seniority, experience_up, experience_from, keywords, negative\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      i.name === 'admin' && this.setState({ admin: true });\n    });\n\n    // company_id && console.log(company_id);\n\n    // get current company\n    company_id && getCompany(company_id)\n      // preloader\n      .then(this.setState({\n        company: { name: 'Loading ...' }\n      }))\n      .then(res => this.setState({ company: res.data }))\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      // preloader\n      .then(this.setState({\n        user: {\n          name: 'Loading ...',\n          surname: '',\n          email: ''\n        }\n      }))\n      .then(user => this.setState({ user: user.data }));\n      // TODO .catch()\n\n    // get current plan for job\n    plan_id && planValues.map(i => {\n      plan_id === i.value && this.setState({ plan: i });\n    });\n\n\n    // get current status for job\n    status && statusValues.map(i => {\n      status === i.value && this.setState({ jobStatus: i });\n    });\n\n    // get current seniority for job\n    seniority && seniorityValues.map(i => {\n      seniority === i.value && this.setState({ seniority: i });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal);\n    // console.log('state.company edit.jsx:', this.state.company);\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user, plan, jobStatus, seniority, experience_up, experience_from, logoSwitcher, coverSwitcher, keywords, negative\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) || dataPath === 'vacancies' && (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>&nbsp;\n              {\n                itemOriginal.views ? (\n                  <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;{`${itemOriginal.views}`})</span>\n                ) : <span className=\"views\"> (<i className=\"ion-ios-eye\" />&nbsp;0)</span>\n              }\n            </h4>\n          ) || (\n            <h4 className=\"edit-container__title\">\n              Edit&nbsp;<b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    role={role}\n                    user={user}\n                    plan={plan}\n                    views={views}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n                    jobStatus={jobStatus}\n                    seniority={seniority}\n                    experience_up={experience_up}\n                    experience_from={experience_from}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n                    onChangePlan={this.onChangePlan}\n                    onChangeStatus={this.onChangeStatus}\n                    onChangeSeniority={this.onChangeSeniority}\n\n                    // logo\n                    logo={logo}\n                    logoSwitcher={logoSwitcher}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverSwitcher={coverSwitcher}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    keywords={keywords}\n                    negative={negative}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 6. Plans */}\n              {\n                dataPath === 'plans' && (\n                  <Plans name={name} price={price} onChange={this.onChange} />\n                )\n              }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies' && (\n                        <Button\n                          disabled={!skills || !locations || !role}\n                          outline color=\"primary\"\n                          type=\"submit\">Save</Button>\n\n                      ) || dataPath === 'users' && (\n                        <Button\n                          disabled={!skills || !location}\n                          outline\n                          color=\"primary\"\n                          type=\"submit\">Save</Button>\n\n                      ) || <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <div className=\"col-md-6\">\n        <label htmlFor=\"edit-name\">Name</label>\n\n        <input\n          required\n          autoComplete=\"off\"\n          name=\"name\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"col-md-6\">\n        <label htmlFor=\"edit-surname\">Surname</label>\n\n        <input\n          required\n          autoComplete=\"off\"\n          name=\"surname\"\n          value={surname}\n          id=\"edit-surname\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"col-md-6\">\n        <label htmlFor=\"edit-password\">Password</label>\n\n        <input\n          required\n          autoComplete=\"off\"\n          name=\"password\"\n          value={password}\n          id=\"edit-password\"\n          onChange={onChange}\n          type=\"password\"\n          className=\"form-control\"\n        />\n      </div>\n\n      <div className=\"col-md-6\">\n        <label htmlFor=\"edit-email\">Email</label>\n\n        <input\n          required\n          autoComplete=\"off\"\n          name=\"email\"\n          value={email}\n          id=\"edit-email\"\n          onChange={onChange}\n          type=\"email\"\n          className=\"form-control\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Users;\n","import React from 'react';\n\nimport User          from '../../selects/user';\nimport Company       from '../../selects/company';\n\nconst Jobs = ({\n  name, company, user,\n\n  onChange, onChangeCompany, onChangeUser\n}) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n        <div className=\"col-md-10\">\n          <input\n            required\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n        <div className=\"col-md-4\">\n          <Company value={company} onChange={onChangeCompany} />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">User</label>\n        <div className=\"col-md-4\">\n          <User\n            value={user}\n            onChange={onChangeUser}\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <div className=\"col-md-5\">\n          <label htmlFor=\"edit-name\">Name</label>\n\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-5\">\n          <label htmlFor=\"edit-slug\">Slug</label>\n\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-2\">\n          <label htmlFor=\"edit-weight\">Weight</label>\n\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"col-md-12\">\n          <label htmlFor=\"edit-aliases\">Aliases</label>\n\n          <textarea\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n    company: {},\n    user: {\n      name: '',\n      surname: '',\n      email: ''\n    }\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeUser      = user      => this.setState({ user });\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password, company, user,\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    user={user}\n                    company={company}\n                    onChange={this.onChange}\n                    onChangeUser={this.onChangeUser}\n                    onChangeCompany={this.onChangeCompany}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies' ? (\n                        <Button disabled={!name || !company.name || !user.name} outline color=\"primary\" type=\"submit\">Add</Button>\n                      ) : <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                    }\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { company, user } = state;\n    return axios.post(\n      path,\n      {\n        name,\n        details: '<p></p>',\n        vacancy_role: 1,\n        seniority: 1,\n        experience_from: 0,\n        experience_up: 1,\n        application_type: 0,\n        application_link: null,\n        employer_id: user.id,\n        plan_id: 1,\n        company_id: company.id,\n        hash: null,\n        status: 'draft',\n        companies: [],\n      },\n      { headers }\n    )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const {\n      details,\n      logo,\n      cover,\n      skills,\n      locations,\n      role,\n      company,\n      user,\n      plan,\n      jobStatus,\n      seniority,\n      experience_up,\n      experience_from,\n      created,\n    } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        name,\n        details,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.length ? company[0].name : company.name,\n        employer_id: user.id,\n        plan_id: plan.value,\n        status: jobStatus.value,\n        seniority: seniority.value,\n        experience_from,\n        experience_up,\n        created,\n\n        // \"paused\": null,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight, keywords, negative } = state;\n    return axios.patch(path, { name, slug, weight, keywords, negative }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users' || dataPath === 'vacancies') {\n        const { data } = res;\n        this.editAfterAdd(data);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}