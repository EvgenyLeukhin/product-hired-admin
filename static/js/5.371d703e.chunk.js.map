{"version":3,"sources":["ph-admin/routes/Users.js","components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/api/getLocations.js","ph-admin/modals/edit/companies.jsx","ph-admin/selects/location.jsx","ph-admin/api/getSkills.js","ph-admin/selects/skills.jsx","ph-admin/modals/edit/users.jsx","ph-admin/api/getUsers.js","ph-admin/selects/user.jsx","ph-admin/api/getRoles.js","ph-admin/selects/role.jsx","ph-admin/api/getCompanies.js","ph-admin/selects/company.jsx","ph-admin/selects/editor.jsx","ph-admin/selects/plan.jsx","ph-admin/selects/status.jsx","ph-admin/modals/edit/jobs.jsx","ph-admin/modals/edit/skills.jsx","ph-admin/modals/edit/roles.jsx","ph-admin/modals/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modals/edit.jsx","ph-admin/modals/delete.jsx","ph-admin/modals/add/companies.jsx","ph-admin/modals/add/users.jsx","ph-admin/modals/add/jobs.jsx","ph-admin/modals/add/skills.jsx","ph-admin/modals/add.jsx","ph-admin/modals/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["Users","this","props","setHeaderTitle","columns","Header","accessor","style","fontWeight","Cell","_ref","original","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","name","Filter","_ref2","filter","onChange","customFiltering","_ref3","surname","_ref4","_ref5","href","concat","email","_ref6","width","_ref7","textAlign","created","substring","_ref8","_ref9","color","status","_ref10","_ph_admin_table__WEBPACK_IMPORTED_MODULE_6__","dataPath","buttonText","startOrder","React","Component","withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","headerTitle","pubsub","publish","assign","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","event","target","debounceTimeout","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","_apiUrl__WEBPACK_IMPORTED_MODULE_1__","headers","Authorization","token","getLocations","inputValue","axios","get","API_URL","subUrl","params","where","like","limit","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","react_default","Fragment","className","htmlFor","id","type","Spinner","src","alt","ref","Location","loadOptions","then","res","data","_this$props","react_select_browser_esm","menuPlacement","cacheOptions","defaultOptions","getOptionValue","o","getOptionLabel","Locations","_this$props2","isMulti","getSkills","Skills","job_title","experience","emailVerified","modified","roles","admin","location","skills","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","onChangeLocation","onChangeSkills","locationId","alias_region","country","disabled","location_Location","selects_skills","length","map","i","url","checked","getUsers","User","getRoles","Role","getCompanies","Company","Editor","react_quill_lib_default","options","label","Plan","dist_react_select_browser_esm","Status","Jobs","details","locations","company","role","published","views","user","plan","jobStatus","onChangeRole","onChangeLocations","onChangeCompany","onChangeDetails","onChangeUser","onChangePlan","onChangeStatus","selects_company","selects_user","selects_role","selects_plan","selects_status","location_Locations","editor","markers","Roles","Plans","price","Content-Type","uploadLogoRequest","formData","post","uploadCoverRequest","uploadImageRequest","EditModal","createRef","state","adminObj","employer_id","plan_id","e","_this","setState","defineProperty","_this$state","description","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","editRequest","_this2","_this$props$itemOrigi","itemOriginal","getCurrentUser","closeModal","modalLoading","_this$state2","onClick","action","companies","users","jobs","edit_skills","edit_roles","plans","Button","outline","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_jobs","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modals_delete","edit","add","Alerts","errorText","_useState","useState","_useState2","slicedToArray","visible","setVisible","Alert","toggle","AddButton","loading","addClick","cln","is-loading","getCount","filtered","forEach","count","getData","pageSize","page","sorted","skip","order","desc","path","patch","location_id","skillsNames","push","skills_string","toString","split","pop","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","dataWitoutDeleted","setTimeout","editClick","newData","history","document","addEventListener","keyCode","_this3","idColumn","controlsColumn","sortable","filterable","alerts","table_AddButton","modals","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/5.371d703e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Table from '../../ph-admin/table';\nimport customFiltering from '../table/customFiltering';\nimport { withHeaderTitle } from '../../components/Header/HeaderTitle';\n\nclass Users extends React.Component {\n  UNSAFE_componentWillMount() { this.props.setHeaderTitle('Users') }\n\n  render() {\n    const columns = [\n      {\n        Header: 'Name',\n        accessor: 'name',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <span>{original.name || '...'}</span>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Surname',\n        accessor: 'surname',\n        style: { fontWeight: 'bold' },\n        Cell: ({ original }) => <span>{original.surname || '...'}</span>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Email',\n        accessor: 'email',\n        Cell: ({ original }) => <a href={`mailto:${original.email}`}>{original.email || '...'}</a>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n\n      {\n        Header: 'Created',\n        accessor: 'created',\n        width: 120,\n        Cell: ({ original }) => (\n          <div style={{ textAlign: 'center' }} >\n            <span>{original.created.substring(0, 10) || '...'}</span>\n          </div>\n        ),\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n\n      {\n        Header: 'Status',\n        accessor: 'status',\n        width: 70,\n        Cell: ({ original }) => (\n          <span style={{ color: original.status ? 'rgb(0,203,131)' : '#dc3545' }}>\n            {original.status ? 'Active' : 'Blocked'}\n          </span>\n        ),\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      },\n    ];\n\n    return (\n      <Table\n        columns={columns}\n        dataPath='users'\n        buttonText='user'\n        startOrder='id DESC'\n      />\n    );\n  }\n}\n\nexport default withHeaderTitle(Users);\n","import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getLocations = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/locations`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getLocations;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Company name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getLocations from './../api/getLocations';\n\nclass Location extends React.Component {\n\n  // inputValue - what we are typing in select field\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n\n        // load options request (always when onChange something)\n        loadOptions={this.loadOptions}\n\n        // get options id from loadOptions ??? TODO, doesn't affects\n        getOptionValue={o => o.id}\n\n        // get option text from loadOptions\n        getOptionLabel={o => o.name}\n\n        // onChange transfer to props\n        value={value}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\n\n\nclass Locations extends React.Component {\n  loadOptions = inputValue => {\n    return getLocations(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        value={value}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n      />\n    );\n  }\n}\n\nexport { Location, Locations };\n\n\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getSkills = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/skills`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getSkills;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getSkills from './../api/getSkills';\n\nclass Skills extends React.Component {\n  loadOptions = inputValue => {\n    return getSkills(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        isMulti={true}\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Skills;\n\n\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nimport { Location } from '../../selects/location';\nimport Skills from '../../selects/skills';\n\nconst Users = props => {\n  const {\n    name,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    location,\n    skills,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin,\n    onChangeLocation,\n    onChangeSkills\n  } = props;\n\n  const locationId = location && `${location.id} - ${location.alias_region} (${location.country})` || '';\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              type=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              type=\"text\"\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-location_id\">Location ID</label>\n\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"location_id\"\n              value={locationId}\n              id=\"edit-location_id\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-city\">City</label>\n\n          <div className=\"col-md-4\">\n            <Location\n              value={location}\n              onChange={location => onChangeLocation(location)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n\n          <div className=\"col-md-10\">\n            <Skills\n              value={skills}\n              onChange={skills => onChangeSkills(skills)}\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-sm-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-sm-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getUsers = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nconst getCurrentUser = employer_id => {\n  return axios.get(\n    `${API_URL}/${subUrl}/users`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'id': { 'like': `${employer_id}`}\n          },\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport { getUsers, getCurrentUser };\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport { getUsers } from './../api/getUsers';\n\nclass User extends React.Component {\n  loadOptions = inputValue => {\n    return getUsers(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => `${o.name} ${o.surname}`}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default User;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getRoles = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/vacancy_roles`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          }\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getRoles;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getRoles from './../api/getRoles';\n\nclass Role extends React.Component {\n  loadOptions = inputValue => {\n    return getRoles(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Role;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getCompanies = inputValue => {\n  return axios.get(\n    `${API_URL}/${subUrl}/companies`,\n    {\n      params: {\n        'filter': {\n          'where': {\n            'name': { 'like': `%${inputValue}%`}\n          },\n          'limit': 50\n        }\n      },\n      headers\n    }\n  )\n}\n\nexport default getCompanies;\n","import React from 'react';\nimport AsyncSelect from 'react-select/async';\n\nimport getCompanies from '../api/getCompanies';\n\nclass Company extends React.Component {\n  loadOptions = inputValue => {\n    return getCompanies(inputValue).then(res => res.data);\n  }\n\n  render() {\n    const { value, onChange } = this.props;\n\n    return (\n      <AsyncSelect\n        menuPlacement=\"auto\"\n        cacheOptions={true}\n        defaultOptions={true}\n        loadOptions={this.loadOptions}\n        getOptionValue={o => o.id}\n        getOptionLabel={o => o.name}\n        onChange={onChange}\n        value={value}\n      />\n    );\n  }\n}\n\nexport default Company;\n","import React from 'react';\nimport ReactQuill from 'react-quill';\n\nimport 'react-quill/dist/quill.snow.css'; // css-styles\n\nconst Editor = ({ value, onChange }) => <ReactQuill value={value} onChange={onChange} />;\n\nexport default Editor;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 1, label: 'Free' },\n  { value: 2, label: 'Bronze' },\n  { value: 3, label: 'Silver' },\n  { value: 4, label: 'Gold' },\n];\n\nconst Plan = ({ value, onChange }) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n      options={options}\n    />\n  );\n}\n\nexport default Plan;\n","import React from 'react';\nimport Select from 'react-select';\n\nconst options = [\n  { value: 'public', label: 'Public' },\n  { value: 'draft', label: 'Draft' },\n  { value: 'expired', label: 'Expired' }\n];\n\nconst Status = ({ value, onChange }) => {\n  return (\n    <Select\n      value={value}\n      onChange={onChange}\n      options={options}\n    />\n  );\n}\n\nexport default Status;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nimport User from '../../selects/user';\nimport Role from '../../selects/role';\nimport Company from '../../selects/company';\nimport Skills from '../../selects/skills';\nimport { Locations } from '../../selects/location';\nimport Editor from '../../selects/editor';\nimport Plan from '../../selects/plan';\nimport Status from '../../selects/status';\n\nconst Jobs = props => {\n  const {\n    name,\n    details,\n    skills,\n    locations,\n    company,\n    role,\n    created,\n    modified,\n    published,\n    views,\n    user,\n    plan,\n    jobStatus,\n\n    onChange,\n    onChangeRole,\n    onChangeLocations,\n    onChangeSkills,\n    onChangeCompany,\n    onChangeDetails,\n    onChangeUser,\n    onChangePlan,\n    onChangeStatus,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  // console.log(logo);\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Job title</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-company\">Company</label>\n          <div className=\"col-md-4\">\n            <Company value={company} onChange={onChangeCompany} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-user\">User</label>\n          <div className=\"col-md-4\">\n            <User value={user} onChange={onChangeUser} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-role\">Role</label>\n          <div className=\"col-md-4\">\n            <Role value={role} onChange={onChangeRole} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-plan\">Plan</label>\n          <div className=\"col-md-4\">\n            <Plan value={plan} onChange={onChangePlan} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-status\">Status</label>\n          <div className=\"col-md-4\">\n            <Status value={jobStatus} onChange={onChangeStatus} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-locations\">Locations</label>\n          <div className=\"col-md-10\">\n            <Locations value={locations} onChange={onChangeLocations} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-skills\">Skills</label>\n          <div className=\"col-md-10\">\n            <Skills value={skills} onChange={onChangeSkills} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-details\">Details</label>\n          <div className=\"col-md-10\">\n            <Editor value={details} onChange={onChangeDetails} />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-views\">Views</label>\n          <div className=\"col-md-4\">\n            <input\n              disabled\n              type=\"text\"\n              name=\"views\"\n              value={views}\n              id=\"edit-views\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n\n\n      {/* <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset> */}\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Skill name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            type=\"number\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            type=\"text\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ name, slug, weight, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Role</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            type=\"text\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              type=\"number\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              className=\"form-control input-rounded\"\n            />\n          </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ name, price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Plan</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"name\"\n          type=\"text\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          type=\"number\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from '../api/apiUrl';\nimport uploadLogoRequest from '../api/uploadLogoRequest';\nimport uploadCoverRequest from '../api/uploadCoverRequest';\nimport uploadImageRequest from '../api/uploadImageRequest';\nimport { getCurrentUser } from '../api/getUsers';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    details: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    role: {},\n    roles: [],\n    company: {},\n    location: {},\n    locations: [],\n    skills: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {},\n    user: {},\n    employer_id: null,\n    plan: {},\n    plan_id: null,\n    jobStatus: ''\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  onChangeRole      = role      => this.setState({ role });\n  onChangeCompany   = company   => this.setState({ company });\n  onChangeSkills    = skills    => this.setState({ skills });\n  onChangeDetails   = details   => this.setState({ details });\n  onChangeLocation  = location  => this.setState({ location });\n  onChangeLocations = locations => this.setState({ locations });\n\n  onChangeUser = user => {\n    this.setState({\n      user,\n      employer_id: user.id // to save employer_id after editRequest\n    });\n  }\n\n  onChangePlan = plan => {\n    this.setState({\n      plan,\n      plan_id: plan.value // to save employer_id after editRequest\n    });\n  }\n\n  onChangeStatus = jobStatus => {\n    this.setState({\n      jobStatus,\n      status: jobStatus.value\n    });\n  }\n\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, role, roles, domain, logo, cover, image, details, published, views, location, locations, skills, company, employer_id, plan_id\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      if (i.name === 'admin') this.setState({ admin: true });\n    });\n\n    // get current user of job\n    getCurrentUser(employer_id)\n      .then(this.setState({\n          // preloader\n          user: {\n            name: 'Loading ...',\n            surname: ''\n          }\n      }))\n      .then(user => this.setState({ user: user.data })\n      // TODO .catch()\n    );\n\n    // get current plan for job (optimize later)\n    plan_id && this.setState({\n      plan: {\n        value: plan_id,\n        label: plan_id === 1 && 'Free' ||\n               plan_id === 2 && 'Bronze' ||\n               plan_id === 3 && 'Silver' ||\n               plan_id === 4 && 'Gold'\n      }\n    })\n\n    // get current status for job (optimize later)\n    status && this.setState({\n      jobStatus: {\n        value: status,\n        label: status === 'public' && 'Public' ||\n               status === 'draft' && 'Draft' ||\n               status === 'expired' && 'Expired'\n      }\n    })\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal edit.jsx:', itemOriginal);\n    // console.log('state edit.jsx:', this.state.user);\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, role, roles, created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, details, published, views, location, locations, skills, company, user, plan, jobStatus\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' ? (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) : (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    skills={skills}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    location={location}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    emailVerified={emailVerified}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    onChangeLocation={this.onChangeLocation}\n                    onChangeSkills={this.onChangeSkills}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    // fields\n                    name={name}\n                    role={role}\n                    logo={logo}\n                    user={user}\n                    views={views}\n                    cover={cover}\n                    skills={skills}\n                    details={details}\n                    company={company}\n                    created={created}\n                    modified={modified}\n                    locations={locations}\n                    published={published}\n                    plan={plan}\n                    jobStatus={jobStatus}\n\n                    // onChanges\n                    onChange={this.onChange}\n                    onChangeRole={this.onChangeRole}\n                    onChangeCompany={this.onChangeCompany}\n                    onChangeSkills={this.onChangeSkills}\n                    onChangeDetails={this.onChangeDetails}\n                    onChangeUser={this.onChangeUser}\n                    onChangeLocations={this.onChangeLocations}\n                    onChangePlan={this.onChangePlan}\n                    onChangeStatus={this.onChangeStatus}\n\n                    // logo\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 6. Plans */}\n              {\n                dataPath === 'plans' && (\n                  <Plans name={name} price={price} onChange={this.onChange} />\n                )\n              }\n\n              {/* Buttons */}\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    {\n                      dataPath === 'vacancies'\n                        ? <Button disabled={!skills || !locations} outline color=\"primary\" type=\"submit\">Save</Button>\n                        : <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                    }\n                  </footer>\n                )\n              }\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nconst Jobs = ({ name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-title\">Job title</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-title\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Jobs from './add/jobs';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    name={name}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal, errorText }) => {\n  const [visible, setVisible] = useState(true);\n\n  const onDismiss = () => setVisible(false);\n\n  // no-errors requests\n  if (!errorText) {\n    return (\n      <>\n        {\n          // delete //\n          type === 'delete' && (\n            <Alert color=\"danger\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n            </Alert>\n          ) ||\n\n          // edit //\n          type === 'edit' && (\n            <Alert color=\"warning\">\n              {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n            </Alert>\n          ) ||\n\n          // add //\n          type === 'add' && <Alert color=\"success\">New item is added</Alert>\n        }\n      </>\n    )\n\n  // if we have an error from any request\n  } else return <Alert color=\"danger\" isOpen={visible} toggle={onDismiss}>{errorText}</Alert>\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n} else if (dataPath === 'vacancies') {\n  // const { surname, password, email } = state;\n  return axios.post(\n    path,\n    { name, },\n    { headers }\n  )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`; // id don't need to pass into body if it is in url\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover, id }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image, location, skills } = state;\n    return axios.patch(\n      path,\n      {\n        id,\n        name,\n        surname,\n        email,\n        admin,\n        emailVerified,\n        status,\n        job_title,\n        experience,\n        image,\n        location_id: location.id,\n        skills,\n      },\n      { headers }\n    )\n\n\n  // 3. jobs //\n  } else if (dataPath === 'vacancies') {\n    const { details, slug, logo, cover, skills, locations, role, company, user, plan, jobStatus, created, modified, published, views, } = state;\n\n    // convert [ {skill1}, {skill2} ] to \"skill1, skill2\"\n    const skillsNames = [];\n    for (let i = 0; i < skills.length; i++) {\n      skillsNames.push(skills[i].name)\n    };\n    const skills_string = skillsNames.toString();\n    console.log(plan);\n\n    return axios.post(\n      `${path}/updateJob`,\n      {\n        // id,\n        name,\n        details,\n        slug,\n        logo: logo ? logo.split('/').pop() : '',   // cut logo url string to filename\n        cover: cover ? cover.split('/').pop() : '', // cut cover url string to filename\n        skills_string,\n        locations,\n        role,\n        company: company.name,\n        employer_id: user.id,\n        plan_id: plan.value,\n        status: jobStatus.value,\n\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n\n        // company:\"google\",\n        // \"created\": \"2020-01-28T10:28:57.000Z\",\n        // \"modified\": \"2020-01-28T11:24:33.864Z\",\n        // \"published\": \"2020-01-01T10:26:41.000Z\",\n        // \"paused\": null,\n        // \"seniority\": 2,\n        // \"experience_from\": 2,\n        // \"experience_up\": 4,\n        // \"application_type\": 0,\n        // \"application_link\": null,\n        // \"employer_id\": 1120,\n        // \"plan_id\": null,\n        // \"company_id\": 9301,\n        // \"hash\": null,\n        // \"source\": null,\n        // \"source_id\": null,\n        // \"status\": null,\n        // \"logo\": \"ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"cover\": \"767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"views\": 4,\n        // \"impressions\": null,\n        // \"saved\": false,\n        // \"applied\": false,\n        // \"description\": \"A job at #Fly in 'Afak. Requires 2-4 years of experience and the following skills: AB Testing.\",\n        // \"logoUrl\": \"https://producthired.com/api/api/containers/logo/download/ca5c6e1b-55cd-4067-9902-a3dcc2c62bdf_250.jpg\",\n        // \"coverUrl\": \"https://producthired.com/api/api/containers/cover/download/767a9ac9-a460-4fcc-9867-46a5576374e6_400.png\",\n        // \"role\": {\n          //   \"id\": 3, \"name\": \"Product Marketing Manager\", \"slug\": \"product-marketing-manager\", \"top\": 1, \"weight\": 2698\n          // }\n\n          // slug,\n          // description,\n          // created,\n          // modified,\n          // published,\n          // views,\n\n\n          // slug, // не нужен\n        },\n        { headers }\n        )\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { id, name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { id, name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { id, name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modals';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    errorText: '',\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({\n          errorText: `${error}`,\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n      })\n    }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  add = (state, dataPath) => {\n    addRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(res => {\n        const { data } = this.state;\n        const { startOrder, dataPath, history } = this.props;\n        // add new item to state [data]\n        const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n      this.setState({\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true,\n        data: newData\n      });\n\n      if (dataPath === 'users') {\n        const { data } = res;\n        this.editAfterAdd(data);\n      }\n\n      // close alert after 2 sec\n      setTimeout(() => {\n        this.setState({ alertIsOpen: false });\n      }, 2000);\n\n    })\n\n    // if error\n    .catch(error => {\n      console.log(error);\n      this.setState({\n        errorText: `${error}`,\n        modalLoading: false,\n        modalIsOpen: false,\n        alertIsOpen: true\n      });\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen, errorText } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} errorText={errorText} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}