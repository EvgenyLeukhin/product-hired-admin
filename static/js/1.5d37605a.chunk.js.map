{"version":3,"sources":["components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/modal/edit/common.jsx","ph-admin/modal/edit/companies.jsx","ph-admin/modal/edit/users.jsx","ph-admin/modal/edit/jobs.jsx","ph-admin/modal/edit/skills.jsx","ph-admin/modal/edit/roles.jsx","ph-admin/modal/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modal/edit.jsx","ph-admin/modal/delete.jsx","ph-admin/modal/add/companies.jsx","ph-admin/modal/add/users.jsx","ph-admin/modal/add/skills.jsx","ph-admin/modal/add.jsx","ph-admin/modal/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","setHeaderTitle","headerTitle","pubsub","publish","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","assign","props","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","customFiltering","filter","onChange","style","width","event","target","debounceTimeout","Common","_ref","id","name","react_default","Fragment","className","htmlFor","disabled","type","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","Spinner","src","alt","ref","Users","surname","email","job_title","experience","emailVerified","status","created","modified","roles","admin","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","substring","length","map","i","concat","url","checked","Jobs","description","published","views","rows","resize","Skills","markers","Roles","Plans","price","headers","Content-Type","Authorization","token","uploadLogoRequest","formData","axios","post","API_URL","subUrl","uploadCoverRequest","uploadImageRequest","EditModal","React","createRef","state","adminObj","e","_this","setState","defineProperty","_this$state","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","then","res","data","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","_this$props","editRequest","dataPath","_this2","_this$props$itemOrigi","itemOriginal","_this$props2","closeModal","modalLoading","_this$state2","onClick","action","common","companies","users","jobs","skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","autoComplete","password","AddModal","addRequest","text","add_companies","add_users","add_skills","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modal_delete","modal_edit","add","Alerts","Alert","AddButton","loading","addClick","cln","is-loading","getCount","filtered","where","forEach","like","get","params","count","getData","startOrder","pageSize","page","sorted","limit","skip","order","desc","path","patch","delete","Table","modalType","alertIsOpen","idValue","editAfterAdd","deleteClick","original","dataWitoutDeleted","push","setTimeout","editClick","edit","newData","history","document","addEventListener","keyCode","_this3","idColumn","Header","accessor","textAlign","Cell","Filter","_ref2","controlsColumn","sortable","filterable","_ref3","columns","buttonText","alerts","table_AddButton","modal","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/1.5d37605a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import React from 'react';\n\nconst Common = ({ id, name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-id\">Id</label>\n\n        <div className=\"col-md-2\">\n          <input\n            name=\"id\"\n            disabled\n            value={id}\n            id=\"edit-id\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Common;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nconst Users = props => {\n  const {\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              type=\"email\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-10\">\n            <input\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-md-4 roles\">\n            {\n              roles && roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Jobs = props => {\n  const {\n    slug,\n    description,\n    created,\n    modified,\n    published,\n    views,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"textarea\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-description\">Description</label>\n\n          <div className=\"col-md-4\">\n            <textarea\n              rows={5}\n              style={{ resize: 'none' }}\n              name=\"description\"\n              value={description}\n              id=\"edit-description\"\n              onChange={onChange}\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-views\">Views</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"views\"\n              value={views}\n              id=\"edit-views\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ slug, weight, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"slug\"\n          value={slug}\n          id=\"edit-slug\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"weight\"\n          value={weight}\n          id=\"edit-weight\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Common from './edit/common';\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\nimport uploadImageRequest from './../api/uploadImageRequest';\n\nimport './scss/edit.scss';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    description: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    roles: [],\n\n    // logo\n    logo: null,\n    logoLoading: false,\n\n    // cover\n    cover: null,\n    coverLoading: false,\n\n    // image\n    image: null,\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {}\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template or only adminObj\n        roles: prevState.roles ? prevState.roles.concat(adminObj) : [adminObj]\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, roles, domain, logo, cover, image, description, published, views\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, roles, domain, logo, cover, image, description, published, views\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      if (i.name === 'admin') this.setState({ admin: true });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal', itemOriginal);\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, roles,\n      created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, description, published, views\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' ? (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) : (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* Common inputs */}\n              <Common id={id} name={name} onChange={this.onChange} />\n\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'users' && (\n                  <Users\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    emailVerified={emailVerified}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    slug={slug}\n                    description={description}\n                    created={created} modified={modified} published={published}\n                    views={views}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles slug={slug} weight={weight} onChange={this.onChange} />\n                )\n              }\n\n              { dataPath === 'plans' && <Plans price={price} onChange={this.onChange} /> }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} - {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    name,\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"name\"\n              value={name}\n              id=\"edit-name\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              autoComplete=\"off\"\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\n\nconst Users = ({ name, surname, password, email, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"surname\"\n            value={surname}\n            id=\"edit-surname\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"password\"\n            value={password}\n            id=\"edit-password\"\n            onChange={onChange}\n            type=\"password\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"email\"\n            value={email}\n            id=\"edit-email\"\n            onChange={onChange}\n            type=\"email\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Users;\n","import React from 'react';\n\nconst Skills = ({ name, weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            autoComplete=\"off\"\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Skills from './add/skills';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    admin: false,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      name, email, slug, weight, price, markers, surname, domain, logo, logoLoading, cover, coverLoading, password\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n\n              {/* 1. Companies */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    name={name}\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    name={name}\n                    email={email}\n                    password={password}\n                    surname={surname}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 3. Jobs */}\n\n\n\n              {/* 4. Skills */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    name={name}\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal }) => {\n  return (\n    <>\n      {\n        // delete\n        type === 'delete' && (\n          <Alert color=\"danger\">\n            {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n          </Alert>\n        ) ||\n\n        // edit\n        type === 'edit' && (\n          <Alert color=\"warning\">\n            {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n          </Alert>\n        ) ||\n\n        // add\n        type === 'add' && (\n          <Alert color=\"success\">\n            New item is added\n          </Alert>\n        ) ||\n\n        // error\n        type === 'error' && (\n          <Alert color=\"danger\">\n            <b>Error</b>. Something is wrong!\n          </Alert>\n        )\n      }\n    </>\n  )\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, password, email } = state;\n    return axios.post(path, { name, surname, password, email }, { headers })\n\n  // 3. jobs //\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover, id }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image } = state;\n    return axios.patch(\n      path,\n      { id, name, surname, email, admin, emailVerified, status, job_title, experience, image },\n      { headers }\n    )\n\n\n  // 3. jobs //\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { id, name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { id, name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { id, name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modal';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    idValue: ''\n  }\n\n  editAfterAdd = data => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: data,\n      alertIsOpen: false\n    });\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({ alertIsOpen: true, modalType: 'error' });\n      })\n  }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n    .catch(error => console.log(error)) // TODO\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n    // state - state of modal (editing data when submit form)\n    add = (state, dataPath) => {\n      addRequest(state, dataPath)\n        .then(this.setState({ modalLoading: true }))\n\n        .then(res => {\n          const { data } = this.state;\n          const { startOrder, dataPath, history } = this.props;\n          // add new item to state [data]\n          const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true,\n          data: newData\n        });\n\n        if (dataPath === 'users') {\n          const { data } = res;\n          this.editAfterAdd(data);\n        }\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n\n      })\n      .catch(error => console.log(error)) // TODO\n    }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}