{"version":3,"sources":["components/Header/HeaderTitle.js","ph-admin/table/customFiltering.js","ph-admin/modal/edit/common.jsx","ph-admin/modal/edit/companies.jsx","ph-admin/modal/edit/users.jsx","ph-admin/modal/edit/jobs.jsx","ph-admin/modal/edit/skills.jsx","ph-admin/modal/edit/roles.jsx","ph-admin/modal/edit/plans.jsx","ph-admin/api/uploadLogoRequest.js","ph-admin/api/uploadCoverRequest.js","ph-admin/api/uploadImageRequest.js","ph-admin/modal/edit.jsx","ph-admin/modal/delete.jsx","ph-admin/modal/add/common.jsx","ph-admin/modal/add/companies.jsx","ph-admin/modal/add/users.jsx","ph-admin/modal/add/skills.jsx","ph-admin/modal/add/roles.jsx","ph-admin/modal/add/plans.jsx","ph-admin/modal/add.jsx","ph-admin/modal/index.jsx","ph-admin/alerts/index.jsx","ph-admin/table/AddButton.jsx","ph-admin/api/getCount.js","ph-admin/api/getData.js","ph-admin/api/addRequest.js","ph-admin/api/editRequest.js","ph-admin/api/deleteRequest.js","ph-admin/table/index.jsx"],"names":["withHeaderTitle","WrappedComponent","_Component","HeaderTitle","Object","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_Users_effectiveuser_Desktop_product_hired_admin_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","newProp","setHeaderTitle","headerTitle","pubsub","publish","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","assign","props","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","debounce_input_decorator__WEBPACK_IMPORTED_MODULE_1__","customFiltering","filter","onChange","style","width","event","target","debounceTimeout","Common","_ref","id","name","react_default","Fragment","className","htmlFor","disabled","type","Companies","slug","domain","weight","logo","logoLoading","onUploadLogo","fileInputLogo","cover","coverLoading","onUploadCover","fileInputCover","Spinner","src","alt","ref","Users","surname","email","job_title","experience","emailVerified","status","created","modified","roles","admin","image","imageLoading","fileInputImage","onUploadImage","onChangeAdmin","substring","map","i","concat","url","checked","Jobs","description","published","views","rows","resize","Skills","markers","Roles","Plans","price","headers","Content-Type","Authorization","token","uploadLogoRequest","formData","axios","post","API_URL","subUrl","uploadCoverRequest","uploadImageRequest","EditModal","React","createRef","state","adminObj","e","_this","setState","defineProperty","_this$state","Date","toISOString","prevState","preventDefault","FormData","uploadLogo","current","files","append","then","res","data","catch","error","console","log","uploadCover","uploadImage","file","onSubmit","assertThisInitialized","_this$props","editRequest","dataPath","_this2","_this$props$itemOrigi","itemOriginal","_this$props2","closeModal","modalLoading","_this$state2","onClick","action","common","companies","users","jobs","skills","edit_roles","plans","Button","outline","color","DeleteModal","deleteRequest","required","password","length","AddModal","addRequest","text","add_common","add_companies","add_users","add_skills","add_roles","add_plans","Modal","modalIsOpen","lib_default","ariaHideApp","isOpen","overlayClassName","onRequestClose","modal_delete","modal_edit","add","Alerts","Alert","AddButton","loading","addClick","cln","is-loading","getCount","filtered","where","forEach","like","get","params","count","getData","startOrder","pageSize","page","sorted","limit","skip","order","desc","path","location","fullName","patch","delete","Table","modalType","alertIsOpen","idValue","deleteClick","original","dataWitoutDeleted","push","setTimeout","editClick","edit","newData","document","addEventListener","keyCode","_this3","idColumn","Header","accessor","textAlign","Cell","Filter","_ref2","controlsColumn","sortable","filterable","_ref3","columns","buttonText","alerts","table_AddButton","modal","es","manual","pages","resizable","toConsumableArray","onFetchData","Math","ceil"],"mappings":"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","file":"static/js/1.b793b1e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport pubsub from \"pubsub-js\";\r\n\r\nexport function withHeaderTitle(WrappedComponent) {\r\n    return class HeaderTitle extends Component {\r\n        render() {\r\n            const newProp = {\r\n                setHeaderTitle: headerTitle => {\r\n                    pubsub.publish(\"setPageTitle\", headerTitle);\r\n                }\r\n            };\r\n            return <WrappedComponent {...this.props} {...newProp} />;\r\n        }\r\n    };\r\n}\r\n","import React from 'react';\nimport { Input } from 'debounce-input-decorator';\n\nconst customFiltering = (filter, onChange) => {\n  return (\n    <Input\n      style={{ width: '100%' }}\n      value={filter ? filter.value : ''}\n      onChange={event => onChange(event.target.value)}\n      debounceTimeout={800}\n    />\n  );\n}\n\nexport default customFiltering;\n","import React from 'react';\n\nconst Common = ({ id, name, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-id\">Id</label>\n\n        <div className=\"col-md-2\">\n          <input\n            name=\"id\"\n            disabled\n            value={id}\n            id=\"edit-id\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"name\"\n            value={name}\n            id=\"edit-name\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Common;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nconst Users = props => {\n  const {\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    created,\n    modified,\n    roles,\n    admin,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              type=\"email\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-10\">\n            <input\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles</label>\n\n          <div className=\"col-md-4 roles\">\n            {\n              roles ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-md-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Jobs = props => {\n  const {\n    slug,\n    description,\n    created,\n    modified,\n    published,\n    views,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"textarea\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-description\">Description</label>\n\n          <div className=\"col-md-4\">\n            <textarea\n              rows={5}\n              style={{ resize: 'none' }}\n              name=\"description\"\n              value={description}\n              id=\"edit-description\"\n              onChange={onChange}\n              className=\"form-control\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Created</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"created\"\n              value={created && created.substring(0, 10)}\n              id=\"edit-created\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-modified\">Modified</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"modified\"\n              value={modified && modified.substring(0, 10)}\n              id=\"edit-modified\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-created\">Published</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"published\"\n              value={published && published.substring(0, 10)}\n              id=\"edit-published\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-4 col-form-label text-bold text-right\" htmlFor=\"edit-views\">Views</label>\n\n          <div className=\"col-md-2\">\n            <input\n              name=\"views\"\n              value={views}\n              id=\"edit-views\"\n              disabled\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Jobs;\n","import React from 'react';\n\nconst Skills = ({ weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n\n        <div className=\"col-md-4\">\n          <input\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ slug, weight, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"slug\"\n          value={slug}\n          id=\"edit-slug\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"weight\"\n          value={weight}\n          id=\"edit-weight\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n\n      <div className=\"col-md-4\">\n        <input\n          name=\"price\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadLogoRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/logo`, formData, { headers }\n  );\n}\n\nexport default uploadLogoRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\nconst uploadCoverRequest = formData => {\n  return axios.post(\n    `${API_URL}/${subUrl}/vacancies/cover`, formData, { headers }\n  );\n}\n\nexport default uploadCoverRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { 'Content-Type': 'multipart/form-data', Authorization: token };\n\n\nconst uploadImageRequest = (formData, id) => {\n  return axios.post(\n    `${API_URL}/${subUrl}/users/${id}/uploadImage`, formData, { headers }\n  );\n}\n\nexport default uploadImageRequest;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Common from './edit/common';\nimport Companies from './edit/companies';\nimport Users from './edit/users';\nimport Jobs from './edit/jobs';\nimport Skills from './edit/skills';\nimport Roles from './edit/roles';\nimport Plans from './edit/plans';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\nimport uploadImageRequest from './../api/uploadImageRequest';\n\nimport './scss/edit.scss';\n\nclass EditModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: null,\n    name: '',\n    surname: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    description: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: true,\n    job_title: '',\n    experience: null,\n    views: null,\n    created: null,\n    modified: null,\n    published: null,\n    roles: [],\n\n    // logo\n    logo: null,\n    logoLoading: false,\n\n    // cover\n    cover: null,\n    coverLoading: false,\n\n    // image\n    image: null,\n    imageLoading: false,\n\n    admin: false,\n    adminObj: {}\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onChangeAdmin = e => {\n    const { id, admin } = this.state;\n\n    if (e.target.checked && !admin) {\n      // create template for injecting to roles[]\n      const adminObj = {\n        id,\n        name: 'admin',\n        description: null,\n        created:  new Date().toISOString(),\n        modified: new Date().toISOString()\n      };\n\n      this.setState(prevState => ({\n        admin: true,\n        // concat current roles[] with admin template\n        roles: prevState.roles.concat(adminObj)\n      }));\n\n    } else {\n      this.setState(prevState => ({\n        admin: false,\n        // delete admin item from roles[]\n        roles: prevState.roles.filter(i => i.name !== 'admin')\n      }));\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { editRequest, dataPath } = this.props;\n\n    // 3. editRequest func recieve current state of this component\n    editRequest(state, dataPath);\n  }\n\n  componentDidMount() {\n    // 1. Get values from the prop itemOriginal\n    const {\n      itemOriginal: {\n        id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, roles, domain, logo, cover, image, description, published, views\n      }\n    } = this.props;\n\n    // 2. Set values to the state\n    this.setState({\n      id, name, surname, email, slug, weight, price, markers, emailVerified, status, job_title, experience, created, modified, roles, domain, logo, cover, image, description, published, views\n    });\n\n    // check for admin rights and save admin object if it is\n    roles && roles.map(i => {\n      if (i.name === 'admin') this.setState({ admin: true });\n    });\n  }\n\n  render() {\n    const { itemOriginal, dataPath, closeModal, modalLoading } = this.props;\n    // console.log('itemOriginal', itemOriginal);\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, roles,\n      created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, description, published, views\n    } = this.state;\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        {\n          dataPath === 'users' ? (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name} ${itemOriginal.surname}\"`}</b>\n            </h4>\n          ) : (\n            <h4 className=\"edit-container__title\">\n              Edit <b>{`\"${itemOriginal.id} - ${itemOriginal.name}\"`}</b>\n            </h4>\n          )\n        }\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* Common inputs */}\n              <Common id={id} name={name} onChange={this.onChange} />\n\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'users' && (\n                  <Users\n                    email={email}\n                    roles={roles}\n                    admin={admin}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    onChange={this.onChange}\n                    onChangeAdmin={this.onChangeAdmin}\n                    emailVerified={emailVerified}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'vacancies' && (\n                  <Jobs\n                    slug={slug}\n                    description={description}\n                    created={created} modified={modified} published={published}\n                    views={views}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles slug={slug} weight={weight} onChange={this.onChange} />\n                )\n              }\n\n              { dataPath === 'plans' && <Plans price={price} onChange={this.onChange} /> }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Save</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default EditModal;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport Spinner from '../../components/Spinner';\n\nimport './scss/delete.scss';\n\nconst DeleteModal = ({ dataPath, itemOriginal, closeModal, deleteRequest, modalLoading }) => {\n  const { id, name, surname } = itemOriginal;\n\n  const title = () => {\n    if (dataPath === 'users') {\n      return <span>{id} - <b>{name} - {surname}</b>?</span>\n    } else {\n      return <span>{id} - <b>{name}</b>?</span>\n    }\n  }\n  return (\n    <>\n      <div className='ReactModal__delete__title'>\n        <span>Are you sure you want to delete </span> <br/>\n        {title()}\n      </div>\n\n      {\n        modalLoading ? <Spinner /> : (\n          <div className='ReactModal__delete__buttons'>\n            <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n            <Button outline color=\"danger\" onClick={deleteRequest}>Delete</Button>\n          </div>\n        )\n      }\n    </>\n  );\n}\n\nexport default DeleteModal;\n","import React from 'react';\n\nconst Common = ({ name, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-name\">Name</label>\n\n      <div className=\"col-md-10\">\n        <input\n          required\n          name=\"name\"\n          value={name}\n          id=\"edit-name\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Common;\n","import React from 'react';\n\nimport Spinner from '../../../components/Spinner';\n\nconst Companies = props => {\n  const {\n    slug,\n    domain,\n    weight,\n    onChange,\n\n    // logo\n    logo, logoLoading, onUploadLogo, fileInputLogo,\n\n    // cover\n    cover, coverLoading, onUploadCover, fileInputCover,\n\n  } = props;\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-domain\">Domain</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              name=\"domain\"\n              value={domain}\n              id=\"edit-domain\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              name=\"slug\"\n              value={slug}\n              id=\"edit-slug\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n          <div className=\"col-md-4\">\n            <input\n              required\n              name=\"weight\"\n              value={weight}\n              id=\"edit-weight\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-logo\">Logo</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              logoLoading ? <Spinner /> : (\n                logo ? <img className=\"logo\" src={logo} alt=\"logo\" /> : <divc className=\"no-logo\">No logo</divc>\n              )\n            }\n\n            <input\n              required\n              name=\"logo\"\n              value={logo}\n              id=\"edit-logo\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputLogo} onChange={onUploadLogo} />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-cover\">Cover</label>\n          <div className=\"col-md-4 text-center\">\n            {\n              coverLoading ? <Spinner /> : (\n                cover ? <img className=\"cover\" src={cover} alt=\"cover\" /> : <div className=\"no-cover\">No cover</div>\n              )\n            }\n\n            <input\n              required\n              name=\"cover\"\n              value={cover}\n              id=\"edit-cover\"\n              onChange={onChange}\n              type=\"url\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputCover} onChange={onUploadCover} />\n          </div>\n        </div>\n      </fieldset>\n    </>\n  );\n}\n\nexport default Companies;\n","import React from 'react';\nimport Spinner from '../../../components/Spinner';\n\nconst Users = props => {\n  const {\n    password,\n    surname,\n    email,\n    job_title,\n    experience,\n    emailVerified,\n    status,\n    roles,\n    admin,\n    image,\n    imageLoading,\n    fileInputImage,\n    onUploadImage,\n    onChange,\n    onChangeAdmin\n  } = props;\n\n  // console.log('users.jsx: ', emailVerified);\n\n  return (\n    <>\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-password\">Password</label>\n\n          <div className=\"col-md-10\">\n            <input\n              name=\"password\"\n              value={password}\n              id=\"edit-password\"\n              onChange={onChange}\n              type=\"password\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-surname\">Surname</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"surname\"\n              value={surname}\n              id=\"edit-surname\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-email\">Email</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"email\"\n              value={email}\n              id=\"edit-email\"\n              onChange={onChange}\n              type=\"email\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-job_title\">Job title</label>\n\n          <div className=\"col-md-10\">\n            <input\n              name=\"job_title\"\n              value={job_title}\n              id=\"edit-job_title\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset>\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Experience</label>\n\n          <div className=\"col-md-4\">\n            <input\n              name=\"experience\"\n              value={experience}\n              id=\"edit-experience\"\n              onChange={onChange}\n              type=\"number\"\n              className=\"form-control input-rounded\"\n            />\n          </div>\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-experience\">Roles ---</label>\n\n          <div className=\"col-md-4 roles\">\n            {\n              roles.length ? roles.map(i => {\n                return <span>{`${i.name} `}&nbsp;</span>;\n              }) : <span>No roles</span>\n            }\n          </div>\n        </div>\n      </fieldset>\n\n      <fieldset className=\"edit-container__images\">\n        <div className=\"form-group row\">\n          <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-image\">Avatar ---</label>\n\n          <div className=\"col-md-4 text-center\">\n            {\n              imageLoading ? <Spinner /> : (\n                image && image.url ? <img className=\"image\" src={image.url} alt=\"image\" /> : <div className=\"no-image\">No image</div>\n              )\n            }\n\n            <input\n              name=\"image\"\n              value={image && image.url}\n              id=\"edit-image\"\n              onChange={onChange}\n              type=\"text\"\n              className=\"form-control input-rounded\"\n            />\n\n            <input type=\"file\" ref={fileInputImage} onChange={onUploadImage} />\n          </div>\n\n\n          <label className=\"col-md-2 col-form-label text-bold text-right\">User options</label>\n\n          <div className=\"col-lg-4\">\n            <div className=\"form-check\">\n              <label className=\"edit-admin\">\n                <input\n                  name=\"admin\"\n                  id=\"edit-admin\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={admin}\n                  onChange={onChangeAdmin}\n                />\n                Admin rights ---\n              </label>\n            </div>\n\n            <div className=\"form-check\">\n                <label className=\"edit-status\">\n                  <input\n                    name=\"status\"\n                    id=\"edit-status\"\n                    className=\"form-check-input\"\n                    type=\"checkbox\"\n                    checked={status}\n                    onChange={onChange}\n                  />\n                  Active status\n                </label>\n              </div>\n\n            <div className=\"form-check\">\n              <label className=\"edit-emailVerified\">\n                <input\n                  name=\"emailVerified\"\n                  id=\"edit-emailVerified\"\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={emailVerified}\n                  onChange={onChange}\n                />\n                Email verified ---\n              </label>\n            </div>\n          </div>\n        </div>\n      </fieldset>\n    </>\n  )\n};\n\nexport default Users;\n","import React from 'react';\n\nconst Skills = ({ weight, slug, markers, onChange }) => (\n  <>\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            name=\"weight\"\n            value={weight}\n            id=\"edit-weight\"\n            onChange={onChange}\n            type=\"number\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n        <div className=\"col-md-4\">\n          <input\n            required\n            name=\"slug\"\n            value={slug}\n            id=\"edit-slug\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n\n    <fieldset>\n      <div className=\"form-group row\">\n        <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-aliases\">Aliases</label>\n\n        <div className=\"col-md-4\">\n          <input\n            required\n            name=\"markers\"\n            value={markers}\n            id=\"edit-aliases\"\n            onChange={onChange}\n            type=\"text\"\n            className=\"form-control input-rounded\"\n          />\n        </div>\n      </div>\n    </fieldset>\n  </>\n);\n\nexport default Skills;\n","import React from 'react';\n\nconst Roles = ({ slug, weight, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-slug\">Slug</label>\n\n      <div className=\"col-md-4\">\n        <input\n          required\n          name=\"slug\"\n          value={slug}\n          id=\"edit-slug\"\n          onChange={onChange}\n          type=\"text\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-weight\">Weight</label>\n\n      <div className=\"col-md-4\">\n        <input\n          required\n          name=\"weight\"\n          value={weight}\n          id=\"edit-weight\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Roles;\n","import React from 'react';\n\nconst Plans = ({ price, onChange }) => (\n  <fieldset>\n    <div className=\"form-group row\">\n      <label className=\"col-md-2 col-form-label text-bold text-right\" htmlFor=\"edit-price\">Price</label>\n\n      <div className=\"col-md-2\">\n        <input\n          required\n          name=\"price\"\n          value={price}\n          id=\"edit-price\"\n          onChange={onChange}\n          type=\"number\"\n          className=\"form-control input-rounded\"\n        />\n      </div>\n    </div>\n  </fieldset>\n);\n\nexport default Plans;\n","import React from 'react';\n\nimport { Button } from \"reactstrap\";\nimport Spinner from '../../components/Spinner';\n\nimport Common from './add/common';\nimport Companies from './add/companies';\nimport Users from './add/users';\nimport Skills from './add/skills';\nimport Roles from './add/roles';\nimport Plans from './add/plans';\n\nimport { API_URL, subUrl } from './../api/apiUrl';\nimport uploadLogoRequest from './../api/uploadLogoRequest';\nimport uploadCoverRequest from './../api/uploadCoverRequest';\nimport uploadImageRequest from './../api/uploadImageRequest';\n\nimport './scss/edit.scss';\n\nclass AddModal extends React.Component {\n  fileInputLogo = React.createRef();\n  fileInputCover = React.createRef();\n  fileInputImage = React.createRef();\n\n  state = {\n    id: '',\n    name: '',\n    surname: '',\n    password: '',\n    domain: '',\n    email: '',\n    emailVerified: false,\n    slug: '',\n    weight: null,\n    price: null,\n    markers: null,\n    status: false,\n    job_title: '',\n    experience: null,\n    created: null,\n    modified: null,\n    roles: [],\n\n    // logo\n    logo: '',\n    logoLoading: false,\n\n    // cover\n    cover: '',\n    coverLoading: false,\n\n    // image\n    image: '',\n    imageLoading: false,\n\n    admin: false,\n  }\n\n  onChange = e => {\n    if (e.target.type === 'checkbox') {\n      this.setState({ [e.target.name]: e.target.checked })\n    } else {\n      this.setState({ [e.target.name]: e.target.value })\n    }\n  }\n\n  onUploadLogo = e => {\n    e.preventDefault();\n    this.setState({ logoLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadLogo = this.fileInputLogo.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadLogo);\n\n    // uploadLogoRequest\n    uploadLogoRequest(formData)\n      .then(res => {\n        this.setState({\n          logo: `${API_URL}/${subUrl}/containers/logo/download/${res.data.name}`,\n          logoLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadCover = e => {\n    e.preventDefault();\n    this.setState({ coverLoading: true });\n\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadCover = this.fileInputCover.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadCover);\n\n    // uploadLogoRequest\n    uploadCoverRequest(formData)\n      .then(res => {\n        this.setState({\n          cover: `${API_URL}/${subUrl}/containers/cover/download/${res.data.name}`,\n          coverLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onUploadImage = e => {\n    e.preventDefault();\n    this.setState({ imageLoading: true });\n    // add new form data\n    const formData = new FormData();\n\n    // get image from the browser memory\n    const uploadImage = this.fileInputImage.current.files[0];\n\n    // append this file to form data\n    formData.append('file', uploadImage);\n\n    const { id } = this.state;\n\n    // uploadLogoRequest\n    uploadImageRequest(formData, id)\n      .then(res => {\n        this.setState({\n          image: { url: `${API_URL}${res.data.file.url}` },\n          imageLoading: false\n        })\n      })\n\n      // TODO\n      .catch(error => console.log(error))\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { state } = this;\n    const { addRequest, dataPath } = this.props;\n\n    // // 3. editRequest func recieve current state of this component\n    addRequest(state, dataPath);\n  }\n\n  render() {\n    const { dataPath, closeModal, modalLoading, text } = this.props;\n\n    // get data from the state to have onChange ability\n    const {\n      id, name, email, slug, weight, price, markers, surname, emailVerified, status, job_title, experience, roles,\n      created, modified, domain, logo, logoLoading, cover, coverLoading, image, imageLoading, admin, password\n    } = this.state;\n\n    // console.log('add.jsx: ', emailVerified);\n\n\n    return (\n      <section className=\"section-container edit-container\">\n        <span className=\"ion-close-round edit-container__close\" onClick={closeModal} />\n\n        <h4 className=\"edit-container__title\">Add {text}</h4>\n\n        <div className=\"cardbox\">\n          <div className=\"cardbox-body\">\n            <form action=\"\" onSubmit={this.onSubmit}>\n              {/* Common inputs */}\n              <Common id={id} name={name} onChange={this.onChange} />\n\n              {/* 1. Companies --- */}\n              {\n                dataPath === 'companies' && (\n                  <Companies\n                    slug={slug}\n                    domain={domain}\n                    weight={weight}\n                    onChange={this.onChange}\n\n                    // logo\n                    logo={logo}\n                    logoLoading={logoLoading}\n                    onUploadLogo={this.onUploadLogo}\n                    fileInputLogo={this.fileInputLogo}\n\n                    // cover\n                    cover={cover}\n                    coverLoading={coverLoading}\n                    onUploadCover={this.onUploadCover}\n                    fileInputCover={this.fileInputCover}\n                  />\n                )\n              }\n\n              {/* 2. Users +-- */}\n              {\n                dataPath === 'users' && (\n                  <Users\n                    email={email}\n                    password={password}\n                    roles={roles}\n                    admin={admin}\n                    status={status}\n                    surname={surname}\n                    created={created}\n                    modified={modified}\n                    job_title={job_title}\n                    experience={experience}\n                    onChange={this.onChange}\n                    emailVerified={emailVerified}\n\n                    // image\n                    image={image}\n                    imageLoading={imageLoading}\n                    onUploadImage={this.onUploadImage}\n                    fileInputImage={this.fileInputImage}\n                  />\n                )\n              }\n\n              {/* 4. Skills +++ */}\n              {\n                dataPath === 'skills' && (\n                  <Skills\n                    slug={slug}\n                    weight={weight}\n                    markers={markers}\n                    onChange={this.onChange}\n                  />\n                )\n              }\n\n              {/* 5. Roles */}\n              {\n                dataPath === 'vacancy_roles' && (\n                  <Roles slug={slug} weight={weight} onChange={this.onChange} />\n                )\n              }\n\n              {/* 6. Plans */}\n              { dataPath === 'plans' && <Plans price={price} onChange={this.onChange} /> }\n\n              {\n                modalLoading ? (\n                  <div className=\"edit-container__is-loading\">\n                    <Spinner />\n                  </div>\n                ) : (\n                  <footer className=\"edit-container__buttons\">\n                    <Button outline color=\"secondary\" onClick={closeModal}>Cancel</Button>\n                    <Button outline color=\"primary\" type=\"submit\">Add</Button>\n                  </footer>\n                )\n              }\n\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default AddModal;\n","import React from \"react\";\nimport ReactModal from 'react-modal';\n\nimport EditModal from './edit';\nimport DeleteModal from './delete';\nimport AddModal from './add';\n\nimport './scss/common.scss';\n\nconst Modal = props => {\n  const {\n    type,\n    text,\n    dataPath,\n    modalIsOpen,\n    closeModal,\n    itemOriginal,\n    addRequest,\n    editRequest,\n    deleteRequest,\n    modalLoading,\n  } = props;\n\n  return (\n    <>\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={modalIsOpen}\n        overlayClassName=\"ReactModal__Overlay\"\n        className={`ReactModal ReactModal__${type}`}\n        onRequestClose={modalLoading ? false : closeModal}\n      >\n        {\n          // delete\n          type === 'delete' && (\n            <DeleteModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              deleteRequest={deleteRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // edit\n          type === 'edit' && (\n            <EditModal\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              editRequest={editRequest}\n              modalLoading={modalLoading}\n            />\n          ) ||\n\n          // add\n          type === 'add' && (\n            <AddModal\n              text={text}\n              dataPath={dataPath}\n              closeModal={closeModal}\n              itemOriginal={itemOriginal}\n              addRequest={addRequest}\n              modalLoading={modalLoading}\n            />\n          )\n        }\n      </ReactModal>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { Alert } from \"reactstrap\";\n\nconst Alerts = ({ type, itemOriginal }) => {\n  return (\n    <>\n      {\n        // delete\n        type === 'delete' && (\n          <Alert color=\"danger\">\n            {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is deleted`}</b>\n          </Alert>\n        ) ||\n\n        // edit\n        type === 'edit' && (\n          <Alert color=\"warning\">\n            {`\"${itemOriginal.id}`} - <b>{`${itemOriginal.name}\" is edited`}</b>\n          </Alert>\n        ) ||\n\n        // add\n        type === 'add' && (\n          <Alert color=\"success\">\n            New item is added\n          </Alert>\n        ) ||\n\n        // error\n        type === 'error' && (\n          <Alert color=\"danger\">\n            <b>Error</b>. Something is wrong!\n          </Alert>\n        )\n      }\n    </>\n  )\n}\n\nexport default Alerts;\n","import React from 'react';\nimport { Button } from \"reactstrap\";\n\nimport cln from 'classnames';\n\n\nconst AddButton = ({ text, loading, addClick }) => (\n  <Button\n    type=\"button\"\n    color=\"primary\"\n    onClick={addClick}\n    className={cln('add-button', { 'is-loading': loading })}\n  >\n    Add {text}\n  </Button>\n);\n\n\nexport default AddButton;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\n// state - own react-table state\n// data-path - url-parh for request\nconst getCount = (state, dataPath) => {\n  const { filtered } = state;\n\n  // where template for request\n  const where = {};\n\n  // when we are typing something inside filter-fields state of react-table is changing\n  // we take filter inputs values and inject to request params\n  filtered.forEach(i => {\n    if (i.id === 'id') where[i.id] = i.value\n    else               where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // get-request for count\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}/count`, {\n    // inject where to params\n    params: { where },\n    headers\n  })\n    // return count (number)\n    .then(res => res.data.count)\n};\n\nexport default getCount;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst getData = (state, dataPath, startOrder) => {\n  const { pageSize, page, filtered, sorted } = state; // from own state of react-table\n\n  // filter-template\n  const filter = {\n    where: {},\n    limit: pageSize,\n    skip: page * pageSize,\n    order: startOrder\n  };\n\n  // inject where to filter\n  filtered.forEach(i => {\n    if (i.id === 'id') filter.where[i.id] = i.value\n    else               filter.where[i.id] = { 'like': '%' + i.value + '%' }\n  });\n\n  // inject order to filter\n  sorted.forEach(i => {\n    const desc = i.desc ? 'DESC' : 'ASC'\n    filter.order = `${i.id} ${desc}`;\n  });\n\n  // get-request for data\n  return axios.get(`${API_URL}/${subUrl}/${dataPath}`, {\n    params: { filter },\n    headers,\n  })\n    // return [data]\n    .then(res => res.data)\n};\n\nexport default getData;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst addRequest = (state, dataPath) => {\n  const { name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.post(path, { name, slug, domain, weight, logo, cover }, { headers })\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { password, surname, email, emailVerified, admin, status, job_title, experience, image } = state;\n\n    // console.log('addRequest.jsx: ', emailVerified);\n\n    // do not match the name or other field\n    return axios.post(\n      path,\n      {\n        name,\n        password,\n        surname,\n        email,\n        experience,\n        job_title,\n        status,\n\n        \"emailVerified\": emailVerified, // - not working\n        \"admin\": admin, // -\n        \"image\": image, // -\n        \"skills\": [],\n        \"location\": {\n          \"fullName\": ''\n        },\n        \"roles\": '',\n      },\n      { headers }\n    )\n\n  // 3. jobs //\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.post(path, { name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.post(path, { name, slug, weight }, { headers })\n\n\n  // 6. plans\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.post(path, { name, price }, { headers })\n  }\n};\n\nexport default addRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst editRequest = (state, dataPath) => {\n  const { id, name } = state;\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n\n  // 1. companies //\n  if (dataPath === 'companies') {\n    const { slug, domain, weight, logo, cover } = state;\n    return axios.patch(path, { name, slug, domain, weight, logo, cover, id }, { headers })\n\n\n  // 2. users //\n  } else if (dataPath === 'users') {\n    const { surname, email, emailVerified, admin, status, job_title, experience, image } = state;\n    return axios.patch(\n      path,\n      { id, name, surname, email, admin, emailVerified, status, job_title, experience, image },\n      { headers }\n    )\n\n\n  // 3. jobs //\n\n\n  // 4. skills //\n  } else if (dataPath === 'skills') {\n    const { slug, markers, weight } = state;\n    return axios.patch(path, { id, name, weight, slug, markers }, { headers })\n\n\n  // 5. vacancy_roles //\n  } else if (dataPath === 'vacancy_roles') {\n    const { slug, weight } = state;\n    return axios.patch(path, { id, name, slug, weight }, { headers })\n\n\n  // 6. plans //\n  } else if (dataPath === 'plans') {\n    const { price } = state;\n    return axios.patch(path, { id, name, price }, { headers })\n  }\n};\n\nexport default editRequest;\n","import axios from 'axios';\n\nimport { API_URL, subUrl } from './apiUrl';\nimport token from './getToken';\n\nconst headers = { Authorization: token };\n\nconst deleteRequest = (dataPath, id) => {\n  const path = `${API_URL}/${subUrl}/${dataPath}/${id}`;\n  return axios.delete(path, { headers })\n};\n\nexport default deleteRequest;\n","import React from 'react';\nimport ReactTable from 'react-table';\n\nimport Modal from '../modal';\nimport Alerts from '../alerts';\nimport AddButton from './AddButton';\n\nimport getCount from '../api/getCount';\nimport getData from '../api/getData';\nimport addRequest from '../api/addRequest';\nimport editRequest from '../api/editRequest';\nimport deleteRequest from '../api/deleteRequest';\nimport customFiltering from '../table/customFiltering';\n\nimport './styles.scss';\n\n\nclass Table extends React.Component {\n  // major state of application //\n  state = {\n    // table //\n    data: [],\n    count: null,\n    loading: false,\n    itemOriginal: null, // rowInfo, when clicked to delete or edit\n\n    // modal //\n    modalType: '',\n    modalIsOpen: false,\n    modalLoading: false,\n\n    // alert //\n    alertIsOpen: false,\n    idValue: ''\n  }\n\n  deleteClick = original => () => {\n    this.setState({\n      modalType: 'delete',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  delete = () => {\n    const dataWitoutDeleted = [];\n    const { dataPath } = this.props;\n    const { data, itemOriginal: { id } } = this.state;\n\n    // start modal-loader\n    this.setState({ modalLoading: true });\n\n    deleteRequest(dataPath, id)\n      // if delete ok\n      .then(() => {\n        for (let i = 0; i < data.length; i++) {\n          // skiping deleted item and forming new array without it\n          if (data[i].id !== id) {\n            // push all data without deleted item to new array\n            dataWitoutDeleted.push(data[i]);\n          }\n        }\n        this.setState({\n          // set new data w\\o deleted item\n          data: dataWitoutDeleted,\n          modalIsOpen: false,\n          modalLoading: false\n        })\n      })\n\n      // show alert and reload page with timeOut\n      .then(() => {\n        this.setState({ alertIsOpen: true });\n\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n      })\n\n      // if error\n      .catch(error => {\n        console.log(error);\n        this.setState({ alertIsOpen: true, modalType: 'error' });\n      })\n  }\n\n  editClick = original => () => {\n    this.setState({\n      modalType: 'edit',\n      modalIsOpen: true,\n      itemOriginal: original,\n      alertIsOpen: false\n    });\n  }\n\n  // state - state of modal (editing data when submit form)\n  edit = (state, dataPath) => {\n    editRequest(state, dataPath)\n      .then(this.setState({ modalLoading: true }))\n\n      .then(() => {\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true\n        });\n\n        // get current table-data from the state w\\o editing change (when render only)\n        const { data } = this.state;\n\n        // find editing data in all data by id\n        for (let i = 0; i < data.length; i++) {\n          if (data[i].id === state.id) {\n            // inject editing data to table state\n            data[i] = state;\n          }\n        }\n\n        // change table state with editing data\n        this.setState({ data });\n\n        // close alert after 2 sec\n        setTimeout(() => {\n          this.setState({ alertIsOpen: false });\n        }, 2000);\n    })\n    .catch(error => console.log(error)) // TODO\n  }\n\n  addClick = () => {\n    this.setState({\n      modalType: 'add',\n      modalIsOpen: true,\n      alertIsOpen: false\n    });\n  }\n\n    // state - state of modal (editing data when submit form)\n    add = (state, dataPath) => {\n      addRequest(state, dataPath)\n        .then(this.setState({ modalLoading: true }))\n\n        .then(res => {\n          const { data } = this.state;\n          const { startOrder } = this.props;\n          // add new item to state [data]\n          const newData = startOrder ? [res.data].concat(data) : data.concat(res.data);\n\n        this.setState({\n          modalLoading: false,\n          modalIsOpen: false,\n          alertIsOpen: true,\n          data: newData\n        })\n\n          // close alert after 2 sec\n          setTimeout(() => {\n            this.setState({ alertIsOpen: false });\n          }, 2000);\n      })\n      .catch(error => console.log(error)) // TODO\n    }\n\n  componentDidMount() {\n    document.addEventListener('keyup', e => {\n      if (e.keyCode === 27) this.setState({ modalIsOpen: false });\n    });\n  }\n\n  render() {\n    const idColumn = [\n      {\n        Header: 'Id',\n        accessor: 'id',\n        width: 60,\n        style: { textAlign: 'right' },\n        Cell: ({ original }) => <div>{original.id || '...'}</div>,\n        Filter: ({ filter, onChange }) => customFiltering(filter, onChange)\n      }\n    ];\n\n    const controlsColumn = [\n      {\n        Header: '',\n        width: 65,\n        sortable: false,\n        filterable: false,\n        Cell: ({ original }) => (\n          <div className=\"rt-custom__controls\">\n            {\n              dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n                <i className=\"ion-android-delete\" onClick={this.deleteClick(original)} />\n              )\n            }\n            <i className=\"ion-edit\" onClick={this.editClick(original)}/>\n          </div>\n        )\n      }\n    ];\n\n    const { columns, dataPath, startOrder, buttonText } = this.props;\n    const { loading, count, data, modalIsOpen, itemOriginal, modalType, modalLoading, alertIsOpen } = this.state;\n\n    return (\n      <div className={`${dataPath}-table`}>\n        { alertIsOpen && <Alerts type={modalType} itemOriginal={itemOriginal} /> }\n\n        {\n          dataPath !== 'plans' && dataPath !== 'vacancy_roles' && (\n            <AddButton\n              addClick={this.addClick}\n              text={buttonText}\n              loading={loading}\n            />\n          )\n        }\n\n        <Modal\n          type={modalType}\n          modalIsOpen={modalIsOpen}\n          modalLoading={modalLoading}\n          itemOriginal={itemOriginal}\n          dataPath={dataPath}\n          addRequest={this.add}\n          editRequest={this.edit}\n          deleteRequest={this.delete}\n          text={buttonText}\n          closeModal={() => this.setState({ modalIsOpen: false })}\n        />\n\n        <ReactTable\n          data={data}\n          manual={true}\n          pages={count}\n          resizable={true}\n          filterable={true}\n          loading={loading}\n          className=\"-striped -highlight\"\n          columns={[...idColumn, ...columns, ...controlsColumn]}\n          dataPath={dataPath}\n          startOrder={startOrder}\n          onFetchData={state => {\n            // use ReactTable own state to forming a request\n            // it refresh always when we're doing any actions with this table\n            this.setState({ loading: true });\n\n            // axios -> getCount\n            getCount(state, dataPath)\n              .then(count => this.setState({ count: Math.ceil(count / state.pageSize) }))\n\n              // axios -> getData\n              .then(() => getData(state, dataPath, startOrder))\n              .then(data => {\n                this.setState({ data, loading: false })\n              })\n              .catch(error => console.log(error)) // TODO\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"],"sourceRoot":""}